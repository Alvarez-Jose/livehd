Things to test:
1. test clocked logic as well

Quick things to do:
1. Replace hier_test_diagram with a graphviz diagram that looks good

Things to do:
1. Create boundary curve
2. Create floorplans

dump hier I created to dotfile and view it!

Things to optimize:
1. area adjustment algorithm is naive, and inserts area when it isn't necessary
2. iterating over LGraphs could possibly use some work
3. preloading vectors with sizes known ahead of time could save some time
4. check to see if graph lib has fast functions to do what I'm doing myself
5. set/map -> absl versions
6. map -> pair of arrays (have to profile this to see if it makes a difference)
7. use ephemeral sets since the number of nodes in the graph doesn't change that often 

Refactors:
1. move recursive versions of functions into lambdas or just use static counters idk
2. replace '&' in lambdas with actual things used if # things used is small
3. seperate verbose output per-stage
4. replace my typedefs with actual graph typedefs
5. more comments...?