circuit UOPCodeFDivDecoder :
  module UOPCodeFDivDecoder : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip uopc : UInt<7>, sigs : {ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, singleIn : UInt<1>, singleOut : UInt<1>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>}}
    
    node _T = and(io.uopc, UInt<7>("h00")) @[Decode.scala 14:65]
    node _T_1 = eq(_T, UInt<7>("h00")) @[Decode.scala 14:121]
    node decoder_2 = or(UInt<1>("h00"), _T_1) @[Decode.scala 15:30]
    node _T_2 = and(io.uopc, UInt<7>("h0a")) @[Decode.scala 14:65]
    node _T_3 = eq(_T_2, UInt<7>("h00")) @[Decode.scala 14:121]
    node _T_4 = and(io.uopc, UInt<7>("h09")) @[Decode.scala 14:65]
    node _T_5 = eq(_T_4, UInt<7>("h00")) @[Decode.scala 14:121]
    node _T_6 = or(UInt<1>("h00"), _T_3) @[Decode.scala 15:30]
    node decoder_3 = or(_T_6, _T_5) @[Decode.scala 15:30]
    node _T_7 = and(io.uopc, UInt<7>("h01")) @[Decode.scala 14:65]
    node _T_8 = eq(_T_7, UInt<7>("h01")) @[Decode.scala 14:121]
    node decoder_7 = or(UInt<1>("h00"), _T_8) @[Decode.scala 15:30]
    node decoder_8 = or(UInt<1>("h00"), _T_8) @[Decode.scala 15:30]
    node _T_9 = or(UInt<1>("h00"), _T_3) @[Decode.scala 15:30]
    node decoder_13 = or(_T_9, _T_5) @[Decode.scala 15:30]
    node _T_10 = and(io.uopc, UInt<7>("h04")) @[Decode.scala 14:65]
    node _T_11 = eq(_T_10, UInt<7>("h00")) @[Decode.scala 14:121]
    node _T_12 = and(io.uopc, UInt<7>("h03")) @[Decode.scala 14:65]
    node _T_13 = eq(_T_12, UInt<7>("h03")) @[Decode.scala 14:121]
    node _T_14 = or(UInt<1>("h00"), _T_11) @[Decode.scala 15:30]
    node decoder_14 = or(_T_14, _T_13) @[Decode.scala 15:30]
    node decoder_15 = or(UInt<1>("h00"), _T_1) @[Decode.scala 15:30]
    io.sigs.ldst <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.wen <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.ren1 <= decoder_2 @[fdiv.scala 61:40]
    io.sigs.ren2 <= decoder_3 @[fdiv.scala 61:40]
    io.sigs.ren3 <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.swap12 <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.swap23 <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.singleIn <= decoder_7 @[fdiv.scala 61:40]
    io.sigs.singleOut <= decoder_8 @[fdiv.scala 61:40]
    io.sigs.fromint <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.toint <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.fastpipe <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.fma <= UInt<1>("h00") @[fdiv.scala 61:40]
    io.sigs.div <= decoder_13 @[fdiv.scala 61:40]
    io.sigs.sqrt <= decoder_14 @[fdiv.scala 61:40]
    io.sigs.wflags <= decoder_15 @[fdiv.scala 61:40]
    
