circuit FetchTargetQueue :
  module FetchTargetQueue : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {pc : UInt<40>, next_pc : UInt<40>, edge_inst : UInt<1>[1], insts : UInt<32>[4], exp_insts : UInt<32>[4], sfbs : UInt<1>[4], sfb_masks : UInt<8>[4], sfb_dests : UInt<4>[4], shadowable_mask : UInt<1>[4], shadowed_mask : UInt<1>[4], cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_type : UInt<3>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ftq_idx : UInt<4>, mask : UInt<4>, br_mask : UInt<4>, ghist : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}, lhist : UInt<1>[1], xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, bp_debug_if_oh : UInt<1>[4], bp_xcpt_if_oh : UInt<1>[4], end_half : {valid : UInt<1>, bits : UInt<16>}, bpd_meta : UInt<1>[1], fsrc : UInt<2>, tsrc : UInt<2>}}, enq_idx : UInt<4>, flip deq : {valid : UInt<1>, bits : UInt<4>}, get_ftq_pc : {flip ftq_idx : UInt<4>, entry : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, ghist : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}, pc : UInt<40>, com_pc : UInt<40>, next_val : UInt<1>, next_pc : UInt<40>}[2], flip debug_ftq_idx : UInt<4>[1], debug_fetch_pc : UInt<40>[1], flip redirect : {valid : UInt<1>, bits : UInt<4>}, flip brupdate : {b1 : {resolve_mask : UInt<8>, mispredict_mask : UInt<8>}, b2 : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, valid : UInt<1>, mispredict : UInt<1>, taken : UInt<1>, cfi_type : UInt<3>, pc_sel : UInt<2>, jalr_target : UInt<40>, target_offset : SInt<1>}}, bpdupdate : {valid : UInt<1>, bits : {is_mispredict_update : UInt<1>, is_repair_update : UInt<1>, btb_mispredicts : UInt<4>, pc : UInt<40>, br_mask : UInt<4>, cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_is_br : UInt<1>, cfi_is_jal : UInt<1>, cfi_is_jalr : UInt<1>, ghist : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}, lhist : UInt<1>[1], target : UInt<40>, meta : UInt<120>[1]}}, ras_update : UInt<1>, ras_update_idx : UInt<5>, ras_update_pc : UInt<40>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg bpd_ptr : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[fetch-target-queue.scala 133:27]
    reg deq_ptr : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[fetch-target-queue.scala 134:27]
    reg enq_ptr : UInt<4>, clock with : (reset => (reset, UInt<4>("h01"))) @[fetch-target-queue.scala 135:27]
    node _T = add(enq_ptr, UInt<1>("h01")) @[util.scala 203:14]
    node _T_1 = tail(_T, 1) @[util.scala 203:14]
    node _T_2 = bits(_T_1, 3, 0) @[util.scala 203:20]
    node _T_3 = add(_T_2, UInt<1>("h01")) @[util.scala 203:14]
    node _T_4 = tail(_T_3, 1) @[util.scala 203:14]
    node _T_5 = bits(_T_4, 3, 0) @[util.scala 203:20]
    node _T_6 = eq(_T_5, bpd_ptr) @[fetch-target-queue.scala 137:68]
    node _T_7 = add(enq_ptr, UInt<1>("h01")) @[util.scala 203:14]
    node _T_8 = tail(_T_7, 1) @[util.scala 203:14]
    node _T_9 = bits(_T_8, 3, 0) @[util.scala 203:20]
    node _T_10 = eq(_T_9, bpd_ptr) @[fetch-target-queue.scala 138:46]
    node full = or(_T_6, _T_10) @[fetch-target-queue.scala 137:81]
    reg pcs : UInt<40>[16], clock @[fetch-target-queue.scala 141:21]
    smem meta : UInt<120>[1][16], undefined @[fetch-target-queue.scala 142:29]
    reg ram : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}[16], clock @[fetch-target-queue.scala 143:21]
    smem ghist_0 : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}[16], undefined @[fetch-target-queue.scala 144:43]
    smem ghist_1 : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}[16], undefined @[fetch-target-queue.scala 144:43]
    node do_enq = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>} @[fetch-target-queue.scala 155:42]
    _T_11.ras_idx <= UInt<5>("h00") @[fetch-target-queue.scala 155:42]
    _T_11.new_saw_branch_taken <= UInt<1>("h00") @[fetch-target-queue.scala 155:42]
    _T_11.new_saw_branch_not_taken <= UInt<1>("h00") @[fetch-target-queue.scala 155:42]
    _T_11.current_saw_branch_not_taken <= UInt<1>("h00") @[fetch-target-queue.scala 155:42]
    _T_11.old_history <= UInt<64>("h00") @[fetch-target-queue.scala 155:42]
    reg prev_ghist : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}, clock with : (reset => (reset, _T_11)) @[fetch-target-queue.scala 155:27]
    wire _T_12 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>} @[fetch-target-queue.scala 156:42]
    _T_12.start_bank <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.ras_idx <= UInt<5>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.ras_top <= UInt<40>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_npc_plus4 <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_is_ret <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_is_call <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.br_mask <= UInt<4>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_type <= UInt<3>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_mispredicted <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_taken <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_idx.bits <= UInt<2>("h00") @[fetch-target-queue.scala 156:42]
    _T_12.cfi_idx.valid <= UInt<1>("h00") @[fetch-target-queue.scala 156:42]
    reg prev_entry : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock with : (reset => (reset, _T_12)) @[fetch-target-queue.scala 156:27]
    reg prev_pc : UInt<40>, clock with : (reset => (reset, UInt<40>("h00"))) @[fetch-target-queue.scala 157:27]
    when do_enq : @[fetch-target-queue.scala 158:17]
      pcs[enq_ptr] <= io.enq.bits.pc @[fetch-target-queue.scala 160:28]
      wire _T_13 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>} @[fetch-target-queue.scala 162:25]
      _T_13.cfi_idx.bits <= io.enq.bits.cfi_idx.bits @[fetch-target-queue.scala 164:25]
      _T_13.cfi_idx.valid <= io.enq.bits.cfi_idx.valid @[fetch-target-queue.scala 164:25]
      _T_13.cfi_taken <= io.enq.bits.cfi_idx.valid @[fetch-target-queue.scala 167:29]
      _T_13.cfi_mispredicted <= UInt<1>("h00") @[fetch-target-queue.scala 168:32]
      _T_13.cfi_type <= io.enq.bits.cfi_type @[fetch-target-queue.scala 169:29]
      _T_13.cfi_is_call <= io.enq.bits.cfi_is_call @[fetch-target-queue.scala 170:29]
      _T_13.cfi_is_ret <= io.enq.bits.cfi_is_ret @[fetch-target-queue.scala 171:29]
      _T_13.cfi_npc_plus4 <= io.enq.bits.cfi_npc_plus4 @[fetch-target-queue.scala 172:29]
      _T_13.ras_top <= io.enq.bits.ras_top @[fetch-target-queue.scala 173:29]
      _T_13.ras_idx <= io.enq.bits.ghist.ras_idx @[fetch-target-queue.scala 174:29]
      node _T_14 = and(io.enq.bits.br_mask, io.enq.bits.mask) @[fetch-target-queue.scala 175:52]
      _T_13.br_mask <= _T_14 @[fetch-target-queue.scala 175:29]
      _T_13.start_bank <= UInt<1>("h00") @[fetch-target-queue.scala 176:29]
      node _T_15 = dshr(prev_entry.br_mask, prev_entry.cfi_idx.bits) @[fetch-target-queue.scala 183:27]
      node _T_16 = bits(_T_15, 0, 0) @[fetch-target-queue.scala 183:27]
      node _T_17 = bits(prev_entry.cfi_idx.bits, 1, 0) @[frontend.scala 87:32]
      node _T_18 = dshl(UInt<1>("h01"), _T_17) @[OneHot.scala 58:35]
      wire _T_19 : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>} @[frontend.scala 89:27]
      node _T_20 = dshr(_T_18, UInt<1>("h00")) @[util.scala 373:29]
      node _T_21 = dshr(_T_18, UInt<1>("h01")) @[util.scala 373:29]
      node _T_22 = dshr(_T_18, UInt<2>("h02")) @[util.scala 373:29]
      node _T_23 = dshr(_T_18, UInt<2>("h03")) @[util.scala 373:29]
      node _T_24 = or(_T_20, _T_21) @[util.scala 373:45]
      node _T_25 = or(_T_24, _T_22) @[util.scala 373:45]
      node _T_26 = or(_T_25, _T_23) @[util.scala 373:45]
      node _T_27 = and(_T_16, prev_entry.cfi_taken) @[frontend.scala 92:84]
      node _T_28 = mux(_T_27, _T_18, UInt<4>("h00")) @[frontend.scala 92:73]
      node _T_29 = not(_T_28) @[frontend.scala 92:69]
      node _T_30 = and(_T_26, _T_29) @[frontend.scala 92:67]
      node _T_31 = not(UInt<4>("h00")) @[frontend.scala 93:45]
      node _T_32 = mux(prev_entry.cfi_idx.valid, _T_30, _T_31) @[frontend.scala 91:44]
      node _T_33 = and(prev_entry.br_mask, _T_32) @[frontend.scala 91:39]
      _T_19.ras_idx is invalid @[frontend.scala 97:19]
      _T_19.new_saw_branch_taken is invalid @[frontend.scala 97:19]
      _T_19.new_saw_branch_not_taken is invalid @[frontend.scala 97:19]
      _T_19.current_saw_branch_not_taken is invalid @[frontend.scala 97:19]
      _T_19.old_history is invalid @[frontend.scala 97:19]
      _T_19.current_saw_branch_not_taken <= UInt<1>("h00") @[frontend.scala 98:48]
      node _T_34 = neq(_T_33, UInt<1>("h00")) @[frontend.scala 99:53]
      node _T_35 = or(_T_34, prev_ghist.current_saw_branch_not_taken) @[frontend.scala 99:61]
      node _T_36 = and(_T_16, prev_entry.cfi_taken) @[frontend.scala 100:48]
      node _T_37 = and(_T_36, prev_entry.cfi_idx.valid) @[frontend.scala 100:61]
      node _T_38 = shl(prev_ghist.old_history, 1) @[frontend.scala 100:91]
      node _T_39 = or(_T_38, UInt<1>("h01")) @[frontend.scala 100:96]
      node _T_40 = shl(prev_ghist.old_history, 1) @[frontend.scala 101:91]
      node _T_41 = mux(_T_35, _T_40, prev_ghist.old_history) @[frontend.scala 101:37]
      node _T_42 = mux(_T_37, _T_39, _T_41) @[frontend.scala 100:37]
      _T_19.old_history <= _T_42 @[frontend.scala 100:31]
      node _T_43 = and(prev_entry.cfi_idx.valid, prev_entry.cfi_is_call) @[frontend.scala 125:42]
      node _T_44 = add(prev_ghist.ras_idx, UInt<1>("h01")) @[util.scala 203:14]
      node _T_45 = tail(_T_44, 1) @[util.scala 203:14]
      node _T_46 = bits(_T_45, 4, 0) @[util.scala 203:20]
      node _T_47 = and(prev_entry.cfi_idx.valid, prev_entry.cfi_is_ret) @[frontend.scala 126:42]
      node _T_48 = sub(prev_ghist.ras_idx, UInt<1>("h01")) @[util.scala 220:14]
      node _T_49 = tail(_T_48, 1) @[util.scala 220:14]
      node _T_50 = bits(_T_49, 4, 0) @[util.scala 220:20]
      node _T_51 = mux(_T_47, _T_50, prev_ghist.ras_idx) @[frontend.scala 126:31]
      node _T_52 = mux(_T_43, _T_46, _T_51) @[frontend.scala 125:31]
      _T_19.ras_idx <= _T_52 @[frontend.scala 125:25]
      node _T_53 = mux(io.enq.bits.ghist.current_saw_branch_not_taken, io.enq.bits.ghist, _T_19) @[fetch-target-queue.scala 178:24]
      write mport _T_54 = ghist_0[enq_ptr], clock
      _T_54.ras_idx <= _T_53.ras_idx
      _T_54.new_saw_branch_taken <= _T_53.new_saw_branch_taken
      _T_54.new_saw_branch_not_taken <= _T_53.new_saw_branch_not_taken
      _T_54.current_saw_branch_not_taken <= _T_53.current_saw_branch_not_taken
      _T_54.old_history <= _T_53.old_history
      write mport _T_55 = ghist_1[enq_ptr], clock
      _T_55.ras_idx <= _T_53.ras_idx
      _T_55.new_saw_branch_taken <= _T_53.new_saw_branch_taken
      _T_55.new_saw_branch_not_taken <= _T_53.new_saw_branch_not_taken
      _T_55.current_saw_branch_not_taken <= _T_53.current_saw_branch_not_taken
      _T_55.old_history <= _T_53.old_history
      write mport _T_56 = meta[enq_ptr], clock
      _T_56[0] <= io.enq.bits.bpd_meta[0]
      ram[enq_ptr].start_bank <= _T_13.start_bank @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].ras_idx <= _T_13.ras_idx @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].ras_top <= _T_13.ras_top @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_npc_plus4 <= _T_13.cfi_npc_plus4 @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_is_ret <= _T_13.cfi_is_ret @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_is_call <= _T_13.cfi_is_call @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].br_mask <= _T_13.br_mask @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_type <= _T_13.cfi_type @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_mispredicted <= _T_13.cfi_mispredicted @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_taken <= _T_13.cfi_taken @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_idx.bits <= _T_13.cfi_idx.bits @[fetch-target-queue.scala 195:18]
      ram[enq_ptr].cfi_idx.valid <= _T_13.cfi_idx.valid @[fetch-target-queue.scala 195:18]
      prev_pc <= io.enq.bits.pc @[fetch-target-queue.scala 197:16]
      prev_entry.start_bank <= _T_13.start_bank @[fetch-target-queue.scala 198:16]
      prev_entry.ras_idx <= _T_13.ras_idx @[fetch-target-queue.scala 198:16]
      prev_entry.ras_top <= _T_13.ras_top @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_npc_plus4 <= _T_13.cfi_npc_plus4 @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_is_ret <= _T_13.cfi_is_ret @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_is_call <= _T_13.cfi_is_call @[fetch-target-queue.scala 198:16]
      prev_entry.br_mask <= _T_13.br_mask @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_type <= _T_13.cfi_type @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_mispredicted <= _T_13.cfi_mispredicted @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_taken <= _T_13.cfi_taken @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_idx.bits <= _T_13.cfi_idx.bits @[fetch-target-queue.scala 198:16]
      prev_entry.cfi_idx.valid <= _T_13.cfi_idx.valid @[fetch-target-queue.scala 198:16]
      prev_ghist.ras_idx <= _T_53.ras_idx @[fetch-target-queue.scala 199:16]
      prev_ghist.new_saw_branch_taken <= _T_53.new_saw_branch_taken @[fetch-target-queue.scala 199:16]
      prev_ghist.new_saw_branch_not_taken <= _T_53.new_saw_branch_not_taken @[fetch-target-queue.scala 199:16]
      prev_ghist.current_saw_branch_not_taken <= _T_53.current_saw_branch_not_taken @[fetch-target-queue.scala 199:16]
      prev_ghist.old_history <= _T_53.old_history @[fetch-target-queue.scala 199:16]
      node _T_57 = add(enq_ptr, UInt<1>("h01")) @[util.scala 203:14]
      node _T_58 = tail(_T_57, 1) @[util.scala 203:14]
      node _T_59 = bits(_T_58, 3, 0) @[util.scala 203:20]
      enq_ptr <= _T_59 @[fetch-target-queue.scala 201:13]
      skip @[fetch-target-queue.scala 158:17]
    io.enq_idx <= enq_ptr @[fetch-target-queue.scala 204:14]
    io.bpdupdate.valid <= UInt<1>("h00") @[fetch-target-queue.scala 206:22]
    io.bpdupdate.bits.meta[0] is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.target is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.lhist[0] is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.ghist.ras_idx is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.ghist.new_saw_branch_taken is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.ghist.new_saw_branch_not_taken is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.ghist.current_saw_branch_not_taken is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.ghist.old_history is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_is_jalr is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_is_jal is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_is_br is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_mispredicted is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_taken is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_idx.bits is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.cfi_idx.valid is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.br_mask is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.pc is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.btb_mispredicts is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.is_repair_update is invalid @[fetch-target-queue.scala 207:22]
    io.bpdupdate.bits.is_mispredict_update is invalid @[fetch-target-queue.scala 207:22]
    when io.deq.valid : @[fetch-target-queue.scala 209:23]
      deq_ptr <= io.deq.bits @[fetch-target-queue.scala 210:13]
      skip @[fetch-target-queue.scala 209:23]
    reg first_empty : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[fetch-target-queue.scala 214:28]
    wire ras_update : UInt<1>
    ras_update <= UInt<1>("h00")
    wire ras_update_pc : UInt<40>
    ras_update_pc <= UInt<40>("h00")
    wire ras_update_idx : UInt<5>
    ras_update_idx <= UInt<5>("h00")
    reg _T_60 : UInt<1>, clock @[fetch-target-queue.scala 222:31]
    _T_60 <= ras_update @[fetch-target-queue.scala 222:31]
    io.ras_update <= _T_60 @[fetch-target-queue.scala 222:21]
    reg _T_61 : UInt, clock @[fetch-target-queue.scala 223:31]
    _T_61 <= ras_update_pc @[fetch-target-queue.scala 223:31]
    io.ras_update_pc <= _T_61 @[fetch-target-queue.scala 223:21]
    reg _T_62 : UInt, clock @[fetch-target-queue.scala 224:31]
    _T_62 <= ras_update_idx @[fetch-target-queue.scala 224:31]
    io.ras_update_idx <= _T_62 @[fetch-target-queue.scala 224:21]
    reg bpd_update_mispredict : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[fetch-target-queue.scala 226:38]
    reg bpd_update_repair : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[fetch-target-queue.scala 227:34]
    reg bpd_repair_idx : UInt<4>, clock @[fetch-target-queue.scala 228:27]
    reg bpd_end_idx : UInt<4>, clock @[fetch-target-queue.scala 229:24]
    reg bpd_repair_pc : UInt<40>, clock @[fetch-target-queue.scala 230:26]
    node _T_63 = or(bpd_update_repair, bpd_update_mispredict) @[fetch-target-queue.scala 233:27]
    node _T_64 = mux(_T_63, bpd_repair_idx, bpd_ptr) @[fetch-target-queue.scala 233:8]
    node bpd_idx = mux(io.redirect.valid, io.redirect.bits, _T_64) @[fetch-target-queue.scala 232:20]
    reg bpd_entry : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock @[fetch-target-queue.scala 234:26]
    bpd_entry.start_bank <= ram[bpd_idx].start_bank @[fetch-target-queue.scala 234:26]
    bpd_entry.ras_idx <= ram[bpd_idx].ras_idx @[fetch-target-queue.scala 234:26]
    bpd_entry.ras_top <= ram[bpd_idx].ras_top @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_npc_plus4 <= ram[bpd_idx].cfi_npc_plus4 @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_is_ret <= ram[bpd_idx].cfi_is_ret @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_is_call <= ram[bpd_idx].cfi_is_call @[fetch-target-queue.scala 234:26]
    bpd_entry.br_mask <= ram[bpd_idx].br_mask @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_type <= ram[bpd_idx].cfi_type @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_mispredicted <= ram[bpd_idx].cfi_mispredicted @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_taken <= ram[bpd_idx].cfi_taken @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_idx.bits <= ram[bpd_idx].cfi_idx.bits @[fetch-target-queue.scala 234:26]
    bpd_entry.cfi_idx.valid <= ram[bpd_idx].cfi_idx.valid @[fetch-target-queue.scala 234:26]
    wire _T_65 : UInt @[fetch-target-queue.scala 235:32]
    _T_65 is invalid @[fetch-target-queue.scala 235:32]
    when UInt<1>("h01") : @[fetch-target-queue.scala 235:32]
      _T_65 <= bpd_idx @[fetch-target-queue.scala 235:32]
      node _T_66 = or(_T_65, UInt<4>("h00")) @[fetch-target-queue.scala 235:32]
      node _T_67 = bits(_T_66, 3, 0) @[fetch-target-queue.scala 235:32]
      read mport bpd_ghist = ghist_0[_T_67], clock @[fetch-target-queue.scala 235:32]
      skip @[fetch-target-queue.scala 235:32]
    wire bpd_lhist : UInt<1>[1] @[fetch-target-queue.scala 239:12]
    bpd_lhist[0] <= UInt<1>("h00") @[fetch-target-queue.scala 239:12]
    wire _T_68 : UInt @[fetch-target-queue.scala 241:28]
    _T_68 is invalid @[fetch-target-queue.scala 241:28]
    when UInt<1>("h01") : @[fetch-target-queue.scala 241:28]
      _T_68 <= bpd_idx @[fetch-target-queue.scala 241:28]
      node _T_69 = or(_T_68, UInt<4>("h00")) @[fetch-target-queue.scala 241:28]
      node _T_70 = bits(_T_69, 3, 0) @[fetch-target-queue.scala 241:28]
      read mport bpd_meta = meta[_T_70], clock @[fetch-target-queue.scala 241:28]
      skip @[fetch-target-queue.scala 241:28]
    reg bpd_pc : UInt, clock @[fetch-target-queue.scala 242:26]
    bpd_pc <= pcs[bpd_idx] @[fetch-target-queue.scala 242:26]
    node _T_71 = add(bpd_idx, UInt<1>("h01")) @[util.scala 203:14]
    node _T_72 = tail(_T_71, 1) @[util.scala 203:14]
    node _T_73 = bits(_T_72, 3, 0) @[util.scala 203:20]
    reg bpd_target : UInt, clock @[fetch-target-queue.scala 243:27]
    bpd_target <= pcs[_T_73] @[fetch-target-queue.scala 243:27]
    when io.redirect.valid : @[fetch-target-queue.scala 245:28]
      bpd_update_mispredict <= UInt<1>("h00") @[fetch-target-queue.scala 246:27]
      bpd_update_repair <= UInt<1>("h00") @[fetch-target-queue.scala 247:27]
      skip @[fetch-target-queue.scala 245:28]
    else : @[fetch-target-queue.scala 248:52]
      reg _T_74 : UInt<1>, clock @[fetch-target-queue.scala 248:23]
      _T_74 <= io.brupdate.b2.mispredict @[fetch-target-queue.scala 248:23]
      when _T_74 : @[fetch-target-queue.scala 248:52]
        bpd_update_mispredict <= UInt<1>("h01") @[fetch-target-queue.scala 249:27]
        reg _T_75 : UInt, clock @[fetch-target-queue.scala 250:37]
        _T_75 <= io.brupdate.b2.uop.ftq_idx @[fetch-target-queue.scala 250:37]
        bpd_repair_idx <= _T_75 @[fetch-target-queue.scala 250:27]
        reg _T_76 : UInt, clock @[fetch-target-queue.scala 251:37]
        _T_76 <= enq_ptr @[fetch-target-queue.scala 251:37]
        bpd_end_idx <= _T_76 @[fetch-target-queue.scala 251:27]
        skip @[fetch-target-queue.scala 248:52]
      else : @[fetch-target-queue.scala 252:39]
        when bpd_update_mispredict : @[fetch-target-queue.scala 252:39]
          bpd_update_mispredict <= UInt<1>("h00") @[fetch-target-queue.scala 253:27]
          bpd_update_repair <= UInt<1>("h01") @[fetch-target-queue.scala 254:27]
          node _T_77 = add(bpd_repair_idx, UInt<1>("h01")) @[util.scala 203:14]
          node _T_78 = tail(_T_77, 1) @[util.scala 203:14]
          node _T_79 = bits(_T_78, 3, 0) @[util.scala 203:20]
          bpd_repair_idx <= _T_79 @[fetch-target-queue.scala 255:27]
          skip @[fetch-target-queue.scala 252:39]
        else : @[fetch-target-queue.scala 256:69]
          reg _T_80 : UInt<1>, clock @[fetch-target-queue.scala 256:44]
          _T_80 <= bpd_update_mispredict @[fetch-target-queue.scala 256:44]
          node _T_81 = and(bpd_update_repair, _T_80) @[fetch-target-queue.scala 256:34]
          when _T_81 : @[fetch-target-queue.scala 256:69]
            bpd_repair_pc <= bpd_pc @[fetch-target-queue.scala 257:27]
            node _T_82 = add(bpd_repair_idx, UInt<1>("h01")) @[util.scala 203:14]
            node _T_83 = tail(_T_82, 1) @[util.scala 203:14]
            node _T_84 = bits(_T_83, 3, 0) @[util.scala 203:20]
            bpd_repair_idx <= _T_84 @[fetch-target-queue.scala 258:27]
            skip @[fetch-target-queue.scala 256:69]
          else : @[fetch-target-queue.scala 259:35]
            when bpd_update_repair : @[fetch-target-queue.scala 259:35]
              node _T_85 = add(bpd_repair_idx, UInt<1>("h01")) @[util.scala 203:14]
              node _T_86 = tail(_T_85, 1) @[util.scala 203:14]
              node _T_87 = bits(_T_86, 3, 0) @[util.scala 203:20]
              bpd_repair_idx <= _T_87 @[fetch-target-queue.scala 260:27]
              node _T_88 = add(bpd_repair_idx, UInt<1>("h01")) @[util.scala 203:14]
              node _T_89 = tail(_T_88, 1) @[util.scala 203:14]
              node _T_90 = bits(_T_89, 3, 0) @[util.scala 203:20]
              node _T_91 = eq(_T_90, bpd_end_idx) @[fetch-target-queue.scala 261:48]
              node _T_92 = eq(bpd_pc, bpd_repair_pc) @[fetch-target-queue.scala 262:14]
              node _T_93 = or(_T_91, _T_92) @[fetch-target-queue.scala 261:64]
              when _T_93 : @[fetch-target-queue.scala 262:34]
                bpd_update_repair <= UInt<1>("h00") @[fetch-target-queue.scala 263:25]
                skip @[fetch-target-queue.scala 262:34]
              skip @[fetch-target-queue.scala 259:35]
    node _T_94 = eq(bpd_update_mispredict, UInt<1>("h00")) @[fetch-target-queue.scala 269:31]
    node _T_95 = eq(bpd_update_repair, UInt<1>("h00")) @[fetch-target-queue.scala 270:31]
    node _T_96 = and(_T_94, _T_95) @[fetch-target-queue.scala 269:54]
    node _T_97 = neq(bpd_ptr, deq_ptr) @[fetch-target-queue.scala 271:40]
    node _T_98 = and(_T_96, _T_97) @[fetch-target-queue.scala 270:50]
    node _T_99 = add(bpd_ptr, UInt<1>("h01")) @[util.scala 203:14]
    node _T_100 = tail(_T_99, 1) @[util.scala 203:14]
    node _T_101 = bits(_T_100, 3, 0) @[util.scala 203:20]
    node _T_102 = neq(enq_ptr, _T_101) @[fetch-target-queue.scala 272:40]
    node _T_103 = and(_T_98, _T_102) @[fetch-target-queue.scala 271:52]
    node _T_104 = eq(io.brupdate.b2.mispredict, UInt<1>("h00")) @[fetch-target-queue.scala 273:31]
    node _T_105 = and(_T_103, _T_104) @[fetch-target-queue.scala 272:74]
    node _T_106 = eq(io.redirect.valid, UInt<1>("h00")) @[fetch-target-queue.scala 274:31]
    node _T_107 = and(_T_105, _T_106) @[fetch-target-queue.scala 273:58]
    reg _T_108 : UInt<1>, clock @[fetch-target-queue.scala 274:61]
    _T_108 <= io.redirect.valid @[fetch-target-queue.scala 274:61]
    node _T_109 = eq(_T_108, UInt<1>("h00")) @[fetch-target-queue.scala 274:53]
    node do_commit_update = and(_T_107, _T_109) @[fetch-target-queue.scala 274:50]
    node _T_110 = or(do_commit_update, bpd_update_repair) @[fetch-target-queue.scala 278:34]
    node _T_111 = or(_T_110, bpd_update_mispredict) @[fetch-target-queue.scala 278:54]
    reg _T_112 : UInt<1>, clock @[fetch-target-queue.scala 278:16]
    _T_112 <= _T_111 @[fetch-target-queue.scala 278:16]
    when _T_112 : @[fetch-target-queue.scala 278:80]
      node _T_113 = neq(bpd_pc, bpd_repair_pc) @[fetch-target-queue.scala 280:31]
      node _T_114 = eq(first_empty, UInt<1>("h00")) @[fetch-target-queue.scala 282:28]
      node _T_115 = neq(bpd_entry.br_mask, UInt<1>("h00")) @[fetch-target-queue.scala 283:74]
      node _T_116 = or(bpd_entry.cfi_idx.valid, _T_115) @[fetch-target-queue.scala 283:53]
      node _T_117 = and(_T_114, _T_116) @[fetch-target-queue.scala 282:41]
      reg _T_118 : UInt<1>, clock @[fetch-target-queue.scala 284:37]
      _T_118 <= bpd_update_repair @[fetch-target-queue.scala 284:37]
      node _T_119 = eq(_T_113, UInt<1>("h00")) @[fetch-target-queue.scala 284:59]
      node _T_120 = and(_T_118, _T_119) @[fetch-target-queue.scala 284:56]
      node _T_121 = eq(_T_120, UInt<1>("h00")) @[fetch-target-queue.scala 284:28]
      node _T_122 = and(_T_117, _T_121) @[fetch-target-queue.scala 283:83]
      io.bpdupdate.valid <= _T_122 @[fetch-target-queue.scala 282:24]
      reg _T_123 : UInt<1>, clock @[fetch-target-queue.scala 285:54]
      _T_123 <= bpd_update_mispredict @[fetch-target-queue.scala 285:54]
      io.bpdupdate.bits.is_mispredict_update <= _T_123 @[fetch-target-queue.scala 285:44]
      reg _T_124 : UInt<1>, clock @[fetch-target-queue.scala 286:54]
      _T_124 <= bpd_update_repair @[fetch-target-queue.scala 286:54]
      io.bpdupdate.bits.is_repair_update <= _T_124 @[fetch-target-queue.scala 286:44]
      io.bpdupdate.bits.pc <= bpd_pc @[fetch-target-queue.scala 287:31]
      io.bpdupdate.bits.btb_mispredicts <= UInt<1>("h00") @[fetch-target-queue.scala 288:39]
      node _T_125 = dshl(UInt<1>("h01"), bpd_entry.cfi_idx.bits) @[OneHot.scala 58:35]
      node _T_126 = dshr(_T_125, UInt<1>("h00")) @[util.scala 373:29]
      node _T_127 = dshr(_T_125, UInt<1>("h01")) @[util.scala 373:29]
      node _T_128 = dshr(_T_125, UInt<2>("h02")) @[util.scala 373:29]
      node _T_129 = dshr(_T_125, UInt<2>("h03")) @[util.scala 373:29]
      node _T_130 = or(_T_126, _T_127) @[util.scala 373:45]
      node _T_131 = or(_T_130, _T_128) @[util.scala 373:45]
      node _T_132 = or(_T_131, _T_129) @[util.scala 373:45]
      node _T_133 = and(_T_132, bpd_entry.br_mask) @[fetch-target-queue.scala 290:36]
      node _T_134 = mux(bpd_entry.cfi_idx.valid, _T_133, bpd_entry.br_mask) @[fetch-target-queue.scala 289:37]
      io.bpdupdate.bits.br_mask <= _T_134 @[fetch-target-queue.scala 289:31]
      io.bpdupdate.bits.cfi_idx.bits <= bpd_entry.cfi_idx.bits @[fetch-target-queue.scala 291:31]
      io.bpdupdate.bits.cfi_idx.valid <= bpd_entry.cfi_idx.valid @[fetch-target-queue.scala 291:31]
      io.bpdupdate.bits.cfi_mispredicted <= bpd_entry.cfi_mispredicted @[fetch-target-queue.scala 292:40]
      io.bpdupdate.bits.cfi_taken <= bpd_entry.cfi_taken @[fetch-target-queue.scala 293:34]
      io.bpdupdate.bits.target <= bpd_target @[fetch-target-queue.scala 294:34]
      node _T_135 = dshr(bpd_entry.br_mask, bpd_entry.cfi_idx.bits) @[fetch-target-queue.scala 295:54]
      node _T_136 = bits(_T_135, 0, 0) @[fetch-target-queue.scala 295:54]
      io.bpdupdate.bits.cfi_is_br <= _T_136 @[fetch-target-queue.scala 295:34]
      node _T_137 = eq(bpd_entry.cfi_type, UInt<3>("h02")) @[fetch-target-queue.scala 296:56]
      node _T_138 = eq(bpd_entry.cfi_type, UInt<3>("h03")) @[fetch-target-queue.scala 296:90]
      node _T_139 = or(_T_137, _T_138) @[fetch-target-queue.scala 296:68]
      io.bpdupdate.bits.cfi_is_jal <= _T_139 @[fetch-target-queue.scala 296:34]
      io.bpdupdate.bits.ghist.ras_idx <= bpd_ghist.ras_idx @[fetch-target-queue.scala 297:34]
      io.bpdupdate.bits.ghist.new_saw_branch_taken <= bpd_ghist.new_saw_branch_taken @[fetch-target-queue.scala 297:34]
      io.bpdupdate.bits.ghist.new_saw_branch_not_taken <= bpd_ghist.new_saw_branch_not_taken @[fetch-target-queue.scala 297:34]
      io.bpdupdate.bits.ghist.current_saw_branch_not_taken <= bpd_ghist.current_saw_branch_not_taken @[fetch-target-queue.scala 297:34]
      io.bpdupdate.bits.ghist.old_history <= bpd_ghist.old_history @[fetch-target-queue.scala 297:34]
      io.bpdupdate.bits.lhist[0] <= bpd_lhist[0] @[fetch-target-queue.scala 298:34]
      io.bpdupdate.bits.meta[0] <= bpd_meta[0] @[fetch-target-queue.scala 299:34]
      first_empty <= UInt<1>("h00") @[fetch-target-queue.scala 301:17]
      skip @[fetch-target-queue.scala 278:80]
    when do_commit_update : @[fetch-target-queue.scala 304:27]
      node _T_140 = add(bpd_ptr, UInt<1>("h01")) @[util.scala 203:14]
      node _T_141 = tail(_T_140, 1) @[util.scala 203:14]
      node _T_142 = bits(_T_141, 3, 0) @[util.scala 203:20]
      bpd_ptr <= _T_142 @[fetch-target-queue.scala 305:13]
      skip @[fetch-target-queue.scala 304:27]
    node _T_143 = eq(full, UInt<1>("h00")) @[fetch-target-queue.scala 308:27]
    node _T_144 = or(_T_143, do_commit_update) @[fetch-target-queue.scala 308:33]
    reg _T_145 : UInt<1>, clock @[fetch-target-queue.scala 308:26]
    _T_145 <= _T_144 @[fetch-target-queue.scala 308:26]
    io.enq.ready <= _T_145 @[fetch-target-queue.scala 308:16]
    wire redirect_new_entry : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}
    redirect_new_entry.start_bank <= ram[io.redirect.bits].start_bank
    redirect_new_entry.ras_idx <= ram[io.redirect.bits].ras_idx
    redirect_new_entry.ras_top <= ram[io.redirect.bits].ras_top
    redirect_new_entry.cfi_npc_plus4 <= ram[io.redirect.bits].cfi_npc_plus4
    redirect_new_entry.cfi_is_ret <= ram[io.redirect.bits].cfi_is_ret
    redirect_new_entry.cfi_is_call <= ram[io.redirect.bits].cfi_is_call
    redirect_new_entry.br_mask <= ram[io.redirect.bits].br_mask
    redirect_new_entry.cfi_type <= ram[io.redirect.bits].cfi_type
    redirect_new_entry.cfi_mispredicted <= ram[io.redirect.bits].cfi_mispredicted
    redirect_new_entry.cfi_taken <= ram[io.redirect.bits].cfi_taken
    redirect_new_entry.cfi_idx.bits <= ram[io.redirect.bits].cfi_idx.bits
    redirect_new_entry.cfi_idx.valid <= ram[io.redirect.bits].cfi_idx.valid
    when io.redirect.valid : @[fetch-target-queue.scala 314:28]
      node _T_146 = add(io.redirect.bits, UInt<1>("h01")) @[util.scala 203:14]
      node _T_147 = tail(_T_146, 1) @[util.scala 203:14]
      node _T_148 = bits(_T_147, 3, 0) @[util.scala 203:20]
      enq_ptr <= _T_148 @[fetch-target-queue.scala 315:16]
      when io.brupdate.b2.mispredict : @[fetch-target-queue.scala 317:38]
        node _T_149 = eq(ram[io.redirect.bits].start_bank, UInt<1>("h01")) @[fetch-target-queue.scala 319:37]
        node _T_150 = shl(UInt<1>("h01"), 3) @[fetch-target-queue.scala 319:50]
        node _T_151 = mux(_T_149, _T_150, UInt<1>("h00")) @[fetch-target-queue.scala 319:10]
        node _T_152 = xor(io.brupdate.b2.uop.pc_lob, _T_151) @[fetch-target-queue.scala 318:50]
        node _T_153 = bits(_T_152, 2, 1) @[fetch-target-queue.scala 319:79]
        redirect_new_entry.cfi_idx.valid <= UInt<1>("h01") @[fetch-target-queue.scala 320:43]
        redirect_new_entry.cfi_idx.bits <= _T_153 @[fetch-target-queue.scala 321:43]
        redirect_new_entry.cfi_mispredicted <= UInt<1>("h01") @[fetch-target-queue.scala 322:43]
        redirect_new_entry.cfi_taken <= io.brupdate.b2.taken @[fetch-target-queue.scala 323:43]
        node _T_154 = eq(ram[io.redirect.bits].cfi_idx.bits, _T_153) @[fetch-target-queue.scala 324:104]
        node _T_155 = and(ram[io.redirect.bits].cfi_is_call, _T_154) @[fetch-target-queue.scala 324:73]
        redirect_new_entry.cfi_is_call <= _T_155 @[fetch-target-queue.scala 324:43]
        node _T_156 = eq(ram[io.redirect.bits].cfi_idx.bits, _T_153) @[fetch-target-queue.scala 325:104]
        node _T_157 = and(ram[io.redirect.bits].cfi_is_ret, _T_156) @[fetch-target-queue.scala 325:73]
        redirect_new_entry.cfi_is_ret <= _T_157 @[fetch-target-queue.scala 325:43]
        skip @[fetch-target-queue.scala 317:38]
      ras_update <= UInt<1>("h01") @[fetch-target-queue.scala 328:20]
      ras_update_pc <= ram[io.redirect.bits].ras_top @[fetch-target-queue.scala 329:20]
      ras_update_idx <= ram[io.redirect.bits].ras_idx @[fetch-target-queue.scala 330:20]
      skip @[fetch-target-queue.scala 314:28]
    else : @[fetch-target-queue.scala 332:44]
      reg _T_158 : UInt<1>, clock @[fetch-target-queue.scala 332:23]
      _T_158 <= io.redirect.valid @[fetch-target-queue.scala 332:23]
      when _T_158 : @[fetch-target-queue.scala 332:44]
        reg _T_159 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock @[fetch-target-queue.scala 333:26]
        _T_159.start_bank <= redirect_new_entry.start_bank @[fetch-target-queue.scala 333:26]
        _T_159.ras_idx <= redirect_new_entry.ras_idx @[fetch-target-queue.scala 333:26]
        _T_159.ras_top <= redirect_new_entry.ras_top @[fetch-target-queue.scala 333:26]
        _T_159.cfi_npc_plus4 <= redirect_new_entry.cfi_npc_plus4 @[fetch-target-queue.scala 333:26]
        _T_159.cfi_is_ret <= redirect_new_entry.cfi_is_ret @[fetch-target-queue.scala 333:26]
        _T_159.cfi_is_call <= redirect_new_entry.cfi_is_call @[fetch-target-queue.scala 333:26]
        _T_159.br_mask <= redirect_new_entry.br_mask @[fetch-target-queue.scala 333:26]
        _T_159.cfi_type <= redirect_new_entry.cfi_type @[fetch-target-queue.scala 333:26]
        _T_159.cfi_mispredicted <= redirect_new_entry.cfi_mispredicted @[fetch-target-queue.scala 333:26]
        _T_159.cfi_taken <= redirect_new_entry.cfi_taken @[fetch-target-queue.scala 333:26]
        _T_159.cfi_idx.bits <= redirect_new_entry.cfi_idx.bits @[fetch-target-queue.scala 333:26]
        _T_159.cfi_idx.valid <= redirect_new_entry.cfi_idx.valid @[fetch-target-queue.scala 333:26]
        prev_entry.start_bank <= _T_159.start_bank @[fetch-target-queue.scala 333:16]
        prev_entry.ras_idx <= _T_159.ras_idx @[fetch-target-queue.scala 333:16]
        prev_entry.ras_top <= _T_159.ras_top @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_npc_plus4 <= _T_159.cfi_npc_plus4 @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_is_ret <= _T_159.cfi_is_ret @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_is_call <= _T_159.cfi_is_call @[fetch-target-queue.scala 333:16]
        prev_entry.br_mask <= _T_159.br_mask @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_type <= _T_159.cfi_type @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_mispredicted <= _T_159.cfi_mispredicted @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_taken <= _T_159.cfi_taken @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_idx.bits <= _T_159.cfi_idx.bits @[fetch-target-queue.scala 333:16]
        prev_entry.cfi_idx.valid <= _T_159.cfi_idx.valid @[fetch-target-queue.scala 333:16]
        prev_ghist.ras_idx <= bpd_ghist.ras_idx @[fetch-target-queue.scala 334:16]
        prev_ghist.new_saw_branch_taken <= bpd_ghist.new_saw_branch_taken @[fetch-target-queue.scala 334:16]
        prev_ghist.new_saw_branch_not_taken <= bpd_ghist.new_saw_branch_not_taken @[fetch-target-queue.scala 334:16]
        prev_ghist.current_saw_branch_not_taken <= bpd_ghist.current_saw_branch_not_taken @[fetch-target-queue.scala 334:16]
        prev_ghist.old_history <= bpd_ghist.old_history @[fetch-target-queue.scala 334:16]
        prev_pc <= bpd_pc @[fetch-target-queue.scala 335:16]
        reg _T_160 : UInt, clock @[fetch-target-queue.scala 337:16]
        _T_160 <= io.redirect.bits @[fetch-target-queue.scala 337:16]
        node _T_161 = or(_T_160, UInt<4>("h00"))
        node _T_162 = bits(_T_161, 3, 0)
        reg _T_163 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock @[fetch-target-queue.scala 337:46]
        _T_163.start_bank <= redirect_new_entry.start_bank @[fetch-target-queue.scala 337:46]
        _T_163.ras_idx <= redirect_new_entry.ras_idx @[fetch-target-queue.scala 337:46]
        _T_163.ras_top <= redirect_new_entry.ras_top @[fetch-target-queue.scala 337:46]
        _T_163.cfi_npc_plus4 <= redirect_new_entry.cfi_npc_plus4 @[fetch-target-queue.scala 337:46]
        _T_163.cfi_is_ret <= redirect_new_entry.cfi_is_ret @[fetch-target-queue.scala 337:46]
        _T_163.cfi_is_call <= redirect_new_entry.cfi_is_call @[fetch-target-queue.scala 337:46]
        _T_163.br_mask <= redirect_new_entry.br_mask @[fetch-target-queue.scala 337:46]
        _T_163.cfi_type <= redirect_new_entry.cfi_type @[fetch-target-queue.scala 337:46]
        _T_163.cfi_mispredicted <= redirect_new_entry.cfi_mispredicted @[fetch-target-queue.scala 337:46]
        _T_163.cfi_taken <= redirect_new_entry.cfi_taken @[fetch-target-queue.scala 337:46]
        _T_163.cfi_idx.bits <= redirect_new_entry.cfi_idx.bits @[fetch-target-queue.scala 337:46]
        _T_163.cfi_idx.valid <= redirect_new_entry.cfi_idx.valid @[fetch-target-queue.scala 337:46]
        ram[_T_162].start_bank <= _T_163.start_bank @[fetch-target-queue.scala 337:36]
        ram[_T_162].ras_idx <= _T_163.ras_idx @[fetch-target-queue.scala 337:36]
        ram[_T_162].ras_top <= _T_163.ras_top @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_npc_plus4 <= _T_163.cfi_npc_plus4 @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_is_ret <= _T_163.cfi_is_ret @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_is_call <= _T_163.cfi_is_call @[fetch-target-queue.scala 337:36]
        ram[_T_162].br_mask <= _T_163.br_mask @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_type <= _T_163.cfi_type @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_mispredicted <= _T_163.cfi_mispredicted @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_taken <= _T_163.cfi_taken @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_idx.bits <= _T_163.cfi_idx.bits @[fetch-target-queue.scala 337:36]
        ram[_T_162].cfi_idx.valid <= _T_163.cfi_idx.valid @[fetch-target-queue.scala 337:36]
        skip @[fetch-target-queue.scala 332:44]
    node _T_164 = add(io.get_ftq_pc[0].ftq_idx, UInt<1>("h01")) @[util.scala 203:14]
    node _T_165 = tail(_T_164, 1) @[util.scala 203:14]
    node _T_166 = bits(_T_165, 3, 0) @[util.scala 203:20]
    node _T_167 = eq(_T_166, enq_ptr) @[fetch-target-queue.scala 347:33]
    node _T_168 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _T_169 = and(_T_167, _T_168) @[fetch-target-queue.scala 347:46]
    node _T_170 = mux(_T_169, io.enq.bits.pc, pcs[_T_166]) @[fetch-target-queue.scala 348:22]
    reg _T_171 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock @[fetch-target-queue.scala 351:42]
    _T_171.start_bank <= ram[io.get_ftq_pc[0].ftq_idx].start_bank @[fetch-target-queue.scala 351:42]
    _T_171.ras_idx <= ram[io.get_ftq_pc[0].ftq_idx].ras_idx @[fetch-target-queue.scala 351:42]
    _T_171.ras_top <= ram[io.get_ftq_pc[0].ftq_idx].ras_top @[fetch-target-queue.scala 351:42]
    _T_171.cfi_npc_plus4 <= ram[io.get_ftq_pc[0].ftq_idx].cfi_npc_plus4 @[fetch-target-queue.scala 351:42]
    _T_171.cfi_is_ret <= ram[io.get_ftq_pc[0].ftq_idx].cfi_is_ret @[fetch-target-queue.scala 351:42]
    _T_171.cfi_is_call <= ram[io.get_ftq_pc[0].ftq_idx].cfi_is_call @[fetch-target-queue.scala 351:42]
    _T_171.br_mask <= ram[io.get_ftq_pc[0].ftq_idx].br_mask @[fetch-target-queue.scala 351:42]
    _T_171.cfi_type <= ram[io.get_ftq_pc[0].ftq_idx].cfi_type @[fetch-target-queue.scala 351:42]
    _T_171.cfi_mispredicted <= ram[io.get_ftq_pc[0].ftq_idx].cfi_mispredicted @[fetch-target-queue.scala 351:42]
    _T_171.cfi_taken <= ram[io.get_ftq_pc[0].ftq_idx].cfi_taken @[fetch-target-queue.scala 351:42]
    _T_171.cfi_idx.bits <= ram[io.get_ftq_pc[0].ftq_idx].cfi_idx.bits @[fetch-target-queue.scala 351:42]
    _T_171.cfi_idx.valid <= ram[io.get_ftq_pc[0].ftq_idx].cfi_idx.valid @[fetch-target-queue.scala 351:42]
    io.get_ftq_pc[0].entry.start_bank <= _T_171.start_bank @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.ras_idx <= _T_171.ras_idx @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.ras_top <= _T_171.ras_top @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_npc_plus4 <= _T_171.cfi_npc_plus4 @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_is_ret <= _T_171.cfi_is_ret @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_is_call <= _T_171.cfi_is_call @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.br_mask <= _T_171.br_mask @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_type <= _T_171.cfi_type @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_mispredicted <= _T_171.cfi_mispredicted @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_taken <= _T_171.cfi_taken @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_idx.bits <= _T_171.cfi_idx.bits @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].entry.cfi_idx.valid <= _T_171.cfi_idx.valid @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[0].ghist.ras_idx is invalid @[fetch-target-queue.scala 355:32]
    io.get_ftq_pc[0].ghist.new_saw_branch_taken is invalid @[fetch-target-queue.scala 355:32]
    io.get_ftq_pc[0].ghist.new_saw_branch_not_taken is invalid @[fetch-target-queue.scala 355:32]
    io.get_ftq_pc[0].ghist.current_saw_branch_not_taken is invalid @[fetch-target-queue.scala 355:32]
    io.get_ftq_pc[0].ghist.old_history is invalid @[fetch-target-queue.scala 355:32]
    reg _T_172 : UInt, clock @[fetch-target-queue.scala 356:42]
    _T_172 <= pcs[io.get_ftq_pc[0].ftq_idx] @[fetch-target-queue.scala 356:42]
    io.get_ftq_pc[0].pc <= _T_172 @[fetch-target-queue.scala 356:32]
    reg _T_173 : UInt, clock @[fetch-target-queue.scala 357:42]
    _T_173 <= _T_170 @[fetch-target-queue.scala 357:42]
    io.get_ftq_pc[0].next_pc <= _T_173 @[fetch-target-queue.scala 357:32]
    node _T_174 = neq(_T_166, enq_ptr) @[fetch-target-queue.scala 358:52]
    node _T_175 = or(_T_174, _T_169) @[fetch-target-queue.scala 358:64]
    reg _T_176 : UInt<1>, clock @[fetch-target-queue.scala 358:42]
    _T_176 <= _T_175 @[fetch-target-queue.scala 358:42]
    io.get_ftq_pc[0].next_val <= _T_176 @[fetch-target-queue.scala 358:32]
    node _T_177 = mux(io.deq.valid, io.deq.bits, deq_ptr) @[fetch-target-queue.scala 359:50]
    reg _T_178 : UInt, clock @[fetch-target-queue.scala 359:42]
    _T_178 <= pcs[_T_177] @[fetch-target-queue.scala 359:42]
    io.get_ftq_pc[0].com_pc <= _T_178 @[fetch-target-queue.scala 359:32]
    node _T_179 = add(io.get_ftq_pc[1].ftq_idx, UInt<1>("h01")) @[util.scala 203:14]
    node _T_180 = tail(_T_179, 1) @[util.scala 203:14]
    node _T_181 = bits(_T_180, 3, 0) @[util.scala 203:20]
    node _T_182 = eq(_T_181, enq_ptr) @[fetch-target-queue.scala 347:33]
    node _T_183 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _T_184 = and(_T_182, _T_183) @[fetch-target-queue.scala 347:46]
    node _T_185 = mux(_T_184, io.enq.bits.pc, pcs[_T_181]) @[fetch-target-queue.scala 348:22]
    reg _T_186 : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, clock @[fetch-target-queue.scala 351:42]
    _T_186.start_bank <= ram[io.get_ftq_pc[1].ftq_idx].start_bank @[fetch-target-queue.scala 351:42]
    _T_186.ras_idx <= ram[io.get_ftq_pc[1].ftq_idx].ras_idx @[fetch-target-queue.scala 351:42]
    _T_186.ras_top <= ram[io.get_ftq_pc[1].ftq_idx].ras_top @[fetch-target-queue.scala 351:42]
    _T_186.cfi_npc_plus4 <= ram[io.get_ftq_pc[1].ftq_idx].cfi_npc_plus4 @[fetch-target-queue.scala 351:42]
    _T_186.cfi_is_ret <= ram[io.get_ftq_pc[1].ftq_idx].cfi_is_ret @[fetch-target-queue.scala 351:42]
    _T_186.cfi_is_call <= ram[io.get_ftq_pc[1].ftq_idx].cfi_is_call @[fetch-target-queue.scala 351:42]
    _T_186.br_mask <= ram[io.get_ftq_pc[1].ftq_idx].br_mask @[fetch-target-queue.scala 351:42]
    _T_186.cfi_type <= ram[io.get_ftq_pc[1].ftq_idx].cfi_type @[fetch-target-queue.scala 351:42]
    _T_186.cfi_mispredicted <= ram[io.get_ftq_pc[1].ftq_idx].cfi_mispredicted @[fetch-target-queue.scala 351:42]
    _T_186.cfi_taken <= ram[io.get_ftq_pc[1].ftq_idx].cfi_taken @[fetch-target-queue.scala 351:42]
    _T_186.cfi_idx.bits <= ram[io.get_ftq_pc[1].ftq_idx].cfi_idx.bits @[fetch-target-queue.scala 351:42]
    _T_186.cfi_idx.valid <= ram[io.get_ftq_pc[1].ftq_idx].cfi_idx.valid @[fetch-target-queue.scala 351:42]
    io.get_ftq_pc[1].entry.start_bank <= _T_186.start_bank @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.ras_idx <= _T_186.ras_idx @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.ras_top <= _T_186.ras_top @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_npc_plus4 <= _T_186.cfi_npc_plus4 @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_is_ret <= _T_186.cfi_is_ret @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_is_call <= _T_186.cfi_is_call @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.br_mask <= _T_186.br_mask @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_type <= _T_186.cfi_type @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_mispredicted <= _T_186.cfi_mispredicted @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_taken <= _T_186.cfi_taken @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_idx.bits <= _T_186.cfi_idx.bits @[fetch-target-queue.scala 351:32]
    io.get_ftq_pc[1].entry.cfi_idx.valid <= _T_186.cfi_idx.valid @[fetch-target-queue.scala 351:32]
    wire _T_187 : UInt @[fetch-target-queue.scala 353:48]
    _T_187 is invalid @[fetch-target-queue.scala 353:48]
    when UInt<1>("h01") : @[fetch-target-queue.scala 353:48]
      _T_187 <= io.get_ftq_pc[1].ftq_idx @[fetch-target-queue.scala 353:48]
      node _T_188 = or(_T_187, UInt<4>("h00")) @[fetch-target-queue.scala 353:48]
      node _T_189 = bits(_T_188, 3, 0) @[fetch-target-queue.scala 353:48]
      read mport _T_190 = ghist_1[_T_189], clock @[fetch-target-queue.scala 353:48]
      skip @[fetch-target-queue.scala 353:48]
    io.get_ftq_pc[1].ghist.ras_idx <= _T_190.ras_idx @[fetch-target-queue.scala 353:32]
    io.get_ftq_pc[1].ghist.new_saw_branch_taken <= _T_190.new_saw_branch_taken @[fetch-target-queue.scala 353:32]
    io.get_ftq_pc[1].ghist.new_saw_branch_not_taken <= _T_190.new_saw_branch_not_taken @[fetch-target-queue.scala 353:32]
    io.get_ftq_pc[1].ghist.current_saw_branch_not_taken <= _T_190.current_saw_branch_not_taken @[fetch-target-queue.scala 353:32]
    io.get_ftq_pc[1].ghist.old_history <= _T_190.old_history @[fetch-target-queue.scala 353:32]
    reg _T_191 : UInt, clock @[fetch-target-queue.scala 356:42]
    _T_191 <= pcs[io.get_ftq_pc[1].ftq_idx] @[fetch-target-queue.scala 356:42]
    io.get_ftq_pc[1].pc <= _T_191 @[fetch-target-queue.scala 356:32]
    reg _T_192 : UInt, clock @[fetch-target-queue.scala 357:42]
    _T_192 <= _T_185 @[fetch-target-queue.scala 357:42]
    io.get_ftq_pc[1].next_pc <= _T_192 @[fetch-target-queue.scala 357:32]
    node _T_193 = neq(_T_181, enq_ptr) @[fetch-target-queue.scala 358:52]
    node _T_194 = or(_T_193, _T_184) @[fetch-target-queue.scala 358:64]
    reg _T_195 : UInt<1>, clock @[fetch-target-queue.scala 358:42]
    _T_195 <= _T_194 @[fetch-target-queue.scala 358:42]
    io.get_ftq_pc[1].next_val <= _T_195 @[fetch-target-queue.scala 358:32]
    node _T_196 = mux(io.deq.valid, io.deq.bits, deq_ptr) @[fetch-target-queue.scala 359:50]
    reg _T_197 : UInt, clock @[fetch-target-queue.scala 359:42]
    _T_197 <= pcs[_T_196] @[fetch-target-queue.scala 359:42]
    io.get_ftq_pc[1].com_pc <= _T_197 @[fetch-target-queue.scala 359:32]
    reg _T_198 : UInt, clock @[fetch-target-queue.scala 363:36]
    _T_198 <= pcs[io.debug_ftq_idx[0]] @[fetch-target-queue.scala 363:36]
    io.debug_fetch_pc[0] <= _T_198 @[fetch-target-queue.scala 363:26]
    
