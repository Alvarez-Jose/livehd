circuit ALUUnit :
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dw : UInt<1>, flip fn : UInt<4>, flip in2 : UInt<64>, flip in1 : UInt<64>, out : UInt<64>, adder_out : UInt<64>, cmp_out : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _T_1 = not(io.in2) @[ALU.scala 62:35]
    node in2_inv = mux(_T, _T_1, io.in2) @[ALU.scala 62:20]
    node in1_xor_in2 = xor(io.in1, in2_inv) @[ALU.scala 63:28]
    node _T_2 = add(io.in1, in2_inv) @[ALU.scala 64:26]
    node _T_3 = tail(_T_2, 1) @[ALU.scala 64:26]
    node _T_4 = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _T_5 = add(_T_3, _T_4) @[ALU.scala 64:36]
    node _T_6 = tail(_T_5, 1) @[ALU.scala 64:36]
    io.adder_out <= _T_6 @[ALU.scala 64:16]
    node _T_7 = bits(io.in1, 63, 63) @[ALU.scala 68:15]
    node _T_8 = bits(io.in2, 63, 63) @[ALU.scala 68:34]
    node _T_9 = eq(_T_7, _T_8) @[ALU.scala 68:24]
    node _T_10 = bits(io.adder_out, 63, 63) @[ALU.scala 68:56]
    node _T_11 = bits(io.fn, 1, 1) @[ALU.scala 42:35]
    node _T_12 = bits(io.in2, 63, 63) @[ALU.scala 69:35]
    node _T_13 = bits(io.in1, 63, 63) @[ALU.scala 69:51]
    node _T_14 = mux(_T_11, _T_12, _T_13) @[ALU.scala 69:8]
    node slt = mux(_T_9, _T_10, _T_14) @[ALU.scala 68:8]
    node _T_15 = bits(io.fn, 0, 0) @[ALU.scala 43:35]
    node _T_16 = bits(io.fn, 3, 3) @[ALU.scala 44:30]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[ALU.scala 44:26]
    node _T_18 = eq(in1_xor_in2, UInt<1>("h00")) @[ALU.scala 70:68]
    node _T_19 = mux(_T_17, _T_18, slt) @[ALU.scala 70:41]
    node _T_20 = xor(_T_15, _T_19) @[ALU.scala 70:36]
    io.cmp_out <= _T_20 @[ALU.scala 70:14]
    node _T_21 = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _T_22 = bits(io.in1, 31, 31) @[ALU.scala 77:55]
    node _T_23 = and(_T_21, _T_22) @[ALU.scala 77:46]
    node _T_24 = bits(_T_23, 0, 0) @[Bitwise.scala 72:15]
    node _T_25 = mux(_T_24, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_26 = eq(io.dw, UInt<1>("h01")) @[ALU.scala 78:31]
    node _T_27 = bits(io.in1, 63, 32) @[ALU.scala 78:48]
    node _T_28 = mux(_T_26, _T_27, _T_25) @[ALU.scala 78:24]
    node _T_29 = bits(io.in2, 5, 5) @[ALU.scala 79:29]
    node _T_30 = eq(io.dw, UInt<1>("h01")) @[ALU.scala 79:42]
    node _T_31 = and(_T_29, _T_30) @[ALU.scala 79:33]
    node _T_32 = bits(io.in2, 4, 0) @[ALU.scala 79:60]
    node shamt = cat(_T_31, _T_32) @[Cat.scala 29:58]
    node _T_33 = bits(io.in1, 31, 0) @[ALU.scala 80:34]
    node shin_r = cat(_T_28, _T_33) @[Cat.scala 29:58]
    node _T_34 = eq(io.fn, UInt<3>("h05")) @[ALU.scala 82:24]
    node _T_35 = eq(io.fn, UInt<4>("h0b")) @[ALU.scala 82:44]
    node _T_36 = or(_T_34, _T_35) @[ALU.scala 82:35]
    node _T_37 = shl(UInt<32>("h0ffffffff"), 32) @[Bitwise.scala 102:47]
    node _T_38 = xor(UInt<64>("h0ffffffffffffffff"), _T_37) @[Bitwise.scala 102:21]
    node _T_39 = shr(shin_r, 32) @[Bitwise.scala 103:21]
    node _T_40 = and(_T_39, _T_38) @[Bitwise.scala 103:31]
    node _T_41 = bits(shin_r, 31, 0) @[Bitwise.scala 103:46]
    node _T_42 = shl(_T_41, 32) @[Bitwise.scala 103:65]
    node _T_43 = not(_T_38) @[Bitwise.scala 103:77]
    node _T_44 = and(_T_42, _T_43) @[Bitwise.scala 103:75]
    node _T_45 = or(_T_40, _T_44) @[Bitwise.scala 103:39]
    node _T_46 = bits(_T_38, 47, 0) @[Bitwise.scala 102:28]
    node _T_47 = shl(_T_46, 16) @[Bitwise.scala 102:47]
    node _T_48 = xor(_T_38, _T_47) @[Bitwise.scala 102:21]
    node _T_49 = shr(_T_45, 16) @[Bitwise.scala 103:21]
    node _T_50 = and(_T_49, _T_48) @[Bitwise.scala 103:31]
    node _T_51 = bits(_T_45, 47, 0) @[Bitwise.scala 103:46]
    node _T_52 = shl(_T_51, 16) @[Bitwise.scala 103:65]
    node _T_53 = not(_T_48) @[Bitwise.scala 103:77]
    node _T_54 = and(_T_52, _T_53) @[Bitwise.scala 103:75]
    node _T_55 = or(_T_50, _T_54) @[Bitwise.scala 103:39]
    node _T_56 = bits(_T_48, 55, 0) @[Bitwise.scala 102:28]
    node _T_57 = shl(_T_56, 8) @[Bitwise.scala 102:47]
    node _T_58 = xor(_T_48, _T_57) @[Bitwise.scala 102:21]
    node _T_59 = shr(_T_55, 8) @[Bitwise.scala 103:21]
    node _T_60 = and(_T_59, _T_58) @[Bitwise.scala 103:31]
    node _T_61 = bits(_T_55, 55, 0) @[Bitwise.scala 103:46]
    node _T_62 = shl(_T_61, 8) @[Bitwise.scala 103:65]
    node _T_63 = not(_T_58) @[Bitwise.scala 103:77]
    node _T_64 = and(_T_62, _T_63) @[Bitwise.scala 103:75]
    node _T_65 = or(_T_60, _T_64) @[Bitwise.scala 103:39]
    node _T_66 = bits(_T_58, 59, 0) @[Bitwise.scala 102:28]
    node _T_67 = shl(_T_66, 4) @[Bitwise.scala 102:47]
    node _T_68 = xor(_T_58, _T_67) @[Bitwise.scala 102:21]
    node _T_69 = shr(_T_65, 4) @[Bitwise.scala 103:21]
    node _T_70 = and(_T_69, _T_68) @[Bitwise.scala 103:31]
    node _T_71 = bits(_T_65, 59, 0) @[Bitwise.scala 103:46]
    node _T_72 = shl(_T_71, 4) @[Bitwise.scala 103:65]
    node _T_73 = not(_T_68) @[Bitwise.scala 103:77]
    node _T_74 = and(_T_72, _T_73) @[Bitwise.scala 103:75]
    node _T_75 = or(_T_70, _T_74) @[Bitwise.scala 103:39]
    node _T_76 = bits(_T_68, 61, 0) @[Bitwise.scala 102:28]
    node _T_77 = shl(_T_76, 2) @[Bitwise.scala 102:47]
    node _T_78 = xor(_T_68, _T_77) @[Bitwise.scala 102:21]
    node _T_79 = shr(_T_75, 2) @[Bitwise.scala 103:21]
    node _T_80 = and(_T_79, _T_78) @[Bitwise.scala 103:31]
    node _T_81 = bits(_T_75, 61, 0) @[Bitwise.scala 103:46]
    node _T_82 = shl(_T_81, 2) @[Bitwise.scala 103:65]
    node _T_83 = not(_T_78) @[Bitwise.scala 103:77]
    node _T_84 = and(_T_82, _T_83) @[Bitwise.scala 103:75]
    node _T_85 = or(_T_80, _T_84) @[Bitwise.scala 103:39]
    node _T_86 = bits(_T_78, 62, 0) @[Bitwise.scala 102:28]
    node _T_87 = shl(_T_86, 1) @[Bitwise.scala 102:47]
    node _T_88 = xor(_T_78, _T_87) @[Bitwise.scala 102:21]
    node _T_89 = shr(_T_85, 1) @[Bitwise.scala 103:21]
    node _T_90 = and(_T_89, _T_88) @[Bitwise.scala 103:31]
    node _T_91 = bits(_T_85, 62, 0) @[Bitwise.scala 103:46]
    node _T_92 = shl(_T_91, 1) @[Bitwise.scala 103:65]
    node _T_93 = not(_T_88) @[Bitwise.scala 103:77]
    node _T_94 = and(_T_92, _T_93) @[Bitwise.scala 103:75]
    node _T_95 = or(_T_90, _T_94) @[Bitwise.scala 103:39]
    node shin = mux(_T_36, shin_r, _T_95) @[ALU.scala 82:17]
    node _T_96 = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _T_97 = bits(shin, 63, 63) @[ALU.scala 83:41]
    node _T_98 = and(_T_96, _T_97) @[ALU.scala 83:35]
    node _T_99 = cat(_T_98, shin) @[Cat.scala 29:58]
    node _T_100 = asSInt(_T_99) @[ALU.scala 83:57]
    node _T_101 = dshr(_T_100, shamt) @[ALU.scala 83:64]
    node shout_r = bits(_T_101, 63, 0) @[ALU.scala 83:73]
    node _T_102 = shl(UInt<32>("h0ffffffff"), 32) @[Bitwise.scala 102:47]
    node _T_103 = xor(UInt<64>("h0ffffffffffffffff"), _T_102) @[Bitwise.scala 102:21]
    node _T_104 = shr(shout_r, 32) @[Bitwise.scala 103:21]
    node _T_105 = and(_T_104, _T_103) @[Bitwise.scala 103:31]
    node _T_106 = bits(shout_r, 31, 0) @[Bitwise.scala 103:46]
    node _T_107 = shl(_T_106, 32) @[Bitwise.scala 103:65]
    node _T_108 = not(_T_103) @[Bitwise.scala 103:77]
    node _T_109 = and(_T_107, _T_108) @[Bitwise.scala 103:75]
    node _T_110 = or(_T_105, _T_109) @[Bitwise.scala 103:39]
    node _T_111 = bits(_T_103, 47, 0) @[Bitwise.scala 102:28]
    node _T_112 = shl(_T_111, 16) @[Bitwise.scala 102:47]
    node _T_113 = xor(_T_103, _T_112) @[Bitwise.scala 102:21]
    node _T_114 = shr(_T_110, 16) @[Bitwise.scala 103:21]
    node _T_115 = and(_T_114, _T_113) @[Bitwise.scala 103:31]
    node _T_116 = bits(_T_110, 47, 0) @[Bitwise.scala 103:46]
    node _T_117 = shl(_T_116, 16) @[Bitwise.scala 103:65]
    node _T_118 = not(_T_113) @[Bitwise.scala 103:77]
    node _T_119 = and(_T_117, _T_118) @[Bitwise.scala 103:75]
    node _T_120 = or(_T_115, _T_119) @[Bitwise.scala 103:39]
    node _T_121 = bits(_T_113, 55, 0) @[Bitwise.scala 102:28]
    node _T_122 = shl(_T_121, 8) @[Bitwise.scala 102:47]
    node _T_123 = xor(_T_113, _T_122) @[Bitwise.scala 102:21]
    node _T_124 = shr(_T_120, 8) @[Bitwise.scala 103:21]
    node _T_125 = and(_T_124, _T_123) @[Bitwise.scala 103:31]
    node _T_126 = bits(_T_120, 55, 0) @[Bitwise.scala 103:46]
    node _T_127 = shl(_T_126, 8) @[Bitwise.scala 103:65]
    node _T_128 = not(_T_123) @[Bitwise.scala 103:77]
    node _T_129 = and(_T_127, _T_128) @[Bitwise.scala 103:75]
    node _T_130 = or(_T_125, _T_129) @[Bitwise.scala 103:39]
    node _T_131 = bits(_T_123, 59, 0) @[Bitwise.scala 102:28]
    node _T_132 = shl(_T_131, 4) @[Bitwise.scala 102:47]
    node _T_133 = xor(_T_123, _T_132) @[Bitwise.scala 102:21]
    node _T_134 = shr(_T_130, 4) @[Bitwise.scala 103:21]
    node _T_135 = and(_T_134, _T_133) @[Bitwise.scala 103:31]
    node _T_136 = bits(_T_130, 59, 0) @[Bitwise.scala 103:46]
    node _T_137 = shl(_T_136, 4) @[Bitwise.scala 103:65]
    node _T_138 = not(_T_133) @[Bitwise.scala 103:77]
    node _T_139 = and(_T_137, _T_138) @[Bitwise.scala 103:75]
    node _T_140 = or(_T_135, _T_139) @[Bitwise.scala 103:39]
    node _T_141 = bits(_T_133, 61, 0) @[Bitwise.scala 102:28]
    node _T_142 = shl(_T_141, 2) @[Bitwise.scala 102:47]
    node _T_143 = xor(_T_133, _T_142) @[Bitwise.scala 102:21]
    node _T_144 = shr(_T_140, 2) @[Bitwise.scala 103:21]
    node _T_145 = and(_T_144, _T_143) @[Bitwise.scala 103:31]
    node _T_146 = bits(_T_140, 61, 0) @[Bitwise.scala 103:46]
    node _T_147 = shl(_T_146, 2) @[Bitwise.scala 103:65]
    node _T_148 = not(_T_143) @[Bitwise.scala 103:77]
    node _T_149 = and(_T_147, _T_148) @[Bitwise.scala 103:75]
    node _T_150 = or(_T_145, _T_149) @[Bitwise.scala 103:39]
    node _T_151 = bits(_T_143, 62, 0) @[Bitwise.scala 102:28]
    node _T_152 = shl(_T_151, 1) @[Bitwise.scala 102:47]
    node _T_153 = xor(_T_143, _T_152) @[Bitwise.scala 102:21]
    node _T_154 = shr(_T_150, 1) @[Bitwise.scala 103:21]
    node _T_155 = and(_T_154, _T_153) @[Bitwise.scala 103:31]
    node _T_156 = bits(_T_150, 62, 0) @[Bitwise.scala 103:46]
    node _T_157 = shl(_T_156, 1) @[Bitwise.scala 103:65]
    node _T_158 = not(_T_153) @[Bitwise.scala 103:77]
    node _T_159 = and(_T_157, _T_158) @[Bitwise.scala 103:75]
    node shout_l = or(_T_155, _T_159) @[Bitwise.scala 103:39]
    node _T_160 = eq(io.fn, UInt<3>("h05")) @[ALU.scala 85:25]
    node _T_161 = eq(io.fn, UInt<4>("h0b")) @[ALU.scala 85:44]
    node _T_162 = or(_T_160, _T_161) @[ALU.scala 85:35]
    node _T_163 = mux(_T_162, shout_r, UInt<1>("h00")) @[ALU.scala 85:18]
    node _T_164 = eq(io.fn, UInt<1>("h01")) @[ALU.scala 86:25]
    node _T_165 = mux(_T_164, shout_l, UInt<1>("h00")) @[ALU.scala 86:18]
    node shout = or(_T_163, _T_165) @[ALU.scala 85:74]
    node _T_166 = eq(io.fn, UInt<3>("h04")) @[ALU.scala 89:25]
    node _T_167 = eq(io.fn, UInt<3>("h06")) @[ALU.scala 89:45]
    node _T_168 = or(_T_166, _T_167) @[ALU.scala 89:36]
    node _T_169 = mux(_T_168, in1_xor_in2, UInt<1>("h00")) @[ALU.scala 89:18]
    node _T_170 = eq(io.fn, UInt<3>("h06")) @[ALU.scala 90:25]
    node _T_171 = eq(io.fn, UInt<3>("h07")) @[ALU.scala 90:44]
    node _T_172 = or(_T_170, _T_171) @[ALU.scala 90:35]
    node _T_173 = and(io.in1, io.in2) @[ALU.scala 90:63]
    node _T_174 = mux(_T_172, _T_173, UInt<1>("h00")) @[ALU.scala 90:18]
    node logic = or(_T_169, _T_174) @[ALU.scala 89:78]
    node _T_175 = geq(io.fn, UInt<4>("h0c")) @[ALU.scala 41:30]
    node _T_176 = and(_T_175, slt) @[ALU.scala 91:35]
    node _T_177 = or(_T_176, logic) @[ALU.scala 91:43]
    node shift_logic = or(_T_177, shout) @[ALU.scala 91:51]
    node _T_178 = eq(io.fn, UInt<1>("h00")) @[ALU.scala 92:23]
    node _T_179 = eq(io.fn, UInt<4>("h0a")) @[ALU.scala 92:43]
    node _T_180 = or(_T_178, _T_179) @[ALU.scala 92:34]
    node out = mux(_T_180, io.adder_out, shift_logic) @[ALU.scala 92:16]
    io.out <= out @[ALU.scala 94:10]
    node _T_181 = eq(io.dw, UInt<1>("h00")) @[ALU.scala 97:17]
    when _T_181 : @[ALU.scala 97:28]
      node _T_182 = bits(out, 31, 31) @[ALU.scala 97:56]
      node _T_183 = bits(_T_182, 0, 0) @[Bitwise.scala 72:15]
      node _T_184 = mux(_T_183, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
      node _T_185 = bits(out, 31, 0) @[ALU.scala 97:66]
      node _T_186 = cat(_T_184, _T_185) @[Cat.scala 29:58]
      io.out <= _T_186 @[ALU.scala 97:37]
      skip @[ALU.scala 97:28]
    
  module ALUUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, rs1_data : UInt<64>, rs2_data : UInt<64>, rs3_data : UInt<64>, pred_data : UInt<1>, kill : UInt<1>}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, predicated : UInt<1>, data : UInt<64>, fflags : {valid : UInt<1>, bits : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, flags : UInt<5>}}, addr : UInt<40>, mxcpt : {valid : UInt<1>, bits : UInt<17>}, sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<39>, asid : UInt<1>}}}}, flip brupdate : {b1 : {resolve_mask : UInt<8>, mispredict_mask : UInt<8>}, b2 : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, valid : UInt<1>, mispredict : UInt<1>, taken : UInt<1>, cfi_type : UInt<3>, pc_sel : UInt<2>, jalr_target : UInt<40>, target_offset : SInt<1>}}, bypass : {valid : UInt<1>, bits : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, data : UInt<64>, predicated : UInt<1>, fflags : {valid : UInt<1>, bits : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, flags : UInt<5>}}}}[3], brinfo : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, valid : UInt<1>, mispredict : UInt<1>, taken : UInt<1>, cfi_type : UInt<3>, pc_sel : UInt<2>, jalr_target : UInt<40>, target_offset : SInt<1>}, flip get_ftq_pc : {flip ftq_idx : UInt<4>, entry : {cfi_idx : {valid : UInt<1>, bits : UInt<2>}, cfi_taken : UInt<1>, cfi_mispredicted : UInt<1>, cfi_type : UInt<3>, br_mask : UInt<4>, cfi_is_call : UInt<1>, cfi_is_ret : UInt<1>, cfi_npc_plus4 : UInt<1>, ras_top : UInt<40>, ras_idx : UInt<5>, start_bank : UInt<1>}, ghist : {old_history : UInt<64>, current_saw_branch_not_taken : UInt<1>, new_saw_branch_not_taken : UInt<1>, new_saw_branch_taken : UInt<1>, ras_idx : UInt<5>}, pc : UInt<40>, com_pc : UInt<40>, next_val : UInt<1>, next_pc : UInt<40>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.req.ready <= UInt<1>("h01") @[functional-unit.scala 223:16]
    wire _T : UInt<1>[3] @[functional-unit.scala 226:35]
    _T[0] <= UInt<1>("h00") @[functional-unit.scala 226:35]
    _T[1] <= UInt<1>("h00") @[functional-unit.scala 226:35]
    _T[2] <= UInt<1>("h00") @[functional-unit.scala 226:35]
    reg _T_1 : UInt<1>[3], clock with : (reset => (reset, _T)) @[functional-unit.scala 226:27]
    reg _T_2 : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}[3], clock @[functional-unit.scala 227:23]
    node _T_3 = and(io.brupdate.b1.mispredict_mask, io.req.bits.uop.br_mask) @[util.scala 118:51]
    node _T_4 = neq(_T_3, UInt<1>("h00")) @[util.scala 118:59]
    node _T_5 = eq(_T_4, UInt<1>("h00")) @[functional-unit.scala 230:36]
    node _T_6 = and(io.req.valid, _T_5) @[functional-unit.scala 230:33]
    node _T_7 = eq(io.req.bits.kill, UInt<1>("h00")) @[functional-unit.scala 230:87]
    node _T_8 = and(_T_6, _T_7) @[functional-unit.scala 230:84]
    _T_1[0] <= _T_8 @[functional-unit.scala 230:17]
    _T_2[0].debug_tsrc <= io.req.bits.uop.debug_tsrc @[functional-unit.scala 231:17]
    _T_2[0].debug_fsrc <= io.req.bits.uop.debug_fsrc @[functional-unit.scala 231:17]
    _T_2[0].bp_xcpt_if <= io.req.bits.uop.bp_xcpt_if @[functional-unit.scala 231:17]
    _T_2[0].bp_debug_if <= io.req.bits.uop.bp_debug_if @[functional-unit.scala 231:17]
    _T_2[0].xcpt_ma_if <= io.req.bits.uop.xcpt_ma_if @[functional-unit.scala 231:17]
    _T_2[0].xcpt_ae_if <= io.req.bits.uop.xcpt_ae_if @[functional-unit.scala 231:17]
    _T_2[0].xcpt_pf_if <= io.req.bits.uop.xcpt_pf_if @[functional-unit.scala 231:17]
    _T_2[0].fp_single <= io.req.bits.uop.fp_single @[functional-unit.scala 231:17]
    _T_2[0].fp_val <= io.req.bits.uop.fp_val @[functional-unit.scala 231:17]
    _T_2[0].frs3_en <= io.req.bits.uop.frs3_en @[functional-unit.scala 231:17]
    _T_2[0].lrs2_rtype <= io.req.bits.uop.lrs2_rtype @[functional-unit.scala 231:17]
    _T_2[0].lrs1_rtype <= io.req.bits.uop.lrs1_rtype @[functional-unit.scala 231:17]
    _T_2[0].dst_rtype <= io.req.bits.uop.dst_rtype @[functional-unit.scala 231:17]
    _T_2[0].ldst_val <= io.req.bits.uop.ldst_val @[functional-unit.scala 231:17]
    _T_2[0].lrs3 <= io.req.bits.uop.lrs3 @[functional-unit.scala 231:17]
    _T_2[0].lrs2 <= io.req.bits.uop.lrs2 @[functional-unit.scala 231:17]
    _T_2[0].lrs1 <= io.req.bits.uop.lrs1 @[functional-unit.scala 231:17]
    _T_2[0].ldst <= io.req.bits.uop.ldst @[functional-unit.scala 231:17]
    _T_2[0].ldst_is_rs1 <= io.req.bits.uop.ldst_is_rs1 @[functional-unit.scala 231:17]
    _T_2[0].flush_on_commit <= io.req.bits.uop.flush_on_commit @[functional-unit.scala 231:17]
    _T_2[0].is_unique <= io.req.bits.uop.is_unique @[functional-unit.scala 231:17]
    _T_2[0].is_sys_pc2epc <= io.req.bits.uop.is_sys_pc2epc @[functional-unit.scala 231:17]
    _T_2[0].uses_stq <= io.req.bits.uop.uses_stq @[functional-unit.scala 231:17]
    _T_2[0].uses_ldq <= io.req.bits.uop.uses_ldq @[functional-unit.scala 231:17]
    _T_2[0].is_amo <= io.req.bits.uop.is_amo @[functional-unit.scala 231:17]
    _T_2[0].is_fencei <= io.req.bits.uop.is_fencei @[functional-unit.scala 231:17]
    _T_2[0].is_fence <= io.req.bits.uop.is_fence @[functional-unit.scala 231:17]
    _T_2[0].mem_signed <= io.req.bits.uop.mem_signed @[functional-unit.scala 231:17]
    _T_2[0].mem_size <= io.req.bits.uop.mem_size @[functional-unit.scala 231:17]
    _T_2[0].mem_cmd <= io.req.bits.uop.mem_cmd @[functional-unit.scala 231:17]
    _T_2[0].bypassable <= io.req.bits.uop.bypassable @[functional-unit.scala 231:17]
    _T_2[0].exc_cause <= io.req.bits.uop.exc_cause @[functional-unit.scala 231:17]
    _T_2[0].exception <= io.req.bits.uop.exception @[functional-unit.scala 231:17]
    _T_2[0].stale_pdst <= io.req.bits.uop.stale_pdst @[functional-unit.scala 231:17]
    _T_2[0].ppred_busy <= io.req.bits.uop.ppred_busy @[functional-unit.scala 231:17]
    _T_2[0].prs3_busy <= io.req.bits.uop.prs3_busy @[functional-unit.scala 231:17]
    _T_2[0].prs2_busy <= io.req.bits.uop.prs2_busy @[functional-unit.scala 231:17]
    _T_2[0].prs1_busy <= io.req.bits.uop.prs1_busy @[functional-unit.scala 231:17]
    _T_2[0].ppred <= io.req.bits.uop.ppred @[functional-unit.scala 231:17]
    _T_2[0].prs3 <= io.req.bits.uop.prs3 @[functional-unit.scala 231:17]
    _T_2[0].prs2 <= io.req.bits.uop.prs2 @[functional-unit.scala 231:17]
    _T_2[0].prs1 <= io.req.bits.uop.prs1 @[functional-unit.scala 231:17]
    _T_2[0].pdst <= io.req.bits.uop.pdst @[functional-unit.scala 231:17]
    _T_2[0].rxq_idx <= io.req.bits.uop.rxq_idx @[functional-unit.scala 231:17]
    _T_2[0].stq_idx <= io.req.bits.uop.stq_idx @[functional-unit.scala 231:17]
    _T_2[0].ldq_idx <= io.req.bits.uop.ldq_idx @[functional-unit.scala 231:17]
    _T_2[0].rob_idx <= io.req.bits.uop.rob_idx @[functional-unit.scala 231:17]
    _T_2[0].csr_addr <= io.req.bits.uop.csr_addr @[functional-unit.scala 231:17]
    _T_2[0].imm_packed <= io.req.bits.uop.imm_packed @[functional-unit.scala 231:17]
    _T_2[0].taken <= io.req.bits.uop.taken @[functional-unit.scala 231:17]
    _T_2[0].pc_lob <= io.req.bits.uop.pc_lob @[functional-unit.scala 231:17]
    _T_2[0].edge_inst <= io.req.bits.uop.edge_inst @[functional-unit.scala 231:17]
    _T_2[0].ftq_idx <= io.req.bits.uop.ftq_idx @[functional-unit.scala 231:17]
    _T_2[0].br_tag <= io.req.bits.uop.br_tag @[functional-unit.scala 231:17]
    _T_2[0].br_mask <= io.req.bits.uop.br_mask @[functional-unit.scala 231:17]
    _T_2[0].is_sfb <= io.req.bits.uop.is_sfb @[functional-unit.scala 231:17]
    _T_2[0].is_jal <= io.req.bits.uop.is_jal @[functional-unit.scala 231:17]
    _T_2[0].is_jalr <= io.req.bits.uop.is_jalr @[functional-unit.scala 231:17]
    _T_2[0].is_br <= io.req.bits.uop.is_br @[functional-unit.scala 231:17]
    _T_2[0].iw_p2_poisoned <= io.req.bits.uop.iw_p2_poisoned @[functional-unit.scala 231:17]
    _T_2[0].iw_p1_poisoned <= io.req.bits.uop.iw_p1_poisoned @[functional-unit.scala 231:17]
    _T_2[0].iw_state <= io.req.bits.uop.iw_state @[functional-unit.scala 231:17]
    _T_2[0].ctrl.is_std <= io.req.bits.uop.ctrl.is_std @[functional-unit.scala 231:17]
    _T_2[0].ctrl.is_sta <= io.req.bits.uop.ctrl.is_sta @[functional-unit.scala 231:17]
    _T_2[0].ctrl.is_load <= io.req.bits.uop.ctrl.is_load @[functional-unit.scala 231:17]
    _T_2[0].ctrl.csr_cmd <= io.req.bits.uop.ctrl.csr_cmd @[functional-unit.scala 231:17]
    _T_2[0].ctrl.fcn_dw <= io.req.bits.uop.ctrl.fcn_dw @[functional-unit.scala 231:17]
    _T_2[0].ctrl.op_fcn <= io.req.bits.uop.ctrl.op_fcn @[functional-unit.scala 231:17]
    _T_2[0].ctrl.imm_sel <= io.req.bits.uop.ctrl.imm_sel @[functional-unit.scala 231:17]
    _T_2[0].ctrl.op2_sel <= io.req.bits.uop.ctrl.op2_sel @[functional-unit.scala 231:17]
    _T_2[0].ctrl.op1_sel <= io.req.bits.uop.ctrl.op1_sel @[functional-unit.scala 231:17]
    _T_2[0].ctrl.br_type <= io.req.bits.uop.ctrl.br_type @[functional-unit.scala 231:17]
    _T_2[0].fu_code <= io.req.bits.uop.fu_code @[functional-unit.scala 231:17]
    _T_2[0].iq_type <= io.req.bits.uop.iq_type @[functional-unit.scala 231:17]
    _T_2[0].debug_pc <= io.req.bits.uop.debug_pc @[functional-unit.scala 231:17]
    _T_2[0].is_rvc <= io.req.bits.uop.is_rvc @[functional-unit.scala 231:17]
    _T_2[0].debug_inst <= io.req.bits.uop.debug_inst @[functional-unit.scala 231:17]
    _T_2[0].inst <= io.req.bits.uop.inst @[functional-unit.scala 231:17]
    _T_2[0].uopc <= io.req.bits.uop.uopc @[functional-unit.scala 231:17]
    node _T_9 = not(io.brupdate.b1.resolve_mask) @[util.scala 85:27]
    node _T_10 = and(io.req.bits.uop.br_mask, _T_9) @[util.scala 85:25]
    _T_2[0].br_mask <= _T_10 @[functional-unit.scala 232:23]
    node _T_11 = and(io.brupdate.b1.mispredict_mask, _T_2[0].br_mask) @[util.scala 118:51]
    node _T_12 = neq(_T_11, UInt<1>("h00")) @[util.scala 118:59]
    node _T_13 = eq(_T_12, UInt<1>("h00")) @[functional-unit.scala 236:39]
    node _T_14 = and(_T_1[0], _T_13) @[functional-unit.scala 236:36]
    node _T_15 = eq(io.req.bits.kill, UInt<1>("h00")) @[functional-unit.scala 236:86]
    node _T_16 = and(_T_14, _T_15) @[functional-unit.scala 236:83]
    _T_1[1] <= _T_16 @[functional-unit.scala 236:19]
    _T_2[1].debug_tsrc <= _T_2[0].debug_tsrc @[functional-unit.scala 237:19]
    _T_2[1].debug_fsrc <= _T_2[0].debug_fsrc @[functional-unit.scala 237:19]
    _T_2[1].bp_xcpt_if <= _T_2[0].bp_xcpt_if @[functional-unit.scala 237:19]
    _T_2[1].bp_debug_if <= _T_2[0].bp_debug_if @[functional-unit.scala 237:19]
    _T_2[1].xcpt_ma_if <= _T_2[0].xcpt_ma_if @[functional-unit.scala 237:19]
    _T_2[1].xcpt_ae_if <= _T_2[0].xcpt_ae_if @[functional-unit.scala 237:19]
    _T_2[1].xcpt_pf_if <= _T_2[0].xcpt_pf_if @[functional-unit.scala 237:19]
    _T_2[1].fp_single <= _T_2[0].fp_single @[functional-unit.scala 237:19]
    _T_2[1].fp_val <= _T_2[0].fp_val @[functional-unit.scala 237:19]
    _T_2[1].frs3_en <= _T_2[0].frs3_en @[functional-unit.scala 237:19]
    _T_2[1].lrs2_rtype <= _T_2[0].lrs2_rtype @[functional-unit.scala 237:19]
    _T_2[1].lrs1_rtype <= _T_2[0].lrs1_rtype @[functional-unit.scala 237:19]
    _T_2[1].dst_rtype <= _T_2[0].dst_rtype @[functional-unit.scala 237:19]
    _T_2[1].ldst_val <= _T_2[0].ldst_val @[functional-unit.scala 237:19]
    _T_2[1].lrs3 <= _T_2[0].lrs3 @[functional-unit.scala 237:19]
    _T_2[1].lrs2 <= _T_2[0].lrs2 @[functional-unit.scala 237:19]
    _T_2[1].lrs1 <= _T_2[0].lrs1 @[functional-unit.scala 237:19]
    _T_2[1].ldst <= _T_2[0].ldst @[functional-unit.scala 237:19]
    _T_2[1].ldst_is_rs1 <= _T_2[0].ldst_is_rs1 @[functional-unit.scala 237:19]
    _T_2[1].flush_on_commit <= _T_2[0].flush_on_commit @[functional-unit.scala 237:19]
    _T_2[1].is_unique <= _T_2[0].is_unique @[functional-unit.scala 237:19]
    _T_2[1].is_sys_pc2epc <= _T_2[0].is_sys_pc2epc @[functional-unit.scala 237:19]
    _T_2[1].uses_stq <= _T_2[0].uses_stq @[functional-unit.scala 237:19]
    _T_2[1].uses_ldq <= _T_2[0].uses_ldq @[functional-unit.scala 237:19]
    _T_2[1].is_amo <= _T_2[0].is_amo @[functional-unit.scala 237:19]
    _T_2[1].is_fencei <= _T_2[0].is_fencei @[functional-unit.scala 237:19]
    _T_2[1].is_fence <= _T_2[0].is_fence @[functional-unit.scala 237:19]
    _T_2[1].mem_signed <= _T_2[0].mem_signed @[functional-unit.scala 237:19]
    _T_2[1].mem_size <= _T_2[0].mem_size @[functional-unit.scala 237:19]
    _T_2[1].mem_cmd <= _T_2[0].mem_cmd @[functional-unit.scala 237:19]
    _T_2[1].bypassable <= _T_2[0].bypassable @[functional-unit.scala 237:19]
    _T_2[1].exc_cause <= _T_2[0].exc_cause @[functional-unit.scala 237:19]
    _T_2[1].exception <= _T_2[0].exception @[functional-unit.scala 237:19]
    _T_2[1].stale_pdst <= _T_2[0].stale_pdst @[functional-unit.scala 237:19]
    _T_2[1].ppred_busy <= _T_2[0].ppred_busy @[functional-unit.scala 237:19]
    _T_2[1].prs3_busy <= _T_2[0].prs3_busy @[functional-unit.scala 237:19]
    _T_2[1].prs2_busy <= _T_2[0].prs2_busy @[functional-unit.scala 237:19]
    _T_2[1].prs1_busy <= _T_2[0].prs1_busy @[functional-unit.scala 237:19]
    _T_2[1].ppred <= _T_2[0].ppred @[functional-unit.scala 237:19]
    _T_2[1].prs3 <= _T_2[0].prs3 @[functional-unit.scala 237:19]
    _T_2[1].prs2 <= _T_2[0].prs2 @[functional-unit.scala 237:19]
    _T_2[1].prs1 <= _T_2[0].prs1 @[functional-unit.scala 237:19]
    _T_2[1].pdst <= _T_2[0].pdst @[functional-unit.scala 237:19]
    _T_2[1].rxq_idx <= _T_2[0].rxq_idx @[functional-unit.scala 237:19]
    _T_2[1].stq_idx <= _T_2[0].stq_idx @[functional-unit.scala 237:19]
    _T_2[1].ldq_idx <= _T_2[0].ldq_idx @[functional-unit.scala 237:19]
    _T_2[1].rob_idx <= _T_2[0].rob_idx @[functional-unit.scala 237:19]
    _T_2[1].csr_addr <= _T_2[0].csr_addr @[functional-unit.scala 237:19]
    _T_2[1].imm_packed <= _T_2[0].imm_packed @[functional-unit.scala 237:19]
    _T_2[1].taken <= _T_2[0].taken @[functional-unit.scala 237:19]
    _T_2[1].pc_lob <= _T_2[0].pc_lob @[functional-unit.scala 237:19]
    _T_2[1].edge_inst <= _T_2[0].edge_inst @[functional-unit.scala 237:19]
    _T_2[1].ftq_idx <= _T_2[0].ftq_idx @[functional-unit.scala 237:19]
    _T_2[1].br_tag <= _T_2[0].br_tag @[functional-unit.scala 237:19]
    _T_2[1].br_mask <= _T_2[0].br_mask @[functional-unit.scala 237:19]
    _T_2[1].is_sfb <= _T_2[0].is_sfb @[functional-unit.scala 237:19]
    _T_2[1].is_jal <= _T_2[0].is_jal @[functional-unit.scala 237:19]
    _T_2[1].is_jalr <= _T_2[0].is_jalr @[functional-unit.scala 237:19]
    _T_2[1].is_br <= _T_2[0].is_br @[functional-unit.scala 237:19]
    _T_2[1].iw_p2_poisoned <= _T_2[0].iw_p2_poisoned @[functional-unit.scala 237:19]
    _T_2[1].iw_p1_poisoned <= _T_2[0].iw_p1_poisoned @[functional-unit.scala 237:19]
    _T_2[1].iw_state <= _T_2[0].iw_state @[functional-unit.scala 237:19]
    _T_2[1].ctrl.is_std <= _T_2[0].ctrl.is_std @[functional-unit.scala 237:19]
    _T_2[1].ctrl.is_sta <= _T_2[0].ctrl.is_sta @[functional-unit.scala 237:19]
    _T_2[1].ctrl.is_load <= _T_2[0].ctrl.is_load @[functional-unit.scala 237:19]
    _T_2[1].ctrl.csr_cmd <= _T_2[0].ctrl.csr_cmd @[functional-unit.scala 237:19]
    _T_2[1].ctrl.fcn_dw <= _T_2[0].ctrl.fcn_dw @[functional-unit.scala 237:19]
    _T_2[1].ctrl.op_fcn <= _T_2[0].ctrl.op_fcn @[functional-unit.scala 237:19]
    _T_2[1].ctrl.imm_sel <= _T_2[0].ctrl.imm_sel @[functional-unit.scala 237:19]
    _T_2[1].ctrl.op2_sel <= _T_2[0].ctrl.op2_sel @[functional-unit.scala 237:19]
    _T_2[1].ctrl.op1_sel <= _T_2[0].ctrl.op1_sel @[functional-unit.scala 237:19]
    _T_2[1].ctrl.br_type <= _T_2[0].ctrl.br_type @[functional-unit.scala 237:19]
    _T_2[1].fu_code <= _T_2[0].fu_code @[functional-unit.scala 237:19]
    _T_2[1].iq_type <= _T_2[0].iq_type @[functional-unit.scala 237:19]
    _T_2[1].debug_pc <= _T_2[0].debug_pc @[functional-unit.scala 237:19]
    _T_2[1].is_rvc <= _T_2[0].is_rvc @[functional-unit.scala 237:19]
    _T_2[1].debug_inst <= _T_2[0].debug_inst @[functional-unit.scala 237:19]
    _T_2[1].inst <= _T_2[0].inst @[functional-unit.scala 237:19]
    _T_2[1].uopc <= _T_2[0].uopc @[functional-unit.scala 237:19]
    node _T_17 = not(io.brupdate.b1.resolve_mask) @[util.scala 85:27]
    node _T_18 = and(_T_2[0].br_mask, _T_17) @[util.scala 85:25]
    _T_2[1].br_mask <= _T_18 @[functional-unit.scala 238:25]
    io.bypass[0].bits.uop.debug_tsrc <= _T_2[0].debug_tsrc @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.debug_fsrc <= _T_2[0].debug_fsrc @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.bp_xcpt_if <= _T_2[0].bp_xcpt_if @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.bp_debug_if <= _T_2[0].bp_debug_if @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.xcpt_ma_if <= _T_2[0].xcpt_ma_if @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.xcpt_ae_if <= _T_2[0].xcpt_ae_if @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.xcpt_pf_if <= _T_2[0].xcpt_pf_if @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.fp_single <= _T_2[0].fp_single @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.fp_val <= _T_2[0].fp_val @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.frs3_en <= _T_2[0].frs3_en @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.lrs2_rtype <= _T_2[0].lrs2_rtype @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.lrs1_rtype <= _T_2[0].lrs1_rtype @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.dst_rtype <= _T_2[0].dst_rtype @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ldst_val <= _T_2[0].ldst_val @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.lrs3 <= _T_2[0].lrs3 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.lrs2 <= _T_2[0].lrs2 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.lrs1 <= _T_2[0].lrs1 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ldst <= _T_2[0].ldst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ldst_is_rs1 <= _T_2[0].ldst_is_rs1 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.flush_on_commit <= _T_2[0].flush_on_commit @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_unique <= _T_2[0].is_unique @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_sys_pc2epc <= _T_2[0].is_sys_pc2epc @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.uses_stq <= _T_2[0].uses_stq @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.uses_ldq <= _T_2[0].uses_ldq @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_amo <= _T_2[0].is_amo @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_fencei <= _T_2[0].is_fencei @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_fence <= _T_2[0].is_fence @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.mem_signed <= _T_2[0].mem_signed @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.mem_size <= _T_2[0].mem_size @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.mem_cmd <= _T_2[0].mem_cmd @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.bypassable <= _T_2[0].bypassable @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.exc_cause <= _T_2[0].exc_cause @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.exception <= _T_2[0].exception @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.stale_pdst <= _T_2[0].stale_pdst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ppred_busy <= _T_2[0].ppred_busy @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs3_busy <= _T_2[0].prs3_busy @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs2_busy <= _T_2[0].prs2_busy @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs1_busy <= _T_2[0].prs1_busy @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ppred <= _T_2[0].ppred @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs3 <= _T_2[0].prs3 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs2 <= _T_2[0].prs2 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.prs1 <= _T_2[0].prs1 @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.pdst <= _T_2[0].pdst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.rxq_idx <= _T_2[0].rxq_idx @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.stq_idx <= _T_2[0].stq_idx @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ldq_idx <= _T_2[0].ldq_idx @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.rob_idx <= _T_2[0].rob_idx @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.csr_addr <= _T_2[0].csr_addr @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.imm_packed <= _T_2[0].imm_packed @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.taken <= _T_2[0].taken @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.pc_lob <= _T_2[0].pc_lob @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.edge_inst <= _T_2[0].edge_inst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ftq_idx <= _T_2[0].ftq_idx @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.br_tag <= _T_2[0].br_tag @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.br_mask <= _T_2[0].br_mask @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_sfb <= _T_2[0].is_sfb @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_jal <= _T_2[0].is_jal @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_jalr <= _T_2[0].is_jalr @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_br <= _T_2[0].is_br @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.iw_p2_poisoned <= _T_2[0].iw_p2_poisoned @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.iw_p1_poisoned <= _T_2[0].iw_p1_poisoned @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.iw_state <= _T_2[0].iw_state @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.is_std <= _T_2[0].ctrl.is_std @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.is_sta <= _T_2[0].ctrl.is_sta @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.is_load <= _T_2[0].ctrl.is_load @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.csr_cmd <= _T_2[0].ctrl.csr_cmd @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.fcn_dw <= _T_2[0].ctrl.fcn_dw @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.op_fcn <= _T_2[0].ctrl.op_fcn @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.imm_sel <= _T_2[0].ctrl.imm_sel @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.op2_sel <= _T_2[0].ctrl.op2_sel @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.op1_sel <= _T_2[0].ctrl.op1_sel @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.ctrl.br_type <= _T_2[0].ctrl.br_type @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.fu_code <= _T_2[0].fu_code @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.iq_type <= _T_2[0].iq_type @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.debug_pc <= _T_2[0].debug_pc @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.is_rvc <= _T_2[0].is_rvc @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.debug_inst <= _T_2[0].debug_inst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.inst <= _T_2[0].inst @[functional-unit.scala 241:33]
    io.bypass[0].bits.uop.uopc <= _T_2[0].uopc @[functional-unit.scala 241:33]
    node _T_19 = and(io.brupdate.b1.mispredict_mask, _T_2[1].br_mask) @[util.scala 118:51]
    node _T_20 = neq(_T_19, UInt<1>("h00")) @[util.scala 118:59]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[functional-unit.scala 236:39]
    node _T_22 = and(_T_1[1], _T_21) @[functional-unit.scala 236:36]
    node _T_23 = eq(io.req.bits.kill, UInt<1>("h00")) @[functional-unit.scala 236:86]
    node _T_24 = and(_T_22, _T_23) @[functional-unit.scala 236:83]
    _T_1[2] <= _T_24 @[functional-unit.scala 236:19]
    _T_2[2].debug_tsrc <= _T_2[1].debug_tsrc @[functional-unit.scala 237:19]
    _T_2[2].debug_fsrc <= _T_2[1].debug_fsrc @[functional-unit.scala 237:19]
    _T_2[2].bp_xcpt_if <= _T_2[1].bp_xcpt_if @[functional-unit.scala 237:19]
    _T_2[2].bp_debug_if <= _T_2[1].bp_debug_if @[functional-unit.scala 237:19]
    _T_2[2].xcpt_ma_if <= _T_2[1].xcpt_ma_if @[functional-unit.scala 237:19]
    _T_2[2].xcpt_ae_if <= _T_2[1].xcpt_ae_if @[functional-unit.scala 237:19]
    _T_2[2].xcpt_pf_if <= _T_2[1].xcpt_pf_if @[functional-unit.scala 237:19]
    _T_2[2].fp_single <= _T_2[1].fp_single @[functional-unit.scala 237:19]
    _T_2[2].fp_val <= _T_2[1].fp_val @[functional-unit.scala 237:19]
    _T_2[2].frs3_en <= _T_2[1].frs3_en @[functional-unit.scala 237:19]
    _T_2[2].lrs2_rtype <= _T_2[1].lrs2_rtype @[functional-unit.scala 237:19]
    _T_2[2].lrs1_rtype <= _T_2[1].lrs1_rtype @[functional-unit.scala 237:19]
    _T_2[2].dst_rtype <= _T_2[1].dst_rtype @[functional-unit.scala 237:19]
    _T_2[2].ldst_val <= _T_2[1].ldst_val @[functional-unit.scala 237:19]
    _T_2[2].lrs3 <= _T_2[1].lrs3 @[functional-unit.scala 237:19]
    _T_2[2].lrs2 <= _T_2[1].lrs2 @[functional-unit.scala 237:19]
    _T_2[2].lrs1 <= _T_2[1].lrs1 @[functional-unit.scala 237:19]
    _T_2[2].ldst <= _T_2[1].ldst @[functional-unit.scala 237:19]
    _T_2[2].ldst_is_rs1 <= _T_2[1].ldst_is_rs1 @[functional-unit.scala 237:19]
    _T_2[2].flush_on_commit <= _T_2[1].flush_on_commit @[functional-unit.scala 237:19]
    _T_2[2].is_unique <= _T_2[1].is_unique @[functional-unit.scala 237:19]
    _T_2[2].is_sys_pc2epc <= _T_2[1].is_sys_pc2epc @[functional-unit.scala 237:19]
    _T_2[2].uses_stq <= _T_2[1].uses_stq @[functional-unit.scala 237:19]
    _T_2[2].uses_ldq <= _T_2[1].uses_ldq @[functional-unit.scala 237:19]
    _T_2[2].is_amo <= _T_2[1].is_amo @[functional-unit.scala 237:19]
    _T_2[2].is_fencei <= _T_2[1].is_fencei @[functional-unit.scala 237:19]
    _T_2[2].is_fence <= _T_2[1].is_fence @[functional-unit.scala 237:19]
    _T_2[2].mem_signed <= _T_2[1].mem_signed @[functional-unit.scala 237:19]
    _T_2[2].mem_size <= _T_2[1].mem_size @[functional-unit.scala 237:19]
    _T_2[2].mem_cmd <= _T_2[1].mem_cmd @[functional-unit.scala 237:19]
    _T_2[2].bypassable <= _T_2[1].bypassable @[functional-unit.scala 237:19]
    _T_2[2].exc_cause <= _T_2[1].exc_cause @[functional-unit.scala 237:19]
    _T_2[2].exception <= _T_2[1].exception @[functional-unit.scala 237:19]
    _T_2[2].stale_pdst <= _T_2[1].stale_pdst @[functional-unit.scala 237:19]
    _T_2[2].ppred_busy <= _T_2[1].ppred_busy @[functional-unit.scala 237:19]
    _T_2[2].prs3_busy <= _T_2[1].prs3_busy @[functional-unit.scala 237:19]
    _T_2[2].prs2_busy <= _T_2[1].prs2_busy @[functional-unit.scala 237:19]
    _T_2[2].prs1_busy <= _T_2[1].prs1_busy @[functional-unit.scala 237:19]
    _T_2[2].ppred <= _T_2[1].ppred @[functional-unit.scala 237:19]
    _T_2[2].prs3 <= _T_2[1].prs3 @[functional-unit.scala 237:19]
    _T_2[2].prs2 <= _T_2[1].prs2 @[functional-unit.scala 237:19]
    _T_2[2].prs1 <= _T_2[1].prs1 @[functional-unit.scala 237:19]
    _T_2[2].pdst <= _T_2[1].pdst @[functional-unit.scala 237:19]
    _T_2[2].rxq_idx <= _T_2[1].rxq_idx @[functional-unit.scala 237:19]
    _T_2[2].stq_idx <= _T_2[1].stq_idx @[functional-unit.scala 237:19]
    _T_2[2].ldq_idx <= _T_2[1].ldq_idx @[functional-unit.scala 237:19]
    _T_2[2].rob_idx <= _T_2[1].rob_idx @[functional-unit.scala 237:19]
    _T_2[2].csr_addr <= _T_2[1].csr_addr @[functional-unit.scala 237:19]
    _T_2[2].imm_packed <= _T_2[1].imm_packed @[functional-unit.scala 237:19]
    _T_2[2].taken <= _T_2[1].taken @[functional-unit.scala 237:19]
    _T_2[2].pc_lob <= _T_2[1].pc_lob @[functional-unit.scala 237:19]
    _T_2[2].edge_inst <= _T_2[1].edge_inst @[functional-unit.scala 237:19]
    _T_2[2].ftq_idx <= _T_2[1].ftq_idx @[functional-unit.scala 237:19]
    _T_2[2].br_tag <= _T_2[1].br_tag @[functional-unit.scala 237:19]
    _T_2[2].br_mask <= _T_2[1].br_mask @[functional-unit.scala 237:19]
    _T_2[2].is_sfb <= _T_2[1].is_sfb @[functional-unit.scala 237:19]
    _T_2[2].is_jal <= _T_2[1].is_jal @[functional-unit.scala 237:19]
    _T_2[2].is_jalr <= _T_2[1].is_jalr @[functional-unit.scala 237:19]
    _T_2[2].is_br <= _T_2[1].is_br @[functional-unit.scala 237:19]
    _T_2[2].iw_p2_poisoned <= _T_2[1].iw_p2_poisoned @[functional-unit.scala 237:19]
    _T_2[2].iw_p1_poisoned <= _T_2[1].iw_p1_poisoned @[functional-unit.scala 237:19]
    _T_2[2].iw_state <= _T_2[1].iw_state @[functional-unit.scala 237:19]
    _T_2[2].ctrl.is_std <= _T_2[1].ctrl.is_std @[functional-unit.scala 237:19]
    _T_2[2].ctrl.is_sta <= _T_2[1].ctrl.is_sta @[functional-unit.scala 237:19]
    _T_2[2].ctrl.is_load <= _T_2[1].ctrl.is_load @[functional-unit.scala 237:19]
    _T_2[2].ctrl.csr_cmd <= _T_2[1].ctrl.csr_cmd @[functional-unit.scala 237:19]
    _T_2[2].ctrl.fcn_dw <= _T_2[1].ctrl.fcn_dw @[functional-unit.scala 237:19]
    _T_2[2].ctrl.op_fcn <= _T_2[1].ctrl.op_fcn @[functional-unit.scala 237:19]
    _T_2[2].ctrl.imm_sel <= _T_2[1].ctrl.imm_sel @[functional-unit.scala 237:19]
    _T_2[2].ctrl.op2_sel <= _T_2[1].ctrl.op2_sel @[functional-unit.scala 237:19]
    _T_2[2].ctrl.op1_sel <= _T_2[1].ctrl.op1_sel @[functional-unit.scala 237:19]
    _T_2[2].ctrl.br_type <= _T_2[1].ctrl.br_type @[functional-unit.scala 237:19]
    _T_2[2].fu_code <= _T_2[1].fu_code @[functional-unit.scala 237:19]
    _T_2[2].iq_type <= _T_2[1].iq_type @[functional-unit.scala 237:19]
    _T_2[2].debug_pc <= _T_2[1].debug_pc @[functional-unit.scala 237:19]
    _T_2[2].is_rvc <= _T_2[1].is_rvc @[functional-unit.scala 237:19]
    _T_2[2].debug_inst <= _T_2[1].debug_inst @[functional-unit.scala 237:19]
    _T_2[2].inst <= _T_2[1].inst @[functional-unit.scala 237:19]
    _T_2[2].uopc <= _T_2[1].uopc @[functional-unit.scala 237:19]
    node _T_25 = not(io.brupdate.b1.resolve_mask) @[util.scala 85:27]
    node _T_26 = and(_T_2[1].br_mask, _T_25) @[util.scala 85:25]
    _T_2[2].br_mask <= _T_26 @[functional-unit.scala 238:25]
    io.bypass[1].bits.uop.debug_tsrc <= _T_2[1].debug_tsrc @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.debug_fsrc <= _T_2[1].debug_fsrc @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.bp_xcpt_if <= _T_2[1].bp_xcpt_if @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.bp_debug_if <= _T_2[1].bp_debug_if @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.xcpt_ma_if <= _T_2[1].xcpt_ma_if @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.xcpt_ae_if <= _T_2[1].xcpt_ae_if @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.xcpt_pf_if <= _T_2[1].xcpt_pf_if @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.fp_single <= _T_2[1].fp_single @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.fp_val <= _T_2[1].fp_val @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.frs3_en <= _T_2[1].frs3_en @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.lrs2_rtype <= _T_2[1].lrs2_rtype @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.lrs1_rtype <= _T_2[1].lrs1_rtype @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.dst_rtype <= _T_2[1].dst_rtype @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ldst_val <= _T_2[1].ldst_val @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.lrs3 <= _T_2[1].lrs3 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.lrs2 <= _T_2[1].lrs2 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.lrs1 <= _T_2[1].lrs1 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ldst <= _T_2[1].ldst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ldst_is_rs1 <= _T_2[1].ldst_is_rs1 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.flush_on_commit <= _T_2[1].flush_on_commit @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_unique <= _T_2[1].is_unique @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_sys_pc2epc <= _T_2[1].is_sys_pc2epc @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.uses_stq <= _T_2[1].uses_stq @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.uses_ldq <= _T_2[1].uses_ldq @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_amo <= _T_2[1].is_amo @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_fencei <= _T_2[1].is_fencei @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_fence <= _T_2[1].is_fence @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.mem_signed <= _T_2[1].mem_signed @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.mem_size <= _T_2[1].mem_size @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.mem_cmd <= _T_2[1].mem_cmd @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.bypassable <= _T_2[1].bypassable @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.exc_cause <= _T_2[1].exc_cause @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.exception <= _T_2[1].exception @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.stale_pdst <= _T_2[1].stale_pdst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ppred_busy <= _T_2[1].ppred_busy @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs3_busy <= _T_2[1].prs3_busy @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs2_busy <= _T_2[1].prs2_busy @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs1_busy <= _T_2[1].prs1_busy @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ppred <= _T_2[1].ppred @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs3 <= _T_2[1].prs3 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs2 <= _T_2[1].prs2 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.prs1 <= _T_2[1].prs1 @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.pdst <= _T_2[1].pdst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.rxq_idx <= _T_2[1].rxq_idx @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.stq_idx <= _T_2[1].stq_idx @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ldq_idx <= _T_2[1].ldq_idx @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.rob_idx <= _T_2[1].rob_idx @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.csr_addr <= _T_2[1].csr_addr @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.imm_packed <= _T_2[1].imm_packed @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.taken <= _T_2[1].taken @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.pc_lob <= _T_2[1].pc_lob @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.edge_inst <= _T_2[1].edge_inst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ftq_idx <= _T_2[1].ftq_idx @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.br_tag <= _T_2[1].br_tag @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.br_mask <= _T_2[1].br_mask @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_sfb <= _T_2[1].is_sfb @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_jal <= _T_2[1].is_jal @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_jalr <= _T_2[1].is_jalr @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_br <= _T_2[1].is_br @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.iw_p2_poisoned <= _T_2[1].iw_p2_poisoned @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.iw_p1_poisoned <= _T_2[1].iw_p1_poisoned @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.iw_state <= _T_2[1].iw_state @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.is_std <= _T_2[1].ctrl.is_std @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.is_sta <= _T_2[1].ctrl.is_sta @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.is_load <= _T_2[1].ctrl.is_load @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.csr_cmd <= _T_2[1].ctrl.csr_cmd @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.fcn_dw <= _T_2[1].ctrl.fcn_dw @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.op_fcn <= _T_2[1].ctrl.op_fcn @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.imm_sel <= _T_2[1].ctrl.imm_sel @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.op2_sel <= _T_2[1].ctrl.op2_sel @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.op1_sel <= _T_2[1].ctrl.op1_sel @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.ctrl.br_type <= _T_2[1].ctrl.br_type @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.fu_code <= _T_2[1].fu_code @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.iq_type <= _T_2[1].iq_type @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.debug_pc <= _T_2[1].debug_pc @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.is_rvc <= _T_2[1].is_rvc @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.debug_inst <= _T_2[1].debug_inst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.inst <= _T_2[1].inst @[functional-unit.scala 241:33]
    io.bypass[1].bits.uop.uopc <= _T_2[1].uopc @[functional-unit.scala 241:33]
    node _T_27 = and(io.brupdate.b1.mispredict_mask, _T_2[2].br_mask) @[util.scala 118:51]
    node _T_28 = neq(_T_27, UInt<1>("h00")) @[util.scala 118:59]
    node _T_29 = eq(_T_28, UInt<1>("h00")) @[functional-unit.scala 247:50]
    node _T_30 = and(_T_1[2], _T_29) @[functional-unit.scala 247:47]
    io.resp.valid <= _T_30 @[functional-unit.scala 247:22]
    io.resp.bits.predicated <= UInt<1>("h00") @[functional-unit.scala 248:29]
    io.resp.bits.uop.debug_tsrc <= _T_2[2].debug_tsrc @[functional-unit.scala 249:22]
    io.resp.bits.uop.debug_fsrc <= _T_2[2].debug_fsrc @[functional-unit.scala 249:22]
    io.resp.bits.uop.bp_xcpt_if <= _T_2[2].bp_xcpt_if @[functional-unit.scala 249:22]
    io.resp.bits.uop.bp_debug_if <= _T_2[2].bp_debug_if @[functional-unit.scala 249:22]
    io.resp.bits.uop.xcpt_ma_if <= _T_2[2].xcpt_ma_if @[functional-unit.scala 249:22]
    io.resp.bits.uop.xcpt_ae_if <= _T_2[2].xcpt_ae_if @[functional-unit.scala 249:22]
    io.resp.bits.uop.xcpt_pf_if <= _T_2[2].xcpt_pf_if @[functional-unit.scala 249:22]
    io.resp.bits.uop.fp_single <= _T_2[2].fp_single @[functional-unit.scala 249:22]
    io.resp.bits.uop.fp_val <= _T_2[2].fp_val @[functional-unit.scala 249:22]
    io.resp.bits.uop.frs3_en <= _T_2[2].frs3_en @[functional-unit.scala 249:22]
    io.resp.bits.uop.lrs2_rtype <= _T_2[2].lrs2_rtype @[functional-unit.scala 249:22]
    io.resp.bits.uop.lrs1_rtype <= _T_2[2].lrs1_rtype @[functional-unit.scala 249:22]
    io.resp.bits.uop.dst_rtype <= _T_2[2].dst_rtype @[functional-unit.scala 249:22]
    io.resp.bits.uop.ldst_val <= _T_2[2].ldst_val @[functional-unit.scala 249:22]
    io.resp.bits.uop.lrs3 <= _T_2[2].lrs3 @[functional-unit.scala 249:22]
    io.resp.bits.uop.lrs2 <= _T_2[2].lrs2 @[functional-unit.scala 249:22]
    io.resp.bits.uop.lrs1 <= _T_2[2].lrs1 @[functional-unit.scala 249:22]
    io.resp.bits.uop.ldst <= _T_2[2].ldst @[functional-unit.scala 249:22]
    io.resp.bits.uop.ldst_is_rs1 <= _T_2[2].ldst_is_rs1 @[functional-unit.scala 249:22]
    io.resp.bits.uop.flush_on_commit <= _T_2[2].flush_on_commit @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_unique <= _T_2[2].is_unique @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_sys_pc2epc <= _T_2[2].is_sys_pc2epc @[functional-unit.scala 249:22]
    io.resp.bits.uop.uses_stq <= _T_2[2].uses_stq @[functional-unit.scala 249:22]
    io.resp.bits.uop.uses_ldq <= _T_2[2].uses_ldq @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_amo <= _T_2[2].is_amo @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_fencei <= _T_2[2].is_fencei @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_fence <= _T_2[2].is_fence @[functional-unit.scala 249:22]
    io.resp.bits.uop.mem_signed <= _T_2[2].mem_signed @[functional-unit.scala 249:22]
    io.resp.bits.uop.mem_size <= _T_2[2].mem_size @[functional-unit.scala 249:22]
    io.resp.bits.uop.mem_cmd <= _T_2[2].mem_cmd @[functional-unit.scala 249:22]
    io.resp.bits.uop.bypassable <= _T_2[2].bypassable @[functional-unit.scala 249:22]
    io.resp.bits.uop.exc_cause <= _T_2[2].exc_cause @[functional-unit.scala 249:22]
    io.resp.bits.uop.exception <= _T_2[2].exception @[functional-unit.scala 249:22]
    io.resp.bits.uop.stale_pdst <= _T_2[2].stale_pdst @[functional-unit.scala 249:22]
    io.resp.bits.uop.ppred_busy <= _T_2[2].ppred_busy @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs3_busy <= _T_2[2].prs3_busy @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs2_busy <= _T_2[2].prs2_busy @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs1_busy <= _T_2[2].prs1_busy @[functional-unit.scala 249:22]
    io.resp.bits.uop.ppred <= _T_2[2].ppred @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs3 <= _T_2[2].prs3 @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs2 <= _T_2[2].prs2 @[functional-unit.scala 249:22]
    io.resp.bits.uop.prs1 <= _T_2[2].prs1 @[functional-unit.scala 249:22]
    io.resp.bits.uop.pdst <= _T_2[2].pdst @[functional-unit.scala 249:22]
    io.resp.bits.uop.rxq_idx <= _T_2[2].rxq_idx @[functional-unit.scala 249:22]
    io.resp.bits.uop.stq_idx <= _T_2[2].stq_idx @[functional-unit.scala 249:22]
    io.resp.bits.uop.ldq_idx <= _T_2[2].ldq_idx @[functional-unit.scala 249:22]
    io.resp.bits.uop.rob_idx <= _T_2[2].rob_idx @[functional-unit.scala 249:22]
    io.resp.bits.uop.csr_addr <= _T_2[2].csr_addr @[functional-unit.scala 249:22]
    io.resp.bits.uop.imm_packed <= _T_2[2].imm_packed @[functional-unit.scala 249:22]
    io.resp.bits.uop.taken <= _T_2[2].taken @[functional-unit.scala 249:22]
    io.resp.bits.uop.pc_lob <= _T_2[2].pc_lob @[functional-unit.scala 249:22]
    io.resp.bits.uop.edge_inst <= _T_2[2].edge_inst @[functional-unit.scala 249:22]
    io.resp.bits.uop.ftq_idx <= _T_2[2].ftq_idx @[functional-unit.scala 249:22]
    io.resp.bits.uop.br_tag <= _T_2[2].br_tag @[functional-unit.scala 249:22]
    io.resp.bits.uop.br_mask <= _T_2[2].br_mask @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_sfb <= _T_2[2].is_sfb @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_jal <= _T_2[2].is_jal @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_jalr <= _T_2[2].is_jalr @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_br <= _T_2[2].is_br @[functional-unit.scala 249:22]
    io.resp.bits.uop.iw_p2_poisoned <= _T_2[2].iw_p2_poisoned @[functional-unit.scala 249:22]
    io.resp.bits.uop.iw_p1_poisoned <= _T_2[2].iw_p1_poisoned @[functional-unit.scala 249:22]
    io.resp.bits.uop.iw_state <= _T_2[2].iw_state @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.is_std <= _T_2[2].ctrl.is_std @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.is_sta <= _T_2[2].ctrl.is_sta @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.is_load <= _T_2[2].ctrl.is_load @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.csr_cmd <= _T_2[2].ctrl.csr_cmd @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.fcn_dw <= _T_2[2].ctrl.fcn_dw @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.op_fcn <= _T_2[2].ctrl.op_fcn @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.imm_sel <= _T_2[2].ctrl.imm_sel @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.op2_sel <= _T_2[2].ctrl.op2_sel @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.op1_sel <= _T_2[2].ctrl.op1_sel @[functional-unit.scala 249:22]
    io.resp.bits.uop.ctrl.br_type <= _T_2[2].ctrl.br_type @[functional-unit.scala 249:22]
    io.resp.bits.uop.fu_code <= _T_2[2].fu_code @[functional-unit.scala 249:22]
    io.resp.bits.uop.iq_type <= _T_2[2].iq_type @[functional-unit.scala 249:22]
    io.resp.bits.uop.debug_pc <= _T_2[2].debug_pc @[functional-unit.scala 249:22]
    io.resp.bits.uop.is_rvc <= _T_2[2].is_rvc @[functional-unit.scala 249:22]
    io.resp.bits.uop.debug_inst <= _T_2[2].debug_inst @[functional-unit.scala 249:22]
    io.resp.bits.uop.inst <= _T_2[2].inst @[functional-unit.scala 249:22]
    io.resp.bits.uop.uopc <= _T_2[2].uopc @[functional-unit.scala 249:22]
    node _T_31 = not(io.brupdate.b1.resolve_mask) @[util.scala 85:27]
    node _T_32 = and(_T_2[2].br_mask, _T_31) @[util.scala 85:25]
    io.resp.bits.uop.br_mask <= _T_32 @[functional-unit.scala 250:30]
    io.bypass[0].bits.uop.debug_tsrc <= io.req.bits.uop.debug_tsrc @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.debug_fsrc <= io.req.bits.uop.debug_fsrc @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.bp_xcpt_if <= io.req.bits.uop.bp_xcpt_if @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.bp_debug_if <= io.req.bits.uop.bp_debug_if @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.xcpt_ma_if <= io.req.bits.uop.xcpt_ma_if @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.xcpt_ae_if <= io.req.bits.uop.xcpt_ae_if @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.xcpt_pf_if <= io.req.bits.uop.xcpt_pf_if @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.fp_single <= io.req.bits.uop.fp_single @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.fp_val <= io.req.bits.uop.fp_val @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.frs3_en <= io.req.bits.uop.frs3_en @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.lrs2_rtype <= io.req.bits.uop.lrs2_rtype @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.lrs1_rtype <= io.req.bits.uop.lrs1_rtype @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.dst_rtype <= io.req.bits.uop.dst_rtype @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ldst_val <= io.req.bits.uop.ldst_val @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.lrs3 <= io.req.bits.uop.lrs3 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.lrs2 <= io.req.bits.uop.lrs2 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.lrs1 <= io.req.bits.uop.lrs1 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ldst <= io.req.bits.uop.ldst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ldst_is_rs1 <= io.req.bits.uop.ldst_is_rs1 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.flush_on_commit <= io.req.bits.uop.flush_on_commit @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_unique <= io.req.bits.uop.is_unique @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_sys_pc2epc <= io.req.bits.uop.is_sys_pc2epc @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.uses_stq <= io.req.bits.uop.uses_stq @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.uses_ldq <= io.req.bits.uop.uses_ldq @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_amo <= io.req.bits.uop.is_amo @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_fencei <= io.req.bits.uop.is_fencei @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_fence <= io.req.bits.uop.is_fence @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.mem_signed <= io.req.bits.uop.mem_signed @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.mem_size <= io.req.bits.uop.mem_size @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.mem_cmd <= io.req.bits.uop.mem_cmd @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.bypassable <= io.req.bits.uop.bypassable @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.exc_cause <= io.req.bits.uop.exc_cause @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.exception <= io.req.bits.uop.exception @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.stale_pdst <= io.req.bits.uop.stale_pdst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ppred_busy <= io.req.bits.uop.ppred_busy @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs3_busy <= io.req.bits.uop.prs3_busy @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs2_busy <= io.req.bits.uop.prs2_busy @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs1_busy <= io.req.bits.uop.prs1_busy @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ppred <= io.req.bits.uop.ppred @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs3 <= io.req.bits.uop.prs3 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs2 <= io.req.bits.uop.prs2 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.prs1 <= io.req.bits.uop.prs1 @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.pdst <= io.req.bits.uop.pdst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.rxq_idx <= io.req.bits.uop.rxq_idx @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.stq_idx <= io.req.bits.uop.stq_idx @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ldq_idx <= io.req.bits.uop.ldq_idx @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.rob_idx <= io.req.bits.uop.rob_idx @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.csr_addr <= io.req.bits.uop.csr_addr @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.imm_packed <= io.req.bits.uop.imm_packed @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.taken <= io.req.bits.uop.taken @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.pc_lob <= io.req.bits.uop.pc_lob @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.edge_inst <= io.req.bits.uop.edge_inst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ftq_idx <= io.req.bits.uop.ftq_idx @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.br_tag <= io.req.bits.uop.br_tag @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.br_mask <= io.req.bits.uop.br_mask @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_sfb <= io.req.bits.uop.is_sfb @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_jal <= io.req.bits.uop.is_jal @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_jalr <= io.req.bits.uop.is_jalr @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_br <= io.req.bits.uop.is_br @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.iw_p2_poisoned <= io.req.bits.uop.iw_p2_poisoned @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.iw_p1_poisoned <= io.req.bits.uop.iw_p1_poisoned @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.iw_state <= io.req.bits.uop.iw_state @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.is_std <= io.req.bits.uop.ctrl.is_std @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.is_sta <= io.req.bits.uop.ctrl.is_sta @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.is_load <= io.req.bits.uop.ctrl.is_load @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.csr_cmd <= io.req.bits.uop.ctrl.csr_cmd @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.fcn_dw <= io.req.bits.uop.ctrl.fcn_dw @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.op_fcn <= io.req.bits.uop.ctrl.op_fcn @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.imm_sel <= io.req.bits.uop.ctrl.imm_sel @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.op2_sel <= io.req.bits.uop.ctrl.op2_sel @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.op1_sel <= io.req.bits.uop.ctrl.op1_sel @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.ctrl.br_type <= io.req.bits.uop.ctrl.br_type @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.fu_code <= io.req.bits.uop.fu_code @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.iq_type <= io.req.bits.uop.iq_type @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.debug_pc <= io.req.bits.uop.debug_pc @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.is_rvc <= io.req.bits.uop.is_rvc @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.debug_inst <= io.req.bits.uop.debug_inst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.inst <= io.req.bits.uop.inst @[functional-unit.scala 254:29]
    io.bypass[0].bits.uop.uopc <= io.req.bits.uop.uopc @[functional-unit.scala 254:29]
    io.bypass[1].bits.uop.debug_tsrc <= _T_2[0].debug_tsrc @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.debug_fsrc <= _T_2[0].debug_fsrc @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.bp_xcpt_if <= _T_2[0].bp_xcpt_if @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.bp_debug_if <= _T_2[0].bp_debug_if @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.xcpt_ma_if <= _T_2[0].xcpt_ma_if @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.xcpt_ae_if <= _T_2[0].xcpt_ae_if @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.xcpt_pf_if <= _T_2[0].xcpt_pf_if @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.fp_single <= _T_2[0].fp_single @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.fp_val <= _T_2[0].fp_val @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.frs3_en <= _T_2[0].frs3_en @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.lrs2_rtype <= _T_2[0].lrs2_rtype @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.lrs1_rtype <= _T_2[0].lrs1_rtype @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.dst_rtype <= _T_2[0].dst_rtype @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ldst_val <= _T_2[0].ldst_val @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.lrs3 <= _T_2[0].lrs3 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.lrs2 <= _T_2[0].lrs2 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.lrs1 <= _T_2[0].lrs1 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ldst <= _T_2[0].ldst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ldst_is_rs1 <= _T_2[0].ldst_is_rs1 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.flush_on_commit <= _T_2[0].flush_on_commit @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_unique <= _T_2[0].is_unique @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_sys_pc2epc <= _T_2[0].is_sys_pc2epc @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.uses_stq <= _T_2[0].uses_stq @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.uses_ldq <= _T_2[0].uses_ldq @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_amo <= _T_2[0].is_amo @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_fencei <= _T_2[0].is_fencei @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_fence <= _T_2[0].is_fence @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.mem_signed <= _T_2[0].mem_signed @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.mem_size <= _T_2[0].mem_size @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.mem_cmd <= _T_2[0].mem_cmd @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.bypassable <= _T_2[0].bypassable @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.exc_cause <= _T_2[0].exc_cause @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.exception <= _T_2[0].exception @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.stale_pdst <= _T_2[0].stale_pdst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ppred_busy <= _T_2[0].ppred_busy @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs3_busy <= _T_2[0].prs3_busy @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs2_busy <= _T_2[0].prs2_busy @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs1_busy <= _T_2[0].prs1_busy @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ppred <= _T_2[0].ppred @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs3 <= _T_2[0].prs3 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs2 <= _T_2[0].prs2 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.prs1 <= _T_2[0].prs1 @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.pdst <= _T_2[0].pdst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.rxq_idx <= _T_2[0].rxq_idx @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.stq_idx <= _T_2[0].stq_idx @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ldq_idx <= _T_2[0].ldq_idx @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.rob_idx <= _T_2[0].rob_idx @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.csr_addr <= _T_2[0].csr_addr @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.imm_packed <= _T_2[0].imm_packed @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.taken <= _T_2[0].taken @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.pc_lob <= _T_2[0].pc_lob @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.edge_inst <= _T_2[0].edge_inst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ftq_idx <= _T_2[0].ftq_idx @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.br_tag <= _T_2[0].br_tag @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.br_mask <= _T_2[0].br_mask @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_sfb <= _T_2[0].is_sfb @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_jal <= _T_2[0].is_jal @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_jalr <= _T_2[0].is_jalr @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_br <= _T_2[0].is_br @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.iw_p2_poisoned <= _T_2[0].iw_p2_poisoned @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.iw_p1_poisoned <= _T_2[0].iw_p1_poisoned @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.iw_state <= _T_2[0].iw_state @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.is_std <= _T_2[0].ctrl.is_std @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.is_sta <= _T_2[0].ctrl.is_sta @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.is_load <= _T_2[0].ctrl.is_load @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.csr_cmd <= _T_2[0].ctrl.csr_cmd @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.fcn_dw <= _T_2[0].ctrl.fcn_dw @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.op_fcn <= _T_2[0].ctrl.op_fcn @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.imm_sel <= _T_2[0].ctrl.imm_sel @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.op2_sel <= _T_2[0].ctrl.op2_sel @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.op1_sel <= _T_2[0].ctrl.op1_sel @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.ctrl.br_type <= _T_2[0].ctrl.br_type @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.fu_code <= _T_2[0].fu_code @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.iq_type <= _T_2[0].iq_type @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.debug_pc <= _T_2[0].debug_pc @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.is_rvc <= _T_2[0].is_rvc @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.debug_inst <= _T_2[0].debug_inst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.inst <= _T_2[0].inst @[functional-unit.scala 257:31]
    io.bypass[1].bits.uop.uopc <= _T_2[0].uopc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.debug_tsrc <= _T_2[1].debug_tsrc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.debug_fsrc <= _T_2[1].debug_fsrc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.bp_xcpt_if <= _T_2[1].bp_xcpt_if @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.bp_debug_if <= _T_2[1].bp_debug_if @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.xcpt_ma_if <= _T_2[1].xcpt_ma_if @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.xcpt_ae_if <= _T_2[1].xcpt_ae_if @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.xcpt_pf_if <= _T_2[1].xcpt_pf_if @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.fp_single <= _T_2[1].fp_single @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.fp_val <= _T_2[1].fp_val @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.frs3_en <= _T_2[1].frs3_en @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.lrs2_rtype <= _T_2[1].lrs2_rtype @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.lrs1_rtype <= _T_2[1].lrs1_rtype @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.dst_rtype <= _T_2[1].dst_rtype @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ldst_val <= _T_2[1].ldst_val @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.lrs3 <= _T_2[1].lrs3 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.lrs2 <= _T_2[1].lrs2 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.lrs1 <= _T_2[1].lrs1 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ldst <= _T_2[1].ldst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ldst_is_rs1 <= _T_2[1].ldst_is_rs1 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.flush_on_commit <= _T_2[1].flush_on_commit @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_unique <= _T_2[1].is_unique @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_sys_pc2epc <= _T_2[1].is_sys_pc2epc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.uses_stq <= _T_2[1].uses_stq @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.uses_ldq <= _T_2[1].uses_ldq @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_amo <= _T_2[1].is_amo @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_fencei <= _T_2[1].is_fencei @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_fence <= _T_2[1].is_fence @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.mem_signed <= _T_2[1].mem_signed @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.mem_size <= _T_2[1].mem_size @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.mem_cmd <= _T_2[1].mem_cmd @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.bypassable <= _T_2[1].bypassable @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.exc_cause <= _T_2[1].exc_cause @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.exception <= _T_2[1].exception @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.stale_pdst <= _T_2[1].stale_pdst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ppred_busy <= _T_2[1].ppred_busy @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs3_busy <= _T_2[1].prs3_busy @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs2_busy <= _T_2[1].prs2_busy @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs1_busy <= _T_2[1].prs1_busy @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ppred <= _T_2[1].ppred @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs3 <= _T_2[1].prs3 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs2 <= _T_2[1].prs2 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.prs1 <= _T_2[1].prs1 @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.pdst <= _T_2[1].pdst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.rxq_idx <= _T_2[1].rxq_idx @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.stq_idx <= _T_2[1].stq_idx @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ldq_idx <= _T_2[1].ldq_idx @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.rob_idx <= _T_2[1].rob_idx @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.csr_addr <= _T_2[1].csr_addr @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.imm_packed <= _T_2[1].imm_packed @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.taken <= _T_2[1].taken @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.pc_lob <= _T_2[1].pc_lob @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.edge_inst <= _T_2[1].edge_inst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ftq_idx <= _T_2[1].ftq_idx @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.br_tag <= _T_2[1].br_tag @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.br_mask <= _T_2[1].br_mask @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_sfb <= _T_2[1].is_sfb @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_jal <= _T_2[1].is_jal @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_jalr <= _T_2[1].is_jalr @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_br <= _T_2[1].is_br @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.iw_p2_poisoned <= _T_2[1].iw_p2_poisoned @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.iw_p1_poisoned <= _T_2[1].iw_p1_poisoned @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.iw_state <= _T_2[1].iw_state @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.is_std <= _T_2[1].ctrl.is_std @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.is_sta <= _T_2[1].ctrl.is_sta @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.is_load <= _T_2[1].ctrl.is_load @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.csr_cmd <= _T_2[1].ctrl.csr_cmd @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.fcn_dw <= _T_2[1].ctrl.fcn_dw @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.op_fcn <= _T_2[1].ctrl.op_fcn @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.imm_sel <= _T_2[1].ctrl.imm_sel @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.op2_sel <= _T_2[1].ctrl.op2_sel @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.op1_sel <= _T_2[1].ctrl.op1_sel @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.ctrl.br_type <= _T_2[1].ctrl.br_type @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.fu_code <= _T_2[1].fu_code @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.iq_type <= _T_2[1].iq_type @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.debug_pc <= _T_2[1].debug_pc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.is_rvc <= _T_2[1].is_rvc @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.debug_inst <= _T_2[1].debug_inst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.inst <= _T_2[1].inst @[functional-unit.scala 257:31]
    io.bypass[2].bits.uop.uopc <= _T_2[1].uopc @[functional-unit.scala 257:31]
    node _T_33 = bits(io.req.bits.uop.imm_packed, 19, 19) @[util.scala 273:18]
    node _T_34 = asSInt(_T_33) @[util.scala 273:37]
    node _T_35 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h03")) @[util.scala 274:27]
    node _T_36 = bits(io.req.bits.uop.imm_packed, 18, 8) @[util.scala 274:39]
    node _T_37 = asSInt(_T_36) @[util.scala 274:46]
    node _T_38 = mux(_T_35, _T_37, _T_34) @[util.scala 274:21]
    node _T_39 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h03")) @[util.scala 275:27]
    node _T_40 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h04")) @[util.scala 275:44]
    node _T_41 = or(_T_39, _T_40) @[util.scala 275:36]
    node _T_42 = bits(io.req.bits.uop.imm_packed, 7, 0) @[util.scala 275:56]
    node _T_43 = asSInt(_T_42) @[util.scala 275:62]
    node _T_44 = mux(_T_41, _T_43, _T_34) @[util.scala 275:21]
    node _T_45 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h03")) @[util.scala 276:27]
    node _T_46 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h04")) @[util.scala 277:27]
    node _T_47 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h02")) @[util.scala 277:44]
    node _T_48 = or(_T_46, _T_47) @[util.scala 277:36]
    node _T_49 = bits(io.req.bits.uop.imm_packed, 8, 8) @[util.scala 277:56]
    node _T_50 = asSInt(_T_49) @[util.scala 277:60]
    node _T_51 = mux(_T_48, _T_50, _T_34) @[util.scala 277:21]
    node _T_52 = mux(_T_45, asSInt(UInt<1>("h00")), _T_51) @[util.scala 276:21]
    node _T_53 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h03")) @[util.scala 278:27]
    node _T_54 = bits(io.req.bits.uop.imm_packed, 18, 14) @[util.scala 278:44]
    node _T_55 = asSInt(_T_54) @[util.scala 278:52]
    node _T_56 = mux(_T_53, asSInt(UInt<1>("h00")), _T_55) @[util.scala 278:21]
    node _T_57 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h03")) @[util.scala 279:27]
    node _T_58 = bits(io.req.bits.uop.imm_packed, 13, 9) @[util.scala 279:44]
    node _T_59 = asSInt(_T_58) @[util.scala 279:51]
    node _T_60 = mux(_T_57, asSInt(UInt<1>("h00")), _T_59) @[util.scala 279:21]
    node _T_61 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h01")) @[util.scala 280:27]
    node _T_62 = eq(io.req.bits.uop.ctrl.imm_sel, UInt<3>("h00")) @[util.scala 280:44]
    node _T_63 = or(_T_61, _T_62) @[util.scala 280:36]
    node _T_64 = bits(io.req.bits.uop.imm_packed, 8, 8) @[util.scala 280:56]
    node _T_65 = asSInt(_T_64) @[util.scala 280:60]
    node _T_66 = mux(_T_63, _T_65, asSInt(UInt<1>("h00"))) @[util.scala 280:21]
    node _T_67 = asUInt(_T_66) @[Cat.scala 29:58]
    node _T_68 = asUInt(_T_60) @[Cat.scala 29:58]
    node _T_69 = asUInt(_T_56) @[Cat.scala 29:58]
    node _T_70 = cat(_T_69, _T_68) @[Cat.scala 29:58]
    node _T_71 = cat(_T_70, _T_67) @[Cat.scala 29:58]
    node _T_72 = asUInt(_T_52) @[Cat.scala 29:58]
    node _T_73 = asUInt(_T_44) @[Cat.scala 29:58]
    node _T_74 = cat(_T_73, _T_72) @[Cat.scala 29:58]
    node _T_75 = asUInt(_T_38) @[Cat.scala 29:58]
    node _T_76 = asUInt(_T_34) @[Cat.scala 29:58]
    node _T_77 = cat(_T_76, _T_75) @[Cat.scala 29:58]
    node _T_78 = cat(_T_77, _T_74) @[Cat.scala 29:58]
    node _T_79 = cat(_T_78, _T_71) @[Cat.scala 29:58]
    node imm_xprlen = asSInt(_T_79) @[util.scala 282:60]
    node _T_80 = not(io.get_ftq_pc.pc) @[util.scala 237:7]
    node _T_81 = or(_T_80, UInt<6>("h03f")) @[util.scala 237:11]
    node block_pc = not(_T_81) @[util.scala 237:5]
    node _T_82 = or(block_pc, io.req.bits.uop.pc_lob) @[functional-unit.scala 301:28]
    node _T_83 = mux(io.req.bits.uop.edge_inst, UInt<2>("h02"), UInt<1>("h00")) @[functional-unit.scala 301:47]
    node _T_84 = sub(_T_82, _T_83) @[functional-unit.scala 301:42]
    node uop_pc = tail(_T_84, 1) @[functional-unit.scala 301:42]
    node _T_85 = eq(io.req.bits.uop.ctrl.op1_sel, UInt<2>("h00")) @[functional-unit.scala 303:44]
    node _T_86 = eq(io.req.bits.uop.ctrl.op1_sel, UInt<2>("h02")) @[functional-unit.scala 304:44]
    node _T_87 = bits(uop_pc, 39, 39) @[util.scala 261:46]
    node _T_88 = bits(_T_87, 0, 0) @[Bitwise.scala 72:15]
    node _T_89 = mux(_T_88, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _T_90 = cat(_T_89, uop_pc) @[Cat.scala 29:58]
    node _T_91 = mux(_T_86, _T_90, UInt<1>("h00")) @[functional-unit.scala 304:19]
    node op1_data = mux(_T_85, io.req.bits.rs1_data, _T_91) @[functional-unit.scala 303:19]
    node _T_92 = eq(io.req.bits.uop.ctrl.op2_sel, UInt<3>("h01")) @[functional-unit.scala 312:39]
    node _T_93 = asUInt(imm_xprlen) @[functional-unit.scala 312:69]
    node _T_94 = bits(_T_93, 31, 31) @[util.scala 261:46]
    node _T_95 = bits(_T_94, 0, 0) @[Bitwise.scala 72:15]
    node _T_96 = mux(_T_95, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_97 = cat(_T_96, _T_93) @[Cat.scala 29:58]
    node _T_98 = eq(io.req.bits.uop.ctrl.op2_sel, UInt<3>("h04")) @[functional-unit.scala 313:39]
    node _T_99 = bits(io.req.bits.uop.prs1, 4, 0) @[functional-unit.scala 313:73]
    node _T_100 = eq(io.req.bits.uop.ctrl.op2_sel, UInt<3>("h00")) @[functional-unit.scala 314:39]
    node _T_101 = eq(io.req.bits.uop.ctrl.op2_sel, UInt<3>("h03")) @[functional-unit.scala 315:39]
    node _T_102 = mux(io.req.bits.uop.is_rvc, UInt<2>("h02"), UInt<3>("h04")) @[functional-unit.scala 315:56]
    node _T_103 = mux(_T_101, _T_102, UInt<1>("h00")) @[functional-unit.scala 315:21]
    node _T_104 = mux(_T_100, io.req.bits.rs2_data, _T_103) @[functional-unit.scala 314:21]
    node _T_105 = mux(_T_98, _T_99, _T_104) @[functional-unit.scala 313:21]
    node op2_data = mux(_T_92, _T_97, _T_105) @[functional-unit.scala 312:21]
    inst alu of ALU @[functional-unit.scala 318:19]
    alu.clock <= clock
    alu.reset <= reset
    alu.io.in1 <= op1_data @[functional-unit.scala 320:14]
    alu.io.in2 <= op2_data @[functional-unit.scala 321:14]
    alu.io.fn <= io.req.bits.uop.ctrl.op_fcn @[functional-unit.scala 322:14]
    alu.io.dw <= io.req.bits.uop.ctrl.fcn_dw @[functional-unit.scala 323:14]
    wire killed : UInt<1>
    killed <= UInt<1>("h00")
    node _T_106 = and(io.brupdate.b1.mispredict_mask, io.req.bits.uop.br_mask) @[util.scala 118:51]
    node _T_107 = neq(_T_106, UInt<1>("h00")) @[util.scala 118:59]
    node _T_108 = or(io.req.bits.kill, _T_107) @[functional-unit.scala 329:26]
    when _T_108 : @[functional-unit.scala 329:65]
      killed <= UInt<1>("h01") @[functional-unit.scala 330:12]
      skip @[functional-unit.scala 329:65]
    node br_eq = eq(io.req.bits.rs1_data, io.req.bits.rs2_data) @[functional-unit.scala 335:21]
    node br_ltu = lt(io.req.bits.rs1_data, io.req.bits.rs2_data) @[functional-unit.scala 336:28]
    node _T_109 = bits(io.req.bits.rs1_data, 63, 63) @[functional-unit.scala 337:22]
    node _T_110 = bits(io.req.bits.rs2_data, 63, 63) @[functional-unit.scala 337:36]
    node _T_111 = xor(_T_109, _T_110) @[functional-unit.scala 337:31]
    node _T_112 = not(_T_111) @[functional-unit.scala 337:17]
    node _T_113 = and(_T_112, br_ltu) @[functional-unit.scala 337:46]
    node _T_114 = bits(io.req.bits.rs1_data, 63, 63) @[functional-unit.scala 338:20]
    node _T_115 = bits(io.req.bits.rs2_data, 63, 63) @[functional-unit.scala 338:35]
    node _T_116 = not(_T_115) @[functional-unit.scala 338:31]
    node _T_117 = and(_T_114, _T_116) @[functional-unit.scala 338:29]
    node _T_118 = or(_T_113, _T_117) @[functional-unit.scala 337:55]
    node br_lt = bits(_T_118, 0, 0) @[functional-unit.scala 338:45]
    node _T_119 = eq(br_eq, UInt<1>("h00")) @[functional-unit.scala 342:39]
    node _T_120 = mux(_T_119, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 342:38]
    node _T_121 = mux(br_eq, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 343:38]
    node _T_122 = eq(br_lt, UInt<1>("h00")) @[functional-unit.scala 344:39]
    node _T_123 = mux(_T_122, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 344:38]
    node _T_124 = eq(br_ltu, UInt<1>("h00")) @[functional-unit.scala 345:39]
    node _T_125 = mux(_T_124, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 345:38]
    node _T_126 = mux(br_lt, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 346:38]
    node _T_127 = mux(br_ltu, UInt<2>("h01"), UInt<2>("h00")) @[functional-unit.scala 347:38]
    node _T_128 = eq(UInt<4>("h00"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_129 = mux(_T_128, UInt<2>("h00"), UInt<2>("h00")) @[Mux.scala 80:57]
    node _T_130 = eq(UInt<4>("h01"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_131 = mux(_T_130, _T_120, _T_129) @[Mux.scala 80:57]
    node _T_132 = eq(UInt<4>("h02"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_133 = mux(_T_132, _T_121, _T_131) @[Mux.scala 80:57]
    node _T_134 = eq(UInt<4>("h03"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_135 = mux(_T_134, _T_123, _T_133) @[Mux.scala 80:57]
    node _T_136 = eq(UInt<4>("h04"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_137 = mux(_T_136, _T_125, _T_135) @[Mux.scala 80:57]
    node _T_138 = eq(UInt<4>("h05"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_139 = mux(_T_138, _T_126, _T_137) @[Mux.scala 80:57]
    node _T_140 = eq(UInt<4>("h06"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_141 = mux(_T_140, _T_127, _T_139) @[Mux.scala 80:57]
    node _T_142 = eq(UInt<4>("h07"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node _T_143 = mux(_T_142, UInt<2>("h01"), _T_141) @[Mux.scala 80:57]
    node _T_144 = eq(UInt<4>("h08"), io.req.bits.uop.ctrl.br_type) @[Mux.scala 80:60]
    node pc_sel = mux(_T_144, UInt<2>("h02"), _T_143) @[Mux.scala 80:57]
    node _T_145 = eq(killed, UInt<1>("h00")) @[functional-unit.scala 353:20]
    node _T_146 = and(io.req.valid, _T_145) @[functional-unit.scala 352:31]
    node _T_147 = or(io.req.bits.uop.is_br, io.req.bits.uop.is_jalr) @[functional-unit.scala 354:31]
    node _T_148 = or(_T_147, io.req.bits.uop.is_jal) @[functional-unit.scala 354:46]
    node _T_149 = and(_T_146, _T_148) @[functional-unit.scala 353:28]
    node _T_150 = neq(pc_sel, UInt<2>("h00")) @[functional-unit.scala 355:28]
    node is_taken = and(_T_149, _T_150) @[functional-unit.scala 354:61]
    wire mispredict : UInt<1>
    mispredict <= UInt<1>("h00")
    node _T_151 = eq(killed, UInt<1>("h00")) @[functional-unit.scala 360:40]
    node _T_152 = and(io.req.valid, _T_151) @[functional-unit.scala 360:37]
    node _T_153 = and(_T_152, io.req.bits.uop.is_br) @[functional-unit.scala 360:48]
    node _T_154 = eq(io.req.bits.uop.is_sfb, UInt<1>("h00")) @[functional-unit.scala 360:64]
    node is_br = and(_T_153, _T_154) @[functional-unit.scala 360:61]
    node _T_155 = eq(killed, UInt<1>("h00")) @[functional-unit.scala 361:40]
    node _T_156 = and(io.req.valid, _T_155) @[functional-unit.scala 361:37]
    node is_jal = and(_T_156, io.req.bits.uop.is_jal) @[functional-unit.scala 361:48]
    node _T_157 = eq(killed, UInt<1>("h00")) @[functional-unit.scala 362:40]
    node _T_158 = and(io.req.valid, _T_157) @[functional-unit.scala 362:37]
    node is_jalr = and(_T_158, io.req.bits.uop.is_jalr) @[functional-unit.scala 362:48]
    node _T_159 = or(is_br, is_jalr) @[functional-unit.scala 364:15]
    when _T_159 : @[functional-unit.scala 364:27]
      node _T_160 = eq(pc_sel, UInt<2>("h00")) @[functional-unit.scala 368:18]
      when _T_160 : @[functional-unit.scala 368:32]
        mispredict <= io.req.bits.uop.taken @[functional-unit.scala 369:18]
        skip @[functional-unit.scala 368:32]
      node _T_161 = eq(pc_sel, UInt<2>("h01")) @[functional-unit.scala 371:18]
      when _T_161 : @[functional-unit.scala 371:32]
        node _T_162 = eq(io.req.bits.uop.taken, UInt<1>("h00")) @[functional-unit.scala 372:21]
        mispredict <= _T_162 @[functional-unit.scala 372:18]
        skip @[functional-unit.scala 371:32]
      skip @[functional-unit.scala 364:27]
    wire brinfo : {uop : {uopc : UInt<7>, inst : UInt<32>, debug_inst : UInt<32>, is_rvc : UInt<1>, debug_pc : UInt<40>, iq_type : UInt<3>, fu_code : UInt<10>, ctrl : {br_type : UInt<4>, op1_sel : UInt<2>, op2_sel : UInt<3>, imm_sel : UInt<3>, op_fcn : UInt<4>, fcn_dw : UInt<1>, csr_cmd : UInt<3>, is_load : UInt<1>, is_sta : UInt<1>, is_std : UInt<1>}, iw_state : UInt<2>, iw_p1_poisoned : UInt<1>, iw_p2_poisoned : UInt<1>, is_br : UInt<1>, is_jalr : UInt<1>, is_jal : UInt<1>, is_sfb : UInt<1>, br_mask : UInt<8>, br_tag : UInt<3>, ftq_idx : UInt<4>, edge_inst : UInt<1>, pc_lob : UInt<6>, taken : UInt<1>, imm_packed : UInt<20>, csr_addr : UInt<12>, rob_idx : UInt<5>, ldq_idx : UInt<3>, stq_idx : UInt<3>, rxq_idx : UInt<2>, pdst : UInt<6>, prs1 : UInt<6>, prs2 : UInt<6>, prs3 : UInt<6>, ppred : UInt<4>, prs1_busy : UInt<1>, prs2_busy : UInt<1>, prs3_busy : UInt<1>, ppred_busy : UInt<1>, stale_pdst : UInt<6>, exception : UInt<1>, exc_cause : UInt<64>, bypassable : UInt<1>, mem_cmd : UInt<5>, mem_size : UInt<2>, mem_signed : UInt<1>, is_fence : UInt<1>, is_fencei : UInt<1>, is_amo : UInt<1>, uses_ldq : UInt<1>, uses_stq : UInt<1>, is_sys_pc2epc : UInt<1>, is_unique : UInt<1>, flush_on_commit : UInt<1>, ldst_is_rs1 : UInt<1>, ldst : UInt<6>, lrs1 : UInt<6>, lrs2 : UInt<6>, lrs3 : UInt<6>, ldst_val : UInt<1>, dst_rtype : UInt<2>, lrs1_rtype : UInt<2>, lrs2_rtype : UInt<2>, frs3_en : UInt<1>, fp_val : UInt<1>, fp_single : UInt<1>, xcpt_pf_if : UInt<1>, xcpt_ae_if : UInt<1>, xcpt_ma_if : UInt<1>, bp_debug_if : UInt<1>, bp_xcpt_if : UInt<1>, debug_fsrc : UInt<2>, debug_tsrc : UInt<2>}, valid : UInt<1>, mispredict : UInt<1>, taken : UInt<1>, cfi_type : UInt<3>, pc_sel : UInt<2>, jalr_target : UInt<40>, target_offset : SInt} @[functional-unit.scala 376:20]
    node _T_163 = or(is_br, is_jalr) @[functional-unit.scala 379:34]
    brinfo.valid <= _T_163 @[functional-unit.scala 379:25]
    brinfo.mispredict <= mispredict @[functional-unit.scala 380:25]
    brinfo.uop.debug_tsrc <= io.req.bits.uop.debug_tsrc @[functional-unit.scala 381:25]
    brinfo.uop.debug_fsrc <= io.req.bits.uop.debug_fsrc @[functional-unit.scala 381:25]
    brinfo.uop.bp_xcpt_if <= io.req.bits.uop.bp_xcpt_if @[functional-unit.scala 381:25]
    brinfo.uop.bp_debug_if <= io.req.bits.uop.bp_debug_if @[functional-unit.scala 381:25]
    brinfo.uop.xcpt_ma_if <= io.req.bits.uop.xcpt_ma_if @[functional-unit.scala 381:25]
    brinfo.uop.xcpt_ae_if <= io.req.bits.uop.xcpt_ae_if @[functional-unit.scala 381:25]
    brinfo.uop.xcpt_pf_if <= io.req.bits.uop.xcpt_pf_if @[functional-unit.scala 381:25]
    brinfo.uop.fp_single <= io.req.bits.uop.fp_single @[functional-unit.scala 381:25]
    brinfo.uop.fp_val <= io.req.bits.uop.fp_val @[functional-unit.scala 381:25]
    brinfo.uop.frs3_en <= io.req.bits.uop.frs3_en @[functional-unit.scala 381:25]
    brinfo.uop.lrs2_rtype <= io.req.bits.uop.lrs2_rtype @[functional-unit.scala 381:25]
    brinfo.uop.lrs1_rtype <= io.req.bits.uop.lrs1_rtype @[functional-unit.scala 381:25]
    brinfo.uop.dst_rtype <= io.req.bits.uop.dst_rtype @[functional-unit.scala 381:25]
    brinfo.uop.ldst_val <= io.req.bits.uop.ldst_val @[functional-unit.scala 381:25]
    brinfo.uop.lrs3 <= io.req.bits.uop.lrs3 @[functional-unit.scala 381:25]
    brinfo.uop.lrs2 <= io.req.bits.uop.lrs2 @[functional-unit.scala 381:25]
    brinfo.uop.lrs1 <= io.req.bits.uop.lrs1 @[functional-unit.scala 381:25]
    brinfo.uop.ldst <= io.req.bits.uop.ldst @[functional-unit.scala 381:25]
    brinfo.uop.ldst_is_rs1 <= io.req.bits.uop.ldst_is_rs1 @[functional-unit.scala 381:25]
    brinfo.uop.flush_on_commit <= io.req.bits.uop.flush_on_commit @[functional-unit.scala 381:25]
    brinfo.uop.is_unique <= io.req.bits.uop.is_unique @[functional-unit.scala 381:25]
    brinfo.uop.is_sys_pc2epc <= io.req.bits.uop.is_sys_pc2epc @[functional-unit.scala 381:25]
    brinfo.uop.uses_stq <= io.req.bits.uop.uses_stq @[functional-unit.scala 381:25]
    brinfo.uop.uses_ldq <= io.req.bits.uop.uses_ldq @[functional-unit.scala 381:25]
    brinfo.uop.is_amo <= io.req.bits.uop.is_amo @[functional-unit.scala 381:25]
    brinfo.uop.is_fencei <= io.req.bits.uop.is_fencei @[functional-unit.scala 381:25]
    brinfo.uop.is_fence <= io.req.bits.uop.is_fence @[functional-unit.scala 381:25]
    brinfo.uop.mem_signed <= io.req.bits.uop.mem_signed @[functional-unit.scala 381:25]
    brinfo.uop.mem_size <= io.req.bits.uop.mem_size @[functional-unit.scala 381:25]
    brinfo.uop.mem_cmd <= io.req.bits.uop.mem_cmd @[functional-unit.scala 381:25]
    brinfo.uop.bypassable <= io.req.bits.uop.bypassable @[functional-unit.scala 381:25]
    brinfo.uop.exc_cause <= io.req.bits.uop.exc_cause @[functional-unit.scala 381:25]
    brinfo.uop.exception <= io.req.bits.uop.exception @[functional-unit.scala 381:25]
    brinfo.uop.stale_pdst <= io.req.bits.uop.stale_pdst @[functional-unit.scala 381:25]
    brinfo.uop.ppred_busy <= io.req.bits.uop.ppred_busy @[functional-unit.scala 381:25]
    brinfo.uop.prs3_busy <= io.req.bits.uop.prs3_busy @[functional-unit.scala 381:25]
    brinfo.uop.prs2_busy <= io.req.bits.uop.prs2_busy @[functional-unit.scala 381:25]
    brinfo.uop.prs1_busy <= io.req.bits.uop.prs1_busy @[functional-unit.scala 381:25]
    brinfo.uop.ppred <= io.req.bits.uop.ppred @[functional-unit.scala 381:25]
    brinfo.uop.prs3 <= io.req.bits.uop.prs3 @[functional-unit.scala 381:25]
    brinfo.uop.prs2 <= io.req.bits.uop.prs2 @[functional-unit.scala 381:25]
    brinfo.uop.prs1 <= io.req.bits.uop.prs1 @[functional-unit.scala 381:25]
    brinfo.uop.pdst <= io.req.bits.uop.pdst @[functional-unit.scala 381:25]
    brinfo.uop.rxq_idx <= io.req.bits.uop.rxq_idx @[functional-unit.scala 381:25]
    brinfo.uop.stq_idx <= io.req.bits.uop.stq_idx @[functional-unit.scala 381:25]
    brinfo.uop.ldq_idx <= io.req.bits.uop.ldq_idx @[functional-unit.scala 381:25]
    brinfo.uop.rob_idx <= io.req.bits.uop.rob_idx @[functional-unit.scala 381:25]
    brinfo.uop.csr_addr <= io.req.bits.uop.csr_addr @[functional-unit.scala 381:25]
    brinfo.uop.imm_packed <= io.req.bits.uop.imm_packed @[functional-unit.scala 381:25]
    brinfo.uop.taken <= io.req.bits.uop.taken @[functional-unit.scala 381:25]
    brinfo.uop.pc_lob <= io.req.bits.uop.pc_lob @[functional-unit.scala 381:25]
    brinfo.uop.edge_inst <= io.req.bits.uop.edge_inst @[functional-unit.scala 381:25]
    brinfo.uop.ftq_idx <= io.req.bits.uop.ftq_idx @[functional-unit.scala 381:25]
    brinfo.uop.br_tag <= io.req.bits.uop.br_tag @[functional-unit.scala 381:25]
    brinfo.uop.br_mask <= io.req.bits.uop.br_mask @[functional-unit.scala 381:25]
    brinfo.uop.is_sfb <= io.req.bits.uop.is_sfb @[functional-unit.scala 381:25]
    brinfo.uop.is_jal <= io.req.bits.uop.is_jal @[functional-unit.scala 381:25]
    brinfo.uop.is_jalr <= io.req.bits.uop.is_jalr @[functional-unit.scala 381:25]
    brinfo.uop.is_br <= io.req.bits.uop.is_br @[functional-unit.scala 381:25]
    brinfo.uop.iw_p2_poisoned <= io.req.bits.uop.iw_p2_poisoned @[functional-unit.scala 381:25]
    brinfo.uop.iw_p1_poisoned <= io.req.bits.uop.iw_p1_poisoned @[functional-unit.scala 381:25]
    brinfo.uop.iw_state <= io.req.bits.uop.iw_state @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.is_std <= io.req.bits.uop.ctrl.is_std @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.is_sta <= io.req.bits.uop.ctrl.is_sta @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.is_load <= io.req.bits.uop.ctrl.is_load @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.csr_cmd <= io.req.bits.uop.ctrl.csr_cmd @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.fcn_dw <= io.req.bits.uop.ctrl.fcn_dw @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.op_fcn <= io.req.bits.uop.ctrl.op_fcn @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.imm_sel <= io.req.bits.uop.ctrl.imm_sel @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.op2_sel <= io.req.bits.uop.ctrl.op2_sel @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.op1_sel <= io.req.bits.uop.ctrl.op1_sel @[functional-unit.scala 381:25]
    brinfo.uop.ctrl.br_type <= io.req.bits.uop.ctrl.br_type @[functional-unit.scala 381:25]
    brinfo.uop.fu_code <= io.req.bits.uop.fu_code @[functional-unit.scala 381:25]
    brinfo.uop.iq_type <= io.req.bits.uop.iq_type @[functional-unit.scala 381:25]
    brinfo.uop.debug_pc <= io.req.bits.uop.debug_pc @[functional-unit.scala 381:25]
    brinfo.uop.is_rvc <= io.req.bits.uop.is_rvc @[functional-unit.scala 381:25]
    brinfo.uop.debug_inst <= io.req.bits.uop.debug_inst @[functional-unit.scala 381:25]
    brinfo.uop.inst <= io.req.bits.uop.inst @[functional-unit.scala 381:25]
    brinfo.uop.uopc <= io.req.bits.uop.uopc @[functional-unit.scala 381:25]
    node _T_164 = mux(is_br, UInt<3>("h01"), UInt<3>("h00")) @[functional-unit.scala 383:31]
    node _T_165 = mux(is_jalr, UInt<3>("h03"), _T_164) @[functional-unit.scala 382:31]
    brinfo.cfi_type <= _T_165 @[functional-unit.scala 382:25]
    brinfo.taken <= is_taken @[functional-unit.scala 384:25]
    brinfo.pc_sel <= pc_sel @[functional-unit.scala 385:25]
    brinfo.jalr_target is invalid @[functional-unit.scala 387:25]
    node _T_166 = bits(imm_xprlen, 20, 0) @[functional-unit.scala 393:33]
    node target_offset = asSInt(_T_166) @[functional-unit.scala 393:40]
    brinfo.jalr_target is invalid @[functional-unit.scala 394:22]
    node jalr_target_base = asSInt(io.req.bits.rs1_data) @[functional-unit.scala 407:49]
    wire jalr_target_xlen : UInt<64> @[functional-unit.scala 408:32]
    node _T_167 = add(jalr_target_base, target_offset) @[functional-unit.scala 409:43]
    node _T_168 = tail(_T_167, 1) @[functional-unit.scala 409:43]
    node _T_169 = asSInt(_T_168) @[functional-unit.scala 409:43]
    node _T_170 = asUInt(_T_169) @[functional-unit.scala 409:60]
    jalr_target_xlen <= _T_170 @[functional-unit.scala 409:22]
    node _T_171 = asSInt(jalr_target_xlen) @[functional-unit.scala 401:18]
    node a = shr(_T_171, 39) @[functional-unit.scala 401:25]
    node _T_172 = eq(a, asSInt(UInt<1>("h00"))) @[functional-unit.scala 402:23]
    node _T_173 = eq(a, asSInt(UInt<1>("h01"))) @[functional-unit.scala 402:36]
    node _T_174 = or(_T_172, _T_173) @[functional-unit.scala 402:31]
    node _T_175 = bits(jalr_target_xlen, 39, 39) @[functional-unit.scala 402:48]
    node _T_176 = bits(jalr_target_xlen, 38, 38) @[functional-unit.scala 402:64]
    node _T_177 = eq(_T_176, UInt<1>("h00")) @[functional-unit.scala 402:61]
    node msb = mux(_T_174, _T_175, _T_177) @[functional-unit.scala 402:20]
    node _T_178 = bits(jalr_target_xlen, 38, 0) @[functional-unit.scala 403:18]
    node _T_179 = cat(msb, _T_178) @[Cat.scala 29:58]
    node _T_180 = asSInt(_T_179) @[functional-unit.scala 410:81]
    node _T_181 = and(_T_180, asSInt(UInt<2>("h02"))) @[functional-unit.scala 410:88]
    node _T_182 = asSInt(_T_181) @[functional-unit.scala 410:88]
    node jalr_target = asUInt(_T_182) @[functional-unit.scala 410:96]
    brinfo.jalr_target <= jalr_target @[functional-unit.scala 412:24]
    node _T_183 = eq(io.get_ftq_pc.entry.start_bank, UInt<1>("h01")) @[functional-unit.scala 413:69]
    node _T_184 = shl(UInt<1>("h01"), 3) @[functional-unit.scala 413:82]
    node _T_185 = mux(_T_183, _T_184, UInt<1>("h00")) @[functional-unit.scala 413:37]
    node _T_186 = xor(io.req.bits.uop.pc_lob, _T_185) @[functional-unit.scala 413:32]
    node cfi_idx = bits(_T_186, 2, 1) @[functional-unit.scala 413:112]
    node _T_187 = eq(pc_sel, UInt<2>("h02")) @[functional-unit.scala 415:18]
    when _T_187 : @[functional-unit.scala 415:31]
      node _T_188 = eq(io.get_ftq_pc.next_val, UInt<1>("h00")) @[functional-unit.scala 416:21]
      node _T_189 = neq(io.get_ftq_pc.next_pc, jalr_target) @[functional-unit.scala 417:44]
      node _T_190 = or(_T_188, _T_189) @[functional-unit.scala 416:45]
      node _T_191 = eq(io.get_ftq_pc.entry.cfi_idx.valid, UInt<1>("h00")) @[functional-unit.scala 418:21]
      node _T_192 = or(_T_190, _T_191) @[functional-unit.scala 417:61]
      node _T_193 = neq(io.get_ftq_pc.entry.cfi_idx.bits, cfi_idx) @[functional-unit.scala 419:55]
      node _T_194 = or(_T_192, _T_193) @[functional-unit.scala 418:56]
      mispredict <= _T_194 @[functional-unit.scala 416:18]
      skip @[functional-unit.scala 415:31]
    brinfo.target_offset <= target_offset @[functional-unit.scala 423:24]
    io.brinfo.target_offset <= brinfo.target_offset @[functional-unit.scala 426:13]
    io.brinfo.jalr_target <= brinfo.jalr_target @[functional-unit.scala 426:13]
    io.brinfo.pc_sel <= brinfo.pc_sel @[functional-unit.scala 426:13]
    io.brinfo.cfi_type <= brinfo.cfi_type @[functional-unit.scala 426:13]
    io.brinfo.taken <= brinfo.taken @[functional-unit.scala 426:13]
    io.brinfo.mispredict <= brinfo.mispredict @[functional-unit.scala 426:13]
    io.brinfo.valid <= brinfo.valid @[functional-unit.scala 426:13]
    io.brinfo.uop.debug_tsrc <= brinfo.uop.debug_tsrc @[functional-unit.scala 426:13]
    io.brinfo.uop.debug_fsrc <= brinfo.uop.debug_fsrc @[functional-unit.scala 426:13]
    io.brinfo.uop.bp_xcpt_if <= brinfo.uop.bp_xcpt_if @[functional-unit.scala 426:13]
    io.brinfo.uop.bp_debug_if <= brinfo.uop.bp_debug_if @[functional-unit.scala 426:13]
    io.brinfo.uop.xcpt_ma_if <= brinfo.uop.xcpt_ma_if @[functional-unit.scala 426:13]
    io.brinfo.uop.xcpt_ae_if <= brinfo.uop.xcpt_ae_if @[functional-unit.scala 426:13]
    io.brinfo.uop.xcpt_pf_if <= brinfo.uop.xcpt_pf_if @[functional-unit.scala 426:13]
    io.brinfo.uop.fp_single <= brinfo.uop.fp_single @[functional-unit.scala 426:13]
    io.brinfo.uop.fp_val <= brinfo.uop.fp_val @[functional-unit.scala 426:13]
    io.brinfo.uop.frs3_en <= brinfo.uop.frs3_en @[functional-unit.scala 426:13]
    io.brinfo.uop.lrs2_rtype <= brinfo.uop.lrs2_rtype @[functional-unit.scala 426:13]
    io.brinfo.uop.lrs1_rtype <= brinfo.uop.lrs1_rtype @[functional-unit.scala 426:13]
    io.brinfo.uop.dst_rtype <= brinfo.uop.dst_rtype @[functional-unit.scala 426:13]
    io.brinfo.uop.ldst_val <= brinfo.uop.ldst_val @[functional-unit.scala 426:13]
    io.brinfo.uop.lrs3 <= brinfo.uop.lrs3 @[functional-unit.scala 426:13]
    io.brinfo.uop.lrs2 <= brinfo.uop.lrs2 @[functional-unit.scala 426:13]
    io.brinfo.uop.lrs1 <= brinfo.uop.lrs1 @[functional-unit.scala 426:13]
    io.brinfo.uop.ldst <= brinfo.uop.ldst @[functional-unit.scala 426:13]
    io.brinfo.uop.ldst_is_rs1 <= brinfo.uop.ldst_is_rs1 @[functional-unit.scala 426:13]
    io.brinfo.uop.flush_on_commit <= brinfo.uop.flush_on_commit @[functional-unit.scala 426:13]
    io.brinfo.uop.is_unique <= brinfo.uop.is_unique @[functional-unit.scala 426:13]
    io.brinfo.uop.is_sys_pc2epc <= brinfo.uop.is_sys_pc2epc @[functional-unit.scala 426:13]
    io.brinfo.uop.uses_stq <= brinfo.uop.uses_stq @[functional-unit.scala 426:13]
    io.brinfo.uop.uses_ldq <= brinfo.uop.uses_ldq @[functional-unit.scala 426:13]
    io.brinfo.uop.is_amo <= brinfo.uop.is_amo @[functional-unit.scala 426:13]
    io.brinfo.uop.is_fencei <= brinfo.uop.is_fencei @[functional-unit.scala 426:13]
    io.brinfo.uop.is_fence <= brinfo.uop.is_fence @[functional-unit.scala 426:13]
    io.brinfo.uop.mem_signed <= brinfo.uop.mem_signed @[functional-unit.scala 426:13]
    io.brinfo.uop.mem_size <= brinfo.uop.mem_size @[functional-unit.scala 426:13]
    io.brinfo.uop.mem_cmd <= brinfo.uop.mem_cmd @[functional-unit.scala 426:13]
    io.brinfo.uop.bypassable <= brinfo.uop.bypassable @[functional-unit.scala 426:13]
    io.brinfo.uop.exc_cause <= brinfo.uop.exc_cause @[functional-unit.scala 426:13]
    io.brinfo.uop.exception <= brinfo.uop.exception @[functional-unit.scala 426:13]
    io.brinfo.uop.stale_pdst <= brinfo.uop.stale_pdst @[functional-unit.scala 426:13]
    io.brinfo.uop.ppred_busy <= brinfo.uop.ppred_busy @[functional-unit.scala 426:13]
    io.brinfo.uop.prs3_busy <= brinfo.uop.prs3_busy @[functional-unit.scala 426:13]
    io.brinfo.uop.prs2_busy <= brinfo.uop.prs2_busy @[functional-unit.scala 426:13]
    io.brinfo.uop.prs1_busy <= brinfo.uop.prs1_busy @[functional-unit.scala 426:13]
    io.brinfo.uop.ppred <= brinfo.uop.ppred @[functional-unit.scala 426:13]
    io.brinfo.uop.prs3 <= brinfo.uop.prs3 @[functional-unit.scala 426:13]
    io.brinfo.uop.prs2 <= brinfo.uop.prs2 @[functional-unit.scala 426:13]
    io.brinfo.uop.prs1 <= brinfo.uop.prs1 @[functional-unit.scala 426:13]
    io.brinfo.uop.pdst <= brinfo.uop.pdst @[functional-unit.scala 426:13]
    io.brinfo.uop.rxq_idx <= brinfo.uop.rxq_idx @[functional-unit.scala 426:13]
    io.brinfo.uop.stq_idx <= brinfo.uop.stq_idx @[functional-unit.scala 426:13]
    io.brinfo.uop.ldq_idx <= brinfo.uop.ldq_idx @[functional-unit.scala 426:13]
    io.brinfo.uop.rob_idx <= brinfo.uop.rob_idx @[functional-unit.scala 426:13]
    io.brinfo.uop.csr_addr <= brinfo.uop.csr_addr @[functional-unit.scala 426:13]
    io.brinfo.uop.imm_packed <= brinfo.uop.imm_packed @[functional-unit.scala 426:13]
    io.brinfo.uop.taken <= brinfo.uop.taken @[functional-unit.scala 426:13]
    io.brinfo.uop.pc_lob <= brinfo.uop.pc_lob @[functional-unit.scala 426:13]
    io.brinfo.uop.edge_inst <= brinfo.uop.edge_inst @[functional-unit.scala 426:13]
    io.brinfo.uop.ftq_idx <= brinfo.uop.ftq_idx @[functional-unit.scala 426:13]
    io.brinfo.uop.br_tag <= brinfo.uop.br_tag @[functional-unit.scala 426:13]
    io.brinfo.uop.br_mask <= brinfo.uop.br_mask @[functional-unit.scala 426:13]
    io.brinfo.uop.is_sfb <= brinfo.uop.is_sfb @[functional-unit.scala 426:13]
    io.brinfo.uop.is_jal <= brinfo.uop.is_jal @[functional-unit.scala 426:13]
    io.brinfo.uop.is_jalr <= brinfo.uop.is_jalr @[functional-unit.scala 426:13]
    io.brinfo.uop.is_br <= brinfo.uop.is_br @[functional-unit.scala 426:13]
    io.brinfo.uop.iw_p2_poisoned <= brinfo.uop.iw_p2_poisoned @[functional-unit.scala 426:13]
    io.brinfo.uop.iw_p1_poisoned <= brinfo.uop.iw_p1_poisoned @[functional-unit.scala 426:13]
    io.brinfo.uop.iw_state <= brinfo.uop.iw_state @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.is_std <= brinfo.uop.ctrl.is_std @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.is_sta <= brinfo.uop.ctrl.is_sta @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.is_load <= brinfo.uop.ctrl.is_load @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.csr_cmd <= brinfo.uop.ctrl.csr_cmd @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.fcn_dw <= brinfo.uop.ctrl.fcn_dw @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.op_fcn <= brinfo.uop.ctrl.op_fcn @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.imm_sel <= brinfo.uop.ctrl.imm_sel @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.op2_sel <= brinfo.uop.ctrl.op2_sel @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.op1_sel <= brinfo.uop.ctrl.op1_sel @[functional-unit.scala 426:13]
    io.brinfo.uop.ctrl.br_type <= brinfo.uop.ctrl.br_type @[functional-unit.scala 426:13]
    io.brinfo.uop.fu_code <= brinfo.uop.fu_code @[functional-unit.scala 426:13]
    io.brinfo.uop.iq_type <= brinfo.uop.iq_type @[functional-unit.scala 426:13]
    io.brinfo.uop.debug_pc <= brinfo.uop.debug_pc @[functional-unit.scala 426:13]
    io.brinfo.uop.is_rvc <= brinfo.uop.is_rvc @[functional-unit.scala 426:13]
    io.brinfo.uop.debug_inst <= brinfo.uop.debug_inst @[functional-unit.scala 426:13]
    io.brinfo.uop.inst <= brinfo.uop.inst @[functional-unit.scala 426:13]
    io.brinfo.uop.uopc <= brinfo.uop.uopc @[functional-unit.scala 426:13]
    wire _T_195 : UInt<1>[3] @[functional-unit.scala 437:31]
    _T_195[0] <= UInt<1>("h00") @[functional-unit.scala 437:31]
    _T_195[1] <= UInt<1>("h00") @[functional-unit.scala 437:31]
    _T_195[2] <= UInt<1>("h00") @[functional-unit.scala 437:31]
    reg r_val : UInt<1>[3], clock with : (reset => (reset, _T_195)) @[functional-unit.scala 437:23]
    reg r_data : UInt<64>[3], clock @[functional-unit.scala 438:19]
    reg r_pred : UInt<1>[3], clock @[functional-unit.scala 439:19]
    node _T_196 = eq(io.req.bits.uop.is_br, UInt<1>("h00")) @[micro-op.scala 110:26]
    node _T_197 = and(_T_196, io.req.bits.uop.is_sfb) @[micro-op.scala 110:33]
    node _T_198 = and(_T_197, UInt<1>("h00")) @[micro-op.scala 110:43]
    node _T_199 = and(_T_198, io.req.bits.pred_data) @[functional-unit.scala 440:51]
    node _T_200 = mux(io.req.bits.uop.ldst_is_rs1, io.req.bits.rs1_data, io.req.bits.rs2_data) @[functional-unit.scala 441:8]
    node _T_201 = eq(io.req.bits.uop.uopc, UInt<7>("h06d")) @[functional-unit.scala 442:30]
    node _T_202 = mux(_T_201, io.req.bits.rs2_data, alu.io.out) @[functional-unit.scala 442:8]
    node alu_out = mux(_T_199, _T_200, _T_202) @[functional-unit.scala 440:20]
    r_val[0] <= io.req.valid @[functional-unit.scala 443:13]
    node _T_203 = and(io.req.bits.uop.is_br, io.req.bits.uop.is_sfb) @[micro-op.scala 109:32]
    node _T_204 = and(_T_203, UInt<1>("h00")) @[micro-op.scala 109:42]
    node _T_205 = eq(pc_sel, UInt<2>("h01")) @[functional-unit.scala 444:54]
    node _T_206 = mux(_T_204, _T_205, alu_out) @[functional-unit.scala 444:19]
    r_data[0] <= _T_206 @[functional-unit.scala 444:13]
    node _T_207 = eq(io.req.bits.uop.is_br, UInt<1>("h00")) @[micro-op.scala 110:26]
    node _T_208 = and(_T_207, io.req.bits.uop.is_sfb) @[micro-op.scala 110:33]
    node _T_209 = and(_T_208, UInt<1>("h00")) @[micro-op.scala 110:43]
    node _T_210 = and(_T_209, io.req.bits.pred_data) @[functional-unit.scala 445:46]
    r_pred[0] <= _T_210 @[functional-unit.scala 445:13]
    r_val[1] <= r_val[0] @[functional-unit.scala 447:15]
    r_data[1] <= r_data[0] @[functional-unit.scala 448:15]
    r_pred[1] <= r_pred[0] @[functional-unit.scala 449:15]
    r_val[2] <= r_val[1] @[functional-unit.scala 447:15]
    r_data[2] <= r_data[1] @[functional-unit.scala 448:15]
    r_pred[2] <= r_pred[1] @[functional-unit.scala 449:15]
    io.resp.bits.data <= r_data[2] @[functional-unit.scala 451:21]
    io.resp.bits.predicated <= r_pred[2] @[functional-unit.scala 452:27]
    io.bypass[0].valid <= io.req.valid @[functional-unit.scala 457:22]
    node _T_211 = and(io.req.bits.uop.is_br, io.req.bits.uop.is_sfb) @[micro-op.scala 109:32]
    node _T_212 = and(_T_211, UInt<1>("h00")) @[micro-op.scala 109:42]
    node _T_213 = eq(pc_sel, UInt<2>("h01")) @[functional-unit.scala 458:67]
    node _T_214 = mux(_T_212, _T_213, alu_out) @[functional-unit.scala 458:32]
    io.bypass[0].bits.data <= _T_214 @[functional-unit.scala 458:26]
    io.bypass[1].valid <= r_val[0] @[functional-unit.scala 460:24]
    io.bypass[1].bits.data <= r_data[0] @[functional-unit.scala 461:28]
    io.bypass[2].valid <= r_val[1] @[functional-unit.scala 460:24]
    io.bypass[2].bits.data <= r_data[1] @[functional-unit.scala 461:28]
    io.resp.bits.fflags.valid <= UInt<1>("h00") @[functional-unit.scala 465:29]
    
