circuit RoundAnyRawFNToRecFN :
  module RoundAnyRawFNToRecFN : 
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<9>, sig : UInt<65>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node _T_3 = add(io.in.sExp, asSInt(UInt<9>("h080"))) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _T_4 = bits(_T_3, 8, 0) @[RoundAnyRawFNToRecFN.scala 104:14]
    node sAdjustedExp = cvt(_T_4) @[RoundAnyRawFNToRecFN.scala 104:31]
    node _T_5 = bits(io.in.sig, 64, 39) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _T_6 = bits(io.in.sig, 38, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node _T_7 = orr(_T_6) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(_T_5, _T_7) @[Cat.scala 29:58]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_8 = cat(UInt<24>("h00"), UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_9 = cat(_T_8, UInt<2>("h03")) @[Cat.scala 29:58]
    node _T_10 = shr(_T_9, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_11 = cat(UInt<1>("h00"), _T_10) @[Cat.scala 29:58]
    node _T_12 = not(_T_11) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_13 = and(_T_12, _T_9) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_14 = and(adjustedSig, _T_13) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_15 = orr(_T_14) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_16 = and(adjustedSig, _T_11) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_17 = orr(_T_16) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_18 = or(_T_15, _T_17) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_19 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_20 = and(_T_19, _T_15) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_21 = and(roundMagUp, _T_18) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_22 = or(_T_20, _T_21) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_23 = or(adjustedSig, _T_9) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_24 = shr(_T_23, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_25 = add(_T_24, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_26 = and(roundingMode_near_even, _T_15) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_27 = eq(_T_17, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_28 = and(_T_26, _T_27) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_29 = shr(_T_9, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_30 = mux(_T_28, _T_29, UInt<26>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_31 = not(_T_30) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_32 = and(_T_25, _T_31) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_33 = not(_T_9) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_34 = and(adjustedSig, _T_33) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_35 = shr(_T_34, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_36 = and(roundingMode_odd, _T_18) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_37 = shr(_T_13, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_39 = or(_T_35, _T_38) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_40 = mux(_T_22, _T_32, _T_39) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_41 = shr(_T_40, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_42 = cvt(_T_41) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_43 = add(sAdjustedExp, _T_42) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_44 = bits(_T_43, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_44 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_45 = bits(_T_40, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_46 = bits(_T_40, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_47 = mux(UInt<1>("h00"), _T_45, _T_46) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_47 @[RoundAnyRawFNToRecFN.scala 186:25]
    common_overflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 191:25]
    common_totalUnderflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_48 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_49 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_50 = mux(UInt<1>("h00"), _T_48, _T_49) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_51 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_52 = and(UInt<1>("h00"), _T_51) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_53 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_54 = orr(_T_53) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_55 = or(_T_52, _T_54) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_56 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_57 = and(_T_56, _T_50) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_58 = and(roundMagUp, _T_55) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_59 = or(_T_57, _T_58) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_60 = bits(_T_40, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_61 = bits(_T_40, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_62 = mux(UInt<1>("h00"), _T_60, _T_61) @[RoundAnyRawFNToRecFN.scala 209:16]
    common_underflow <= UInt<1>("h00") @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_63 = or(common_totalUnderflow, _T_18) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_63 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_64 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_65 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_66 = and(_T_64, _T_65) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_67 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_66, _T_67) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_68 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_68) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_69 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_69, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_70 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_71 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_70, _T_71) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_72 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_72) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_73 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_73) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_74 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_75 = mux(_T_74, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_76 = not(_T_75) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_77 = and(common_expOut, _T_76) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_78 = not(UInt<9>("h06b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_79 = mux(pegMinNonzeroMagOut, _T_78, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_80 = not(_T_79) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_81 = and(_T_77, _T_80) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_82 = mux(pegMaxFiniteMagOut, UInt<9>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_83 = not(_T_82) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_84 = and(_T_81, _T_83) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_85 = mux(notNaN_isInfOut, UInt<9>("h040"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_86 = not(_T_85) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_87 = and(_T_84, _T_86) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_88 = mux(pegMinNonzeroMagOut, UInt<9>("h06b"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_89 = or(_T_87, _T_88) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_90 = mux(pegMaxFiniteMagOut, UInt<9>("h017f"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_91 = or(_T_89, _T_90) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_92 = mux(notNaN_isInfOut, UInt<9>("h0180"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_93 = or(_T_91, _T_92) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_94 = mux(isNaNOut, UInt<9>("h01c0"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_93, _T_94) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_95 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_96 = or(_T_95, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_97 = mux(isNaNOut, UInt<23>("h0400000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_98 = mux(_T_96, _T_97, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_99 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_100 = mux(_T_99, UInt<23>("h07fffff"), UInt<23>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_98, _T_100) @[RoundAnyRawFNToRecFN.scala 281:11]
    node _T_101 = cat(signOut, expOut) @[Cat.scala 29:58]
    node _T_102 = cat(_T_101, fractOut) @[Cat.scala 29:58]
    io.out <= _T_102 @[RoundAnyRawFNToRecFN.scala 284:12]
    node _T_103 = cat(underflow, inexact) @[Cat.scala 29:58]
    node _T_104 = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 29:58]
    node _T_105 = cat(_T_104, overflow) @[Cat.scala 29:58]
    node _T_106 = cat(_T_105, _T_103) @[Cat.scala 29:58]
    io.exceptionFlags <= _T_106 @[RoundAnyRawFNToRecFN.scala 285:23]
    
