circuit MulAddRecFNToRaw_preMul :
  module MulAddRecFNToRaw_preMul : 
    output io : {flip op : UInt<2>, flip a : UInt<65>, flip b : UInt<65>, flip c : UInt<65>, mulAddA : UInt<53>, mulAddB : UInt<53>, mulAddC : UInt<106>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<13>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<6>, highAlignedSigC : UInt<55>, bit0AlignedSigC : UInt<1>}}
    
    io is invalid
    node _T = bits(io.a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node _T_12 = eq(_T_2, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_13 = bits(io.a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_14 = cat(UInt<1>("h00"), _T_12) @[Cat.scala 29:58]
    node _T_15 = cat(_T_14, _T_13) @[Cat.scala 29:58]
    rawA.sig <= _T_15 @[rawFloatFromRecFN.scala 60:20]
    node _T_16 = bits(io.b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_17 = bits(_T_16, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_18 = eq(_T_17, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_19 = bits(_T_16, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_20 = eq(_T_19, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_21 = bits(_T_16, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_22 = and(_T_20, _T_21) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_22 @[rawFloatFromRecFN.scala 55:20]
    node _T_23 = bits(_T_16, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_24 = eq(_T_23, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_25 = and(_T_20, _T_24) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_25 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_18 @[rawFloatFromRecFN.scala 57:20]
    node _T_26 = bits(io.b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_26 @[rawFloatFromRecFN.scala 58:20]
    node _T_27 = cvt(_T_16) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_27 @[rawFloatFromRecFN.scala 59:20]
    node _T_28 = eq(_T_18, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_29 = bits(io.b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_30 = cat(UInt<1>("h00"), _T_28) @[Cat.scala 29:58]
    node _T_31 = cat(_T_30, _T_29) @[Cat.scala 29:58]
    rawB.sig <= _T_31 @[rawFloatFromRecFN.scala 60:20]
    node _T_32 = bits(io.c, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_33 = bits(_T_32, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_34 = eq(_T_33, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_35 = bits(_T_32, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_36 = eq(_T_35, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_37 = bits(_T_32, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_38 = and(_T_36, _T_37) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_38 @[rawFloatFromRecFN.scala 55:20]
    node _T_39 = bits(_T_32, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_40 = eq(_T_39, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_41 = and(_T_36, _T_40) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_41 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_34 @[rawFloatFromRecFN.scala 57:20]
    node _T_42 = bits(io.c, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_42 @[rawFloatFromRecFN.scala 58:20]
    node _T_43 = cvt(_T_32) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_43 @[rawFloatFromRecFN.scala 59:20]
    node _T_44 = eq(_T_34, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_45 = bits(io.c, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_46 = cat(UInt<1>("h00"), _T_44) @[Cat.scala 29:58]
    node _T_47 = cat(_T_46, _T_45) @[Cat.scala 29:58]
    rawC.sig <= _T_47 @[rawFloatFromRecFN.scala 60:20]
    node _T_48 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_49 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_48, _T_49) @[MulAddRecFN.scala 98:42]
    node _T_50 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_51 = add(_T_50, asSInt(UInt<12>("h0838"))) @[MulAddRecFN.scala 101:32]
    node _T_52 = tail(_T_51, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_52) @[MulAddRecFN.scala 101:32]
    node _T_53 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_54 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_53, _T_54) @[MulAddRecFN.scala 103:42]
    node _T_55 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_56 = tail(_T_55, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_56) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 12, 0) @[MulAddRecFN.scala 108:42]
    node _T_57 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_58 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_57, _T_58) @[MulAddRecFN.scala 109:50]
    node _T_59 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_60 = leq(posNatCAlignDist, UInt<6>("h035")) @[MulAddRecFN.scala 111:60]
    node _T_61 = or(isMinCAlign, _T_60) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_59, _T_61) @[MulAddRecFN.scala 111:23]
    node _T_62 = lt(posNatCAlignDist, UInt<8>("h0a1")) @[MulAddRecFN.scala 115:34]
    node _T_63 = bits(posNatCAlignDist, 7, 0) @[MulAddRecFN.scala 116:33]
    node _T_64 = mux(_T_62, _T_63, UInt<8>("h0a1")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_64) @[MulAddRecFN.scala 113:12]
    node _T_65 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node _T_66 = mux(doSubMags, _T_65, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_67 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node _T_68 = mux(_T_67, UInt<111>("h07fffffffffffffffffffffffffff"), UInt<111>("h00")) @[Bitwise.scala 72:12]
    node _T_69 = cat(_T_66, _T_68) @[Cat.scala 29:58]
    node _T_70 = asSInt(_T_69) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_70, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_71 = shl(rawC.sig, 0) @[MulAddRecFN.scala 125:30]
    wire _T_72 : UInt<1>[14] @[primitives.scala 119:30]
    _T_72 is invalid @[primitives.scala 119:30]
    node _T_73 = bits(_T_71, 3, 0) @[primitives.scala 121:33]
    node _T_74 = orr(_T_73) @[primitives.scala 121:54]
    _T_72[0] <= _T_74 @[primitives.scala 121:28]
    node _T_75 = bits(_T_71, 7, 4) @[primitives.scala 121:33]
    node _T_76 = orr(_T_75) @[primitives.scala 121:54]
    _T_72[1] <= _T_76 @[primitives.scala 121:28]
    node _T_77 = bits(_T_71, 11, 8) @[primitives.scala 121:33]
    node _T_78 = orr(_T_77) @[primitives.scala 121:54]
    _T_72[2] <= _T_78 @[primitives.scala 121:28]
    node _T_79 = bits(_T_71, 15, 12) @[primitives.scala 121:33]
    node _T_80 = orr(_T_79) @[primitives.scala 121:54]
    _T_72[3] <= _T_80 @[primitives.scala 121:28]
    node _T_81 = bits(_T_71, 19, 16) @[primitives.scala 121:33]
    node _T_82 = orr(_T_81) @[primitives.scala 121:54]
    _T_72[4] <= _T_82 @[primitives.scala 121:28]
    node _T_83 = bits(_T_71, 23, 20) @[primitives.scala 121:33]
    node _T_84 = orr(_T_83) @[primitives.scala 121:54]
    _T_72[5] <= _T_84 @[primitives.scala 121:28]
    node _T_85 = bits(_T_71, 27, 24) @[primitives.scala 121:33]
    node _T_86 = orr(_T_85) @[primitives.scala 121:54]
    _T_72[6] <= _T_86 @[primitives.scala 121:28]
    node _T_87 = bits(_T_71, 31, 28) @[primitives.scala 121:33]
    node _T_88 = orr(_T_87) @[primitives.scala 121:54]
    _T_72[7] <= _T_88 @[primitives.scala 121:28]
    node _T_89 = bits(_T_71, 35, 32) @[primitives.scala 121:33]
    node _T_90 = orr(_T_89) @[primitives.scala 121:54]
    _T_72[8] <= _T_90 @[primitives.scala 121:28]
    node _T_91 = bits(_T_71, 39, 36) @[primitives.scala 121:33]
    node _T_92 = orr(_T_91) @[primitives.scala 121:54]
    _T_72[9] <= _T_92 @[primitives.scala 121:28]
    node _T_93 = bits(_T_71, 43, 40) @[primitives.scala 121:33]
    node _T_94 = orr(_T_93) @[primitives.scala 121:54]
    _T_72[10] <= _T_94 @[primitives.scala 121:28]
    node _T_95 = bits(_T_71, 47, 44) @[primitives.scala 121:33]
    node _T_96 = orr(_T_95) @[primitives.scala 121:54]
    _T_72[11] <= _T_96 @[primitives.scala 121:28]
    node _T_97 = bits(_T_71, 51, 48) @[primitives.scala 121:33]
    node _T_98 = orr(_T_97) @[primitives.scala 121:54]
    _T_72[12] <= _T_98 @[primitives.scala 121:28]
    node _T_99 = bits(_T_71, 53, 52) @[primitives.scala 124:15]
    node _T_100 = orr(_T_99) @[primitives.scala 124:57]
    _T_72[13] <= _T_100 @[primitives.scala 123:38]
    node _T_101 = cat(_T_72[2], _T_72[1]) @[primitives.scala 125:20]
    node _T_102 = cat(_T_101, _T_72[0]) @[primitives.scala 125:20]
    node _T_103 = cat(_T_72[4], _T_72[3]) @[primitives.scala 125:20]
    node _T_104 = cat(_T_72[6], _T_72[5]) @[primitives.scala 125:20]
    node _T_105 = cat(_T_104, _T_103) @[primitives.scala 125:20]
    node _T_106 = cat(_T_105, _T_102) @[primitives.scala 125:20]
    node _T_107 = cat(_T_72[9], _T_72[8]) @[primitives.scala 125:20]
    node _T_108 = cat(_T_107, _T_72[7]) @[primitives.scala 125:20]
    node _T_109 = cat(_T_72[11], _T_72[10]) @[primitives.scala 125:20]
    node _T_110 = cat(_T_72[13], _T_72[12]) @[primitives.scala 125:20]
    node _T_111 = cat(_T_110, _T_109) @[primitives.scala 125:20]
    node _T_112 = cat(_T_111, _T_108) @[primitives.scala 125:20]
    node _T_113 = cat(_T_112, _T_106) @[primitives.scala 125:20]
    node _T_114 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_115 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_114) @[primitives.scala 77:58]
    node _T_116 = bits(_T_115, 36, 24) @[primitives.scala 79:22]
    node _T_117 = bits(_T_116, 7, 0) @[Bitwise.scala 109:18]
    node _T_118 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_119 = xor(UInt<8>("h0ff"), _T_118) @[Bitwise.scala 102:21]
    node _T_120 = shr(_T_117, 4) @[Bitwise.scala 103:21]
    node _T_121 = and(_T_120, _T_119) @[Bitwise.scala 103:31]
    node _T_122 = bits(_T_117, 3, 0) @[Bitwise.scala 103:46]
    node _T_123 = shl(_T_122, 4) @[Bitwise.scala 103:65]
    node _T_124 = not(_T_119) @[Bitwise.scala 103:77]
    node _T_125 = and(_T_123, _T_124) @[Bitwise.scala 103:75]
    node _T_126 = or(_T_121, _T_125) @[Bitwise.scala 103:39]
    node _T_127 = bits(_T_119, 5, 0) @[Bitwise.scala 102:28]
    node _T_128 = shl(_T_127, 2) @[Bitwise.scala 102:47]
    node _T_129 = xor(_T_119, _T_128) @[Bitwise.scala 102:21]
    node _T_130 = shr(_T_126, 2) @[Bitwise.scala 103:21]
    node _T_131 = and(_T_130, _T_129) @[Bitwise.scala 103:31]
    node _T_132 = bits(_T_126, 5, 0) @[Bitwise.scala 103:46]
    node _T_133 = shl(_T_132, 2) @[Bitwise.scala 103:65]
    node _T_134 = not(_T_129) @[Bitwise.scala 103:77]
    node _T_135 = and(_T_133, _T_134) @[Bitwise.scala 103:75]
    node _T_136 = or(_T_131, _T_135) @[Bitwise.scala 103:39]
    node _T_137 = bits(_T_129, 6, 0) @[Bitwise.scala 102:28]
    node _T_138 = shl(_T_137, 1) @[Bitwise.scala 102:47]
    node _T_139 = xor(_T_129, _T_138) @[Bitwise.scala 102:21]
    node _T_140 = shr(_T_136, 1) @[Bitwise.scala 103:21]
    node _T_141 = and(_T_140, _T_139) @[Bitwise.scala 103:31]
    node _T_142 = bits(_T_136, 6, 0) @[Bitwise.scala 103:46]
    node _T_143 = shl(_T_142, 1) @[Bitwise.scala 103:65]
    node _T_144 = not(_T_139) @[Bitwise.scala 103:77]
    node _T_145 = and(_T_143, _T_144) @[Bitwise.scala 103:75]
    node _T_146 = or(_T_141, _T_145) @[Bitwise.scala 103:39]
    node _T_147 = bits(_T_116, 12, 8) @[Bitwise.scala 109:44]
    node _T_148 = bits(_T_147, 3, 0) @[Bitwise.scala 109:18]
    node _T_149 = bits(_T_148, 1, 0) @[Bitwise.scala 109:18]
    node _T_150 = bits(_T_149, 0, 0) @[Bitwise.scala 109:18]
    node _T_151 = bits(_T_149, 1, 1) @[Bitwise.scala 109:44]
    node _T_152 = cat(_T_150, _T_151) @[Cat.scala 29:58]
    node _T_153 = bits(_T_148, 3, 2) @[Bitwise.scala 109:44]
    node _T_154 = bits(_T_153, 0, 0) @[Bitwise.scala 109:18]
    node _T_155 = bits(_T_153, 1, 1) @[Bitwise.scala 109:44]
    node _T_156 = cat(_T_154, _T_155) @[Cat.scala 29:58]
    node _T_157 = cat(_T_152, _T_156) @[Cat.scala 29:58]
    node _T_158 = bits(_T_147, 4, 4) @[Bitwise.scala 109:44]
    node _T_159 = cat(_T_157, _T_158) @[Cat.scala 29:58]
    node _T_160 = cat(_T_146, _T_159) @[Cat.scala 29:58]
    node _T_161 = and(_T_113, _T_160) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_161) @[MulAddRecFN.scala 133:11]
    node _T_162 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_163 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_164 = andr(_T_163) @[MulAddRecFN.scala 137:39]
    node _T_165 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_166 = and(_T_164, _T_165) @[MulAddRecFN.scala 137:44]
    node _T_167 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_168 = orr(_T_167) @[MulAddRecFN.scala 138:39]
    node _T_169 = or(_T_168, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node _T_170 = mux(doSubMags, _T_166, _T_169) @[MulAddRecFN.scala 136:16]
    node _T_171 = asUInt(_T_162) @[Cat.scala 29:58]
    node alignedSigC = cat(_T_171, _T_170) @[Cat.scala 29:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_172 = bits(alignedSigC, 106, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_172 @[MulAddRecFN.scala 146:16]
    node _T_173 = bits(rawA.sig, 51, 51) @[common.scala 81:56]
    node _T_174 = eq(_T_173, UInt<1>("h00")) @[common.scala 81:49]
    node _T_175 = and(rawA.isNaN, _T_174) @[common.scala 81:46]
    node _T_176 = bits(rawB.sig, 51, 51) @[common.scala 81:56]
    node _T_177 = eq(_T_176, UInt<1>("h00")) @[common.scala 81:49]
    node _T_178 = and(rawB.isNaN, _T_177) @[common.scala 81:46]
    node _T_179 = or(_T_175, _T_178) @[MulAddRecFN.scala 149:32]
    node _T_180 = bits(rawC.sig, 51, 51) @[common.scala 81:56]
    node _T_181 = eq(_T_180, UInt<1>("h00")) @[common.scala 81:49]
    node _T_182 = and(rawC.isNaN, _T_181) @[common.scala 81:46]
    node _T_183 = or(_T_179, _T_182) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_183 @[MulAddRecFN.scala 148:30]
    node _T_184 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_184 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_185 = sub(sExpAlignedProd, asSInt(UInt<7>("h035"))) @[MulAddRecFN.scala 161:53]
    node _T_186 = tail(_T_185, 1) @[MulAddRecFN.scala 161:53]
    node _T_187 = asSInt(_T_186) @[MulAddRecFN.scala 161:53]
    node _T_188 = mux(CIsDominant, rawC.sExp, _T_187) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_188 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_189 = bits(CAlignDist, 5, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_189 @[MulAddRecFN.scala 164:34]
    node _T_190 = bits(alignedSigC, 161, 107) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_190 @[MulAddRecFN.scala 165:34]
    node _T_191 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_191 @[MulAddRecFN.scala 167:34]
    
