/*
:name: enum_simple
:type: parsing
*/

let X = ::enum(
  ,l0
  ,l1
  ,l2
)

let a = X.l0
let b = X.l1

cassert a!=b
cassert a == X.l0
cassert b == X.l1

// Typecast to get enum value (one hot encoded)
cassert l0@[] == 0sb001
cassert l1@[] == 0sb010
cassert l2@[] == 0sb100

let V3 = ::enum(
   ,a
   ,b=5
   ,c
)
cassert V3.a == 1
cassert V3.b == 5
cassert V3.c == 2

let V4 = :int:enum( // when integer is the enum type, it is the typical enum
   ,a
   ,b=5
   ,c
)
cassert V4.a == 0
cassert V4.b == 5
cassert V4.c == 6

